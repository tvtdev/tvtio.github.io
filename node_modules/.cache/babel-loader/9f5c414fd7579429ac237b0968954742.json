{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/api/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/home/ubuntu/api/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntu/api/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/ubuntu/api/docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ubuntu/api/docs/src/Post.js\";\nimport React, { useState, useReducer, useEffect } from 'react';\nimport { css } from 'glamor';\nimport { Link } from 'react-router-dom';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport debounce from 'debounce';\nimport { createPost, updatePost as UpdatePost } from './graphql/mutations';\nimport { onUpdatePostWithId } from './graphql/subscriptions';\nimport uuid from 'uuid/v4';\nimport Container from './Container';\nvar CLIENTID = uuid();\n\nvar ReactMarkdown = require('react-markdown');\n\nvar input = \"# This is a header\\n\\nAnd this is a paragraph\\n\\n\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'updateMarkdown':\n      return _objectSpread({}, state, {\n        markdown: action.markdown,\n        clientId: CLIENTID\n      });\n\n    case 'updateTitle':\n      return _objectSpread({}, state, {\n        title: action.title,\n        clientId: CLIENTID\n      });\n\n    case 'updatePost':\n      return action.post;\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction createNewPost(_x, _x2) {\n  return _createNewPost.apply(this, arguments);\n}\n\nfunction _createNewPost() {\n  _createNewPost = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(post, dispatch) {\n    var postData, existingPost;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return API.graphql(graphqlOperation(createPost, {\n              input: post\n            }));\n\n          case 3:\n            postData = _context2.sent;\n            dispatch({\n              type: 'updatePost',\n              post: _objectSpread({}, postData.data.createPost, {\n                clientId: CLIENTID\n              })\n            });\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n            if (_context2.t0.errors[0].errorType === \"DynamoDB:ConditionalCheckFailedException\") {\n              existingPost = _context2.t0.errors[0].data;\n              dispatch({\n                type: 'updatePost',\n                post: _objectSpread({}, existingPost, {\n                  clientId: CLIENTID\n                })\n              });\n            }\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _createNewPost.apply(this, arguments);\n}\n\nvar debouncedUpdatePost = debounce(\n/*#__PURE__*/\nfunction () {\n  var _updatePost = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(post) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return API.graphql(graphqlOperation(UpdatePost, {\n              input: post\n            }));\n\n          case 3:\n            console.log('post has been updated!');\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('error:', _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  function updatePost(_x3) {\n    return _updatePost.apply(this, arguments);\n  }\n\n  return updatePost;\n}(), 250);\n\nvar Post = function Post(_ref) {\n  var params = _ref.match.params;\n  var post = {\n    id: params.id,\n    title: params.title,\n    clientId: CLIENTID,\n    markdown: '# Loading...'\n  };\n\n  var _useReducer = useReducer(reducer, post),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      postState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      updateIsEditing = _useState2[1];\n\n  function toggleMarkdown() {\n    updateIsEditing(!isEditing);\n  }\n\n  useEffect(function () {\n    var post = _objectSpread({}, postState, {\n      markdown: input\n    });\n\n    createNewPost(post, dispatch);\n  }, []);\n\n  function updateMarkdown(e) {\n    dispatch({\n      type: 'updateMarkdown',\n      markdown: e.target.value\n    });\n    var newPost = {\n      id: post.id,\n      markdown: e.target.value,\n      clientId: CLIENTID,\n      createdAt: post.createdAt,\n      title: postState.title\n    };\n    debouncedUpdatePost(newPost, dispatch);\n  }\n\n  function updatePostTitle(e) {\n    dispatch({\n      type: 'updateTitle',\n      title: e.target.value\n    });\n    var newPost = {\n      id: post.id,\n      markdown: postState.markdown,\n      clientId: CLIENTID,\n      createdAt: post.createdAt,\n      title: e.target.value\n    };\n    debouncedUpdatePost(newPost, dispatch);\n  }\n\n  useEffect(function () {\n    var subscriber = API.graphql(graphqlOperation(onUpdatePostWithId, {\n      id: post.id\n    })).subscribe({\n      next: function next(data) {\n        if (CLIENTID === data.value.data.onUpdatePostWithId.clientId) return;\n        var postFromSub = data.value.data.onUpdatePostWithId;\n        dispatch({\n          type: 'updatePost',\n          post: postFromSub\n        });\n      }\n    });\n    return function () {\n      return subscriber.unsubscribe();\n    };\n  }, []);\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, styles.header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(Link, Object.assign({\n    to: \"/\"\n  }, styles.link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"p\", Object.assign({}, styles.heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"write\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"\\u270D\\uFE0F\"), \" Write with me\"))), React.createElement(\"div\", Object.assign({}, styles.container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(\"div\", Object.assign({}, styles.body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"div\", Object.assign({}, styles.toggleButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(\"p\", Object.assign({}, styles.fancy, styles.toggleButtonText, {\n    onClick: toggleMarkdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), isEditing ? 'Done' : 'Edit')), !isEditing && React.createElement(\"h1\", Object.assign({}, styles.postTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), postState.title), !isEditing && React.createElement(ReactMarkdown, {\n    source: postState.markdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), isEditing && React.createElement(\"input\", Object.assign({\n    value: postState.title,\n    onChange: updatePostTitle\n  }, styles.input, {\n    placeholder: \"Post Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), isEditing && React.createElement(\"textarea\", Object.assign({}, styles.textarea, {\n    value: postState.markdown,\n    onChange: updateMarkdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })))));\n};\n\nexport default Post;\nvar styles = {\n  header: css({\n    height: 70,\n    boxShadow: '0px 0px 12px rgba(0, 0, 0, .2)',\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: 30\n  }),\n  link: css({\n    textDecoration: 'none',\n    color: 'black'\n  }),\n  heading: css({\n    margin: 0,\n    fontFamily: \"Francois One, sans-serif\",\n    fontSize: 28\n  }),\n  toggleButton: css({\n    width: 80,\n    cursor: 'pointer',\n    backgroundColor: '#66e2d5',\n    border: '2px solid black'\n  }),\n  toggleButtonText: css({\n    textAlign: 'center',\n    fontSize: 18,\n    margin: '2px 0px'\n  }),\n  fancy: css({\n    fontFamily: \"Francois One, sans-serif\"\n  }),\n  input: css({\n    outline: 'none',\n    border: 'none',\n    fontFamily: \"ZCOOL XiaoWei, serif\",\n    fontSize: 38,\n    marginTop: 30,\n    marginBottom: 8,\n    color: 'rgba(0, 0, 0, .35)',\n    width: '900px',\n    '@media(max-width: 940px)': {\n      width: 'calc(100% - 40px)',\n      padding: '20px 20px 20px 0px'\n    }\n  }),\n  textarea: css({\n    width: 900,\n    marginTop: 10,\n    border: '3px solid black',\n    minHeight: 'calc(100vh - 350px)',\n    outline: 'none',\n    fontSize: 18,\n    '@media(max-width: 940px)': {\n      width: 'calc(100% - 40px)',\n      padding: '20px 20px'\n    }\n  }),\n  postTitle: css({\n    fontFamily: \"ZCOOL XiaoWei, serif\",\n    fontSize: 66,\n    '@media(max-width: 650px)': {\n      fontSize: 50\n    }\n  }),\n  container: css({\n    overflowY: 'scroll',\n    maxHeight: 'calc(100vh - 98px)'\n  }),\n  body: css({\n    padding: '50px 0px 0px',\n    width: '900px',\n    margin: '0 auto',\n    '@media(max-width: 940px)': {\n      width: 'calc(100% - 40px)',\n      padding: '20px 20px'\n    }\n  })\n};","map":{"version":3,"sources":["/home/ubuntu/api/docs/src/Post.js"],"names":["React","useState","useReducer","useEffect","css","Link","API","graphqlOperation","debounce","createPost","updatePost","UpdatePost","onUpdatePostWithId","uuid","Container","CLIENTID","ReactMarkdown","require","input","reducer","state","action","type","markdown","clientId","title","post","Error","createNewPost","dispatch","graphql","postData","data","errors","errorType","existingPost","debouncedUpdatePost","console","log","Post","params","match","id","postState","isEditing","updateIsEditing","toggleMarkdown","updateMarkdown","e","target","value","newPost","createdAt","updatePostTitle","subscriber","subscribe","next","postFromSub","unsubscribe","styles","header","link","heading","container","body","toggleButton","fancy","toggleButtonText","postTitle","textarea","height","boxShadow","display","alignItems","paddingLeft","textDecoration","color","margin","fontFamily","fontSize","width","cursor","backgroundColor","border","textAlign","outline","marginTop","marginBottom","padding","minHeight","overflowY","maxHeight"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from 'react'\nimport { css } from 'glamor'\nimport { Link } from 'react-router-dom'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport debounce from 'debounce';\nimport { createPost, updatePost as UpdatePost } from './graphql/mutations'\nimport { onUpdatePostWithId } from './graphql/subscriptions'\nimport uuid from 'uuid/v4'\nimport Container from './Container'\n\nconst CLIENTID = uuid()\n\nconst ReactMarkdown = require('react-markdown')\nconst input = `# This is a header\\n\\nAnd this is a paragraph\\n\\n`\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'updateMarkdown':\n      return {\n        ...state,\n        markdown: action.markdown,\n        clientId: CLIENTID\n      };\n    case 'updateTitle':\n      return {\n        ...state,\n        title: action.title,\n        clientId: CLIENTID\n      };\n    case 'updatePost':\n      return action.post\n    default:\n      throw new Error();\n  }\n}\n\nasync function createNewPost(post, dispatch) {\n  try {\n    const postData = await API.graphql(graphqlOperation(createPost, { input: post }))\n    dispatch({\n      type: 'updatePost',\n      post: {\n        ...postData.data.createPost,\n        clientId: CLIENTID\n      }\n    })\n  } catch (err) {\n    if (err.errors[0].errorType === \"DynamoDB:ConditionalCheckFailedException\") {\n      const existingPost = err.errors[0].data\n      dispatch({\n        type: 'updatePost',\n        post: {\n          ...existingPost,\n          clientId: CLIENTID\n        }\n      })\n    }\n  }\n}\n\nconst debouncedUpdatePost = debounce(\n  async function updatePost(post) {\n    try {\n      await API.graphql(graphqlOperation(UpdatePost, { input: post }))\n      console.log('post has been updated!')\n    } catch (err) {\n      console.log('error:', err)\n    }\n  },\n  250\n)\n\nconst Post = ({ match: { params } }) => {\n  const post = {\n    id: params.id,\n    title: params.title,\n    clientId: CLIENTID,\n    markdown: '# Loading...'\n  }\n  const [postState, dispatch] = useReducer(reducer, post)\n  const [isEditing, updateIsEditing] = useState(false)\n\n  function toggleMarkdown() {\n    updateIsEditing(!isEditing)\n  }\n\n  useEffect(() => {\n    const post = {\n      ...postState,\n      markdown: input\n    }\n    createNewPost(post, dispatch)\n  }, [])\n\n  function updateMarkdown(e) {\n    dispatch({\n      type: 'updateMarkdown',\n      markdown: e.target.value,\n    })\n    const newPost = {\n      id: post.id,\n      markdown: e.target.value,\n      clientId: CLIENTID,\n      createdAt: post.createdAt,\n      title: postState.title\n    }\n    debouncedUpdatePost(newPost, dispatch)\n  }\n\n  function updatePostTitle(e) {\n    dispatch({\n      type: 'updateTitle',\n      title: e.target.value\n    })\n    const newPost = {\n      id: post.id,\n      markdown: postState.markdown,\n      clientId: CLIENTID,\n      createdAt: post.createdAt,\n      title: e.target.value\n    }\n    debouncedUpdatePost(newPost, dispatch)\n  }\n\n  useEffect(() => {\n    const subscriber = API.graphql(graphqlOperation(onUpdatePostWithId, {\n      id: post.id\n    })).subscribe({\n      next: data => {\n        if (CLIENTID === data.value.data.onUpdatePostWithId.clientId) return\n        const postFromSub = data.value.data.onUpdatePostWithId\n        dispatch({\n          type: 'updatePost',\n          post: postFromSub\n        })\n      }\n    });\n    return () => subscriber.unsubscribe()\n  }, [])\n\n  return (\n    <Container>\n      <div {...styles.header}>\n        <Link to='/' {...styles.link}>\n          <p {...styles.heading}><span role='img' aria-label='write'>✍️</span> Write with me</p>\n        </Link>\n      </div>\n      <div {...styles.container}>\n        <div {...styles.body}>\n          <div {...styles.toggleButton}>\n            <p {...styles.fancy} {...styles.toggleButtonText} onClick={toggleMarkdown}>\n              {isEditing ? 'Done' : 'Edit'}\n            </p>\n          </div>\n          {!isEditing && <h1 {...styles.postTitle}>{postState.title}</h1>}\n          {!isEditing && <ReactMarkdown source={postState.markdown} />}\n          {isEditing && (\n            <input\n              value={postState.title}\n              onChange={updatePostTitle}\n              {...styles.input}\n              placeholder='Post Title'\n            />\n          )}\n          {isEditing && <textarea {...styles.textarea} value={postState.markdown} onChange={updateMarkdown} />}\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default Post;\n\nconst styles = {\n  header: css({\n    height: 70,\n    boxShadow: '0px 0px 12px rgba(0, 0, 0, .2)',\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: 30,\n  }),\n  link: css({\n    textDecoration: 'none',\n    color: 'black'\n  }),\n  heading: css({\n    margin: 0,\n    fontFamily: \"Francois One, sans-serif\",\n    fontSize: 28\n  }),\n  toggleButton: css({\n    width: 80,\n    cursor: 'pointer',\n    backgroundColor: '#66e2d5',\n    border: '2px solid black',\n  }),\n  toggleButtonText: css({\n    textAlign: 'center',\n    fontSize: 18,\n    margin: '2px 0px'\n  }),\n  fancy: css({\n    fontFamily: \"Francois One, sans-serif\"\n  }),\n  input: css({\n    outline: 'none',\n    border: 'none',\n    fontFamily: \"ZCOOL XiaoWei, serif\",\n    fontSize: 38,\n    marginTop: 30,\n    marginBottom: 8,\n    color: 'rgba(0, 0, 0, .35)',\n    width: '900px',\n    '@media(max-width: 940px)': {\n      width: 'calc(100% - 40px)',\n      padding: '20px 20px 20px 0px'\n    }\n  }),\n  textarea: css({\n    width: 900,\n    marginTop: 10,\n    border: '3px solid black',\n    minHeight: 'calc(100vh - 350px)',\n    outline: 'none',\n    fontSize: 18,\n    '@media(max-width: 940px)': {\n      width: 'calc(100% - 40px)',\n      padding: '20px 20px'\n    }\n  }),\n  postTitle: css({\n    fontFamily: \"ZCOOL XiaoWei, serif\",\n    fontSize: 66,\n    '@media(max-width: 650px)': {\n      fontSize: 50\n    }\n  }),\n  container: css({\n    overflowY: 'scroll',\n    maxHeight: 'calc(100vh - 98px)',\n  }),\n  body: css({\n    padding: '50px 0px 0px',\n    width: '900px',\n    margin: '0 auto',\n    '@media(max-width: 940px)': {\n      width: 'calc(100% - 40px)',\n      padding: '20px 20px'\n    }\n  })\n}"]},"metadata":{},"sourceType":"module"}
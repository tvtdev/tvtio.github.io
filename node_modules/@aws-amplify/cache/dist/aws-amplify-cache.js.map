{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./lib-esm/BrowserStorageCache.js","webpack:///./lib-esm/InMemoryCache.js","webpack:///./lib-esm/StorageCache.js","webpack:///./lib-esm/Utils/CacheList.js","webpack:///./lib-esm/Utils/CacheUtils.js","webpack:///./lib-esm/Utils/index.js","webpack:///./lib-esm/index.js","webpack:///external \"@aws-amplify/core\""],"names":["__extends","extendStatics","__proto__","d","b","Object","__","logger","BrowserStorageCache","_this","cacheConfig","config","_super","curSize","item","getCurrTime","JSON","text","itemSize","size","spaceItemNeed","cacheThresholdSpace","keys","keyInCache","i","key","items","remainedSize","val","a","prefixedKey","cacheItemOptions","priority","options","expires","validKeys","sizeToPop","ret","keysToRemove","Number","defaultConfig","instance","InMemoryCache","CacheObject","presentKeyPrio","cacheListIdx","popedItemKey","_i","_a","StorageCache","isInteger","cacheLimit","data","timestamp","visitedTime","type","byteSize","getByteLength","DoubleLinkedNode","keyVal","CacheList","tmp","node","removedItem","keyPrefix","capacityInBytes","itemMaxSize","defaultTTL","defaultPriority","warningThreshold","storage","str","charCode","currTime","_isInteger","isFinite","Math","store","Amplify"],"mappings":"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","file":"aws-amplify-cache.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@aws-amplify/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_cache\", [\"@aws-amplify/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_cache\"] = factory(require(\"@aws-amplify/core\"));\n\telse\n\t\troot[\"aws_amplify_cache\"] = factory(root[\"@aws-amplify/core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__aws_amplify_core__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib-esm/index.js\");\n","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { defaultConfig, getCurrTime } from './Utils';\nimport StorageCache from './StorageCache';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('Cache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\nvar BrowserStorageCache = /** @class */ (function (_super) {\n    __extends(BrowserStorageCache, _super);\n    /**\n     * initialize the cache\n     * @param config - the configuration of the cache\n     */\n    function BrowserStorageCache(config) {\n        var _this = this;\n        var cacheConfig = config\n            ? Object.assign({}, defaultConfig, config)\n            : defaultConfig;\n        _this = _super.call(this, cacheConfig) || this;\n        _this.config.storage = cacheConfig.storage;\n        _this.getItem = _this.getItem.bind(_this);\n        _this.setItem = _this.setItem.bind(_this);\n        _this.removeItem = _this.removeItem.bind(_this);\n        return _this;\n    }\n    /**\n     * decrease current size of the cache\n     *\n     * @private\n     * @param amount - the amount of the cache size which needs to be decreased\n     */\n    BrowserStorageCache.prototype._decreaseCurSizeInBytes = function (amount) {\n        var curSize = this.getCacheCurSize();\n        this.config.storage.setItem(this.cacheCurSizeKey, (curSize - amount).toString());\n    };\n    /**\n     * increase current size of the cache\n     *\n     * @private\n     * @param amount - the amount of the cache szie which need to be increased\n     */\n    BrowserStorageCache.prototype._increaseCurSizeInBytes = function (amount) {\n        var curSize = this.getCacheCurSize();\n        this.config.storage.setItem(this.cacheCurSizeKey, (curSize + amount).toString());\n    };\n    /**\n     * update the visited time if item has been visited\n     *\n     * @private\n     * @param item - the item which need to be refreshed\n     * @param prefixedKey - the key of the item\n     *\n     * @return the refreshed item\n     */\n    BrowserStorageCache.prototype._refreshItem = function (item, prefixedKey) {\n        item.visitedTime = getCurrTime();\n        this.config.storage.setItem(prefixedKey, JSON.stringify(item));\n        return item;\n    };\n    /**\n     * check wether item is expired\n     *\n     * @private\n     * @param key - the key of the item\n     *\n     * @return true if the item is expired.\n     */\n    BrowserStorageCache.prototype._isExpired = function (key) {\n        var text = this.config.storage.getItem(key);\n        var item = JSON.parse(text);\n        if (getCurrTime() >= item.expires) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * delete item from cache\n     *\n     * @private\n     * @param prefixedKey - the key of the item\n     * @param size - optional, the byte size of the item\n     */\n    BrowserStorageCache.prototype._removeItem = function (prefixedKey, size) {\n        var itemSize = size\n            ? size\n            : JSON.parse(this.config.storage.getItem(prefixedKey)).byteSize;\n        this._decreaseCurSizeInBytes(itemSize);\n        // remove the cache item\n        this.config.storage.removeItem(prefixedKey);\n    };\n    /**\n     * put item into cache\n     *\n     * @private\n     * @param prefixedKey - the key of the item\n     * @param itemData - the value of the item\n     * @param itemSizeInBytes - the byte size of the item\n     */\n    BrowserStorageCache.prototype._setItem = function (prefixedKey, item) {\n        // update the cache size\n        this._increaseCurSizeInBytes(item.byteSize);\n        try {\n            this.config.storage.setItem(prefixedKey, JSON.stringify(item));\n        }\n        catch (setItemErr) {\n            // if failed, we need to rollback the cache size\n            this._decreaseCurSizeInBytes(item.byteSize);\n            logger.error(\"Failed to set item \" + setItemErr);\n        }\n    };\n    /**\n     * total space needed when poping out items\n     *\n     * @private\n     * @param itemSize\n     *\n     * @return total space needed\n     */\n    BrowserStorageCache.prototype._sizeToPop = function (itemSize) {\n        var spaceItemNeed = this.getCacheCurSize() + itemSize - this.config.capacityInBytes;\n        var cacheThresholdSpace = (1 - this.config.warningThreshold) * this.config.capacityInBytes;\n        return spaceItemNeed > cacheThresholdSpace\n            ? spaceItemNeed\n            : cacheThresholdSpace;\n    };\n    /**\n     * see whether cache is full\n     *\n     * @private\n     * @param itemSize\n     *\n     * @return true if cache is full\n     */\n    BrowserStorageCache.prototype._isCacheFull = function (itemSize) {\n        return itemSize + this.getCacheCurSize() > this.config.capacityInBytes;\n    };\n    /**\n     * scan the storage and find out all the keys owned by this cache\n     * also clean the expired keys while scanning\n     *\n     * @private\n     *\n     * @return array of keys\n     */\n    BrowserStorageCache.prototype._findValidKeys = function () {\n        var keys = [];\n        var keyInCache = [];\n        // get all keys in Storage\n        for (var i = 0; i < this.config.storage.length; i += 1) {\n            keyInCache.push(this.config.storage.key(i));\n        }\n        // find those items which belong to our cache and also clean those expired items\n        for (var i = 0; i < keyInCache.length; i += 1) {\n            var key = keyInCache[i];\n            if (key.indexOf(this.config.keyPrefix) === 0 &&\n                key !== this.cacheCurSizeKey) {\n                if (this._isExpired(key)) {\n                    this._removeItem(key);\n                }\n                else {\n                    keys.push(key);\n                }\n            }\n        }\n        return keys;\n    };\n    /**\n     * get all the items we have, sort them by their priority,\n     * if priority is same, sort them by their last visited time\n     * pop out items from the low priority (5 is the lowest)\n     *\n     * @private\n     * @param keys - all the keys in this cache\n     * @param sizeToPop - the total size of the items which needed to be poped out\n     */\n    BrowserStorageCache.prototype._popOutItems = function (keys, sizeToPop) {\n        var items = [];\n        var remainedSize = sizeToPop;\n        // get the items from Storage\n        for (var i = 0; i < keys.length; i += 1) {\n            var val = this.config.storage.getItem(keys[i]);\n            if (val != null) {\n                var item = JSON.parse(val);\n                items.push(item);\n            }\n        }\n        // first compare priority\n        // then compare visited time\n        items.sort(function (a, b) {\n            if (a.priority > b.priority) {\n                return -1;\n            }\n            else if (a.priority < b.priority) {\n                return 1;\n            }\n            else {\n                if (a.visitedTime < b.visitedTime) {\n                    return -1;\n                }\n                else\n                    return 1;\n            }\n        });\n        for (var i = 0; i < items.length; i += 1) {\n            // pop out items until we have enough room for new item\n            this._removeItem(items[i].key, items[i].byteSize);\n            remainedSize -= items[i].byteSize;\n            if (remainedSize <= 0) {\n                return;\n            }\n        }\n    };\n    /**\n     * Set item into cache. You can put number, string, boolean or object.\n     * The cache will first check whether has the same key.\n     * If it has, it will delete the old item and then put the new item in\n     * The cache will pop out items if it is full\n     * You can specify the cache item options. The cache will abort and output a warning:\n     * If the key is invalid\n     * If the size of the item exceeds itemMaxSize.\n     * If the value is undefined\n     * If incorrect cache item configuration\n     * If error happened with browser storage\n     *\n     * @param key - the key of the item\n     * @param value - the value of the item\n     * @param {Object} [options] - optional, the specified meta-data\n     */\n    BrowserStorageCache.prototype.setItem = function (key, value, options) {\n        logger.log(\"Set item: key is \" + key + \", value is \" + value + \" with options: \" + options);\n        var prefixedKey = this.config.keyPrefix + key;\n        // invalid keys\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n            return;\n        }\n        if (typeof value === 'undefined') {\n            logger.warn(\"The value of item should not be undefined!\");\n            return;\n        }\n        var cacheItemOptions = {\n            priority: options && options.priority !== undefined\n                ? options.priority\n                : this.config.defaultPriority,\n            expires: options && options.expires !== undefined\n                ? options.expires\n                : this.config.defaultTTL + getCurrTime(),\n        };\n        if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n            logger.warn(\"Invalid parameter: priority due to out or range. It should be within 1 and 5.\");\n            return;\n        }\n        var item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n        // check wether this item is too big;\n        if (item.byteSize > this.config.itemMaxSize) {\n            logger.warn(\"Item with key: \" + key + \" you are trying to put into is too big!\");\n            return;\n        }\n        try {\n            // first look into the storage, if it exists, delete it.\n            var val = this.config.storage.getItem(prefixedKey);\n            if (val) {\n                this._removeItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n            // check whether the cache is full\n            if (this._isCacheFull(item.byteSize)) {\n                var validKeys = this._findValidKeys();\n                // check again and then pop out items\n                if (this._isCacheFull(item.byteSize)) {\n                    var sizeToPop = this._sizeToPop(item.byteSize);\n                    this._popOutItems(validKeys, sizeToPop);\n                }\n            }\n            // put item in the cache\n            // may failed due to storage full\n            this._setItem(prefixedKey, item);\n        }\n        catch (e) {\n            logger.warn(\"setItem failed! \" + e);\n        }\n    };\n    /**\n     * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n     * If you specified callback function in the options,\n     * then the function will be executed if no such item in the cache\n     * and finally put the return value into cache.\n     * Please make sure the callback function will return the value you want to put into the cache.\n     * The cache will abort output a warning:\n     * If the key is invalid\n     * If error happened with browser storage\n     *\n     * @param key - the key of the item\n     * @param {Object} [options] - the options of callback function\n     *\n     * @return - return the value of the item\n     */\n    BrowserStorageCache.prototype.getItem = function (key, options) {\n        logger.log(\"Get item: key is \" + key + \" with options \" + options);\n        var ret = null;\n        var prefixedKey = this.config.keyPrefix + key;\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n            return null;\n        }\n        try {\n            ret = this.config.storage.getItem(prefixedKey);\n            if (ret != null) {\n                if (this._isExpired(prefixedKey)) {\n                    // if expired, remove that item and return null\n                    this._removeItem(prefixedKey, JSON.parse(ret).byteSize);\n                    ret = null;\n                }\n                else {\n                    // if not expired, great, return the value and refresh it\n                    var item = JSON.parse(ret);\n                    item = this._refreshItem(item, prefixedKey);\n                    return item.data;\n                }\n            }\n            if (options && options.callback !== undefined) {\n                var val = options.callback();\n                if (val !== null) {\n                    this.setItem(key, val, options);\n                }\n                return val;\n            }\n            return null;\n        }\n        catch (e) {\n            logger.warn(\"getItem failed! \" + e);\n            return null;\n        }\n    };\n    /**\n     * remove item from the cache\n     * The cache will abort output a warning:\n     * If error happened with browser storage\n     * @param key - the key of the item\n     */\n    BrowserStorageCache.prototype.removeItem = function (key) {\n        logger.log(\"Remove item: key is \" + key);\n        var prefixedKey = this.config.keyPrefix + key;\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            return;\n        }\n        try {\n            var val = this.config.storage.getItem(prefixedKey);\n            if (val) {\n                this._removeItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n        }\n        catch (e) {\n            logger.warn(\"removeItem failed! \" + e);\n        }\n    };\n    /**\n     * clear the entire cache\n     * The cache will abort output a warning:\n     * If error happened with browser storage\n     */\n    BrowserStorageCache.prototype.clear = function () {\n        logger.log(\"Clear Cache\");\n        var keysToRemove = [];\n        for (var i = 0; i < this.config.storage.length; i += 1) {\n            var key = this.config.storage.key(i);\n            if (key.indexOf(this.config.keyPrefix) === 0) {\n                keysToRemove.push(key);\n            }\n        }\n        try {\n            for (var i = 0; i < keysToRemove.length; i += 1) {\n                this.config.storage.removeItem(keysToRemove[i]);\n            }\n        }\n        catch (e) {\n            logger.warn(\"clear failed! \" + e);\n        }\n    };\n    /**\n     * Return all the keys in the cache.\n     *\n     * @return - all keys in the cache\n     */\n    BrowserStorageCache.prototype.getAllKeys = function () {\n        var keys = [];\n        for (var i = 0; i < this.config.storage.length; i += 1) {\n            var key = this.config.storage.key(i);\n            if (key.indexOf(this.config.keyPrefix) === 0 &&\n                key !== this.cacheCurSizeKey) {\n                keys.push(key.substring(this.config.keyPrefix.length));\n            }\n        }\n        return keys;\n    };\n    /**\n     * return the current size of the cache\n     *\n     * @return - current size of the cache\n     */\n    BrowserStorageCache.prototype.getCacheCurSize = function () {\n        var ret = this.config.storage.getItem(this.cacheCurSizeKey);\n        if (!ret) {\n            this.config.storage.setItem(this.cacheCurSizeKey, '0');\n            ret = '0';\n        }\n        return Number(ret);\n    };\n    /**\n     * Return a new instance of cache with customized configuration.\n     * @param config - the customized configuration\n     *\n     * @return - new instance of Cache\n     */\n    BrowserStorageCache.prototype.createInstance = function (config) {\n        if (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\n            logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n            config.keyPrefix = getCurrTime.toString();\n        }\n        return new BrowserStorageCache(config);\n    };\n    return BrowserStorageCache;\n}(StorageCache));\nexport { BrowserStorageCache };\nvar instance = new BrowserStorageCache();\nexport default instance;\n//# sourceMappingURL=BrowserStorageCache.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CacheList, defaultConfig, getCurrTime, CacheObject } from './Utils';\nimport StorageCache from './StorageCache';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('InMemoryCache');\n/**\n * Customized in-memory cache with LRU implemented\n * @member cacheObj - object which store items\n * @member cacheList - list of keys in the cache with LRU\n * @member curSizeInBytes - current size of the cache\n * @member maxPriority - max of the priority\n * @member cacheSizeLimit - the limit of cache size\n */\nvar InMemoryCache = /** @class */ (function (_super) {\n    __extends(InMemoryCache, _super);\n    /**\n     * initialize the cache\n     *\n     * @param config - the configuration of the cache\n     */\n    function InMemoryCache(config) {\n        var _this = this;\n        var cacheConfig = config\n            ? Object.assign({}, defaultConfig, config)\n            : defaultConfig;\n        _this = _super.call(this, cacheConfig) || this;\n        logger.debug('now we start!');\n        _this.cacheList = [];\n        _this.curSizeInBytes = 0;\n        _this.maxPriority = 5;\n        _this.getItem = _this.getItem.bind(_this);\n        _this.setItem = _this.setItem.bind(_this);\n        _this.removeItem = _this.removeItem.bind(_this);\n        // initialize list for every priority\n        for (var i = 0; i < _this.maxPriority; i += 1) {\n            _this.cacheList[i] = new CacheList();\n        }\n        return _this;\n    }\n    /**\n     * decrease current size of the cache\n     *\n     * @param amount - the amount of the cache size which needs to be decreased\n     */\n    InMemoryCache.prototype._decreaseCurSizeInBytes = function (amount) {\n        this.curSizeInBytes -= amount;\n    };\n    /**\n     * increase current size of the cache\n     *\n     * @param amount - the amount of the cache szie which need to be increased\n     */\n    InMemoryCache.prototype._increaseCurSizeInBytes = function (amount) {\n        this.curSizeInBytes += amount;\n    };\n    /**\n     * check whether item is expired\n     *\n     * @param key - the key of the item\n     *\n     * @return true if the item is expired.\n     */\n    InMemoryCache.prototype._isExpired = function (key) {\n        var text = CacheObject.getItem(key);\n        var item = JSON.parse(text);\n        if (getCurrTime() >= item.expires) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * delete item from cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param listIdx - indicates which cache list the key belongs to\n     */\n    InMemoryCache.prototype._removeItem = function (prefixedKey, listIdx) {\n        // delete the key from the list\n        this.cacheList[listIdx].removeItem(prefixedKey);\n        // decrease the current size of the cache\n        this._decreaseCurSizeInBytes(JSON.parse(CacheObject.getItem(prefixedKey)).byteSize);\n        // finally remove the item from memory\n        CacheObject.removeItem(prefixedKey);\n    };\n    /**\n     * put item into cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param itemData - the value of the item\n     * @param itemSizeInBytes - the byte size of the item\n     * @param listIdx - indicates which cache list the key belongs to\n     */\n    InMemoryCache.prototype._setItem = function (prefixedKey, item, listIdx) {\n        // insert the key into the list\n        this.cacheList[listIdx].insertItem(prefixedKey);\n        // increase the current size of the cache\n        this._increaseCurSizeInBytes(item.byteSize);\n        // finally add the item into memory\n        CacheObject.setItem(prefixedKey, JSON.stringify(item));\n    };\n    /**\n     * see whether cache is full\n     *\n     * @param itemSize\n     *\n     * @return true if cache is full\n     */\n    InMemoryCache.prototype._isCacheFull = function (itemSize) {\n        return this.curSizeInBytes + itemSize > this.config.capacityInBytes;\n    };\n    /**\n     * check whether the cache contains the key\n     *\n     * @param key\n     */\n    InMemoryCache.prototype.containsKey = function (key) {\n        var prefixedKey = this.config.keyPrefix + key;\n        for (var i = 0; i < this.maxPriority; i += 1) {\n            if (this.cacheList[i].containsKey(prefixedKey)) {\n                return i + 1;\n            }\n        }\n        return -1;\n    };\n    /**\n     * * Set item into cache. You can put number, string, boolean or object.\n     * The cache will first check whether has the same key.\n     * If it has, it will delete the old item and then put the new item in\n     * The cache will pop out items if it is full\n     * You can specify the cache item options. The cache will abort and output a warning:\n     * If the key is invalid\n     * If the size of the item exceeds itemMaxSize.\n     * If the value is undefined\n     * If incorrect cache item configuration\n     * If error happened with browser storage\n     *\n     * @param key - the key of the item\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @throws if the item is too big which exceeds the limit of single item size\n     * @throws if the key is invalid\n     */\n    InMemoryCache.prototype.setItem = function (key, value, options) {\n        var prefixedKey = this.config.keyPrefix + key;\n        // invalid keys\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n            return;\n        }\n        if (typeof value === 'undefined') {\n            logger.warn(\"The value of item should not be undefined!\");\n            return;\n        }\n        var cacheItemOptions = {\n            priority: options && options.priority !== undefined\n                ? options.priority\n                : this.config.defaultPriority,\n            expires: options && options.expires !== undefined\n                ? options.expires\n                : this.config.defaultTTL + getCurrTime(),\n        };\n        if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n            logger.warn(\"Invalid parameter: priority due to out or range. It should be within 1 and 5.\");\n            return;\n        }\n        var item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n        // check wether this item is too big;\n        if (item.byteSize > this.config.itemMaxSize) {\n            logger.warn(\"Item with key: \" + key + \" you are trying to put into is too big!\");\n            return;\n        }\n        // if key already in the cache, then delete it.\n        var presentKeyPrio = this.containsKey(key);\n        if (presentKeyPrio !== -1) {\n            this._removeItem(prefixedKey, presentKeyPrio - 1);\n        }\n        // pop out items in the cache when cache is full based on LRU\n        // first start from lowest priority cache list\n        var cacheListIdx = this.maxPriority - 1;\n        while (this._isCacheFull(item.byteSize) && cacheListIdx >= 0) {\n            if (!this.cacheList[cacheListIdx].isEmpty()) {\n                var popedItemKey = this.cacheList[cacheListIdx].getLastItem();\n                this._removeItem(popedItemKey, cacheListIdx);\n            }\n            else {\n                cacheListIdx -= 1;\n            }\n        }\n        this._setItem(prefixedKey, item, Number(item.priority) - 1);\n    };\n    /**\n     * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n     * If you specified callback function in the options,\n     * then the function will be executed if no such item in the cache\n     * and finally put the return value into cache.\n     * Please make sure the callback function will return the value you want to put into the cache.\n     * The cache will abort output a warning:\n     * If the key is invalid\n     *\n     * @param key - the key of the item\n     * @param options - the options of callback function\n     */\n    InMemoryCache.prototype.getItem = function (key, options) {\n        var ret = null;\n        var prefixedKey = this.config.keyPrefix + key;\n        if (prefixedKey === this.config.keyPrefix ||\n            prefixedKey === this.cacheCurSizeKey) {\n            logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n            return null;\n        }\n        // check whether it's in the cachelist\n        var presentKeyPrio = this.containsKey(key);\n        if (presentKeyPrio !== -1) {\n            if (this._isExpired(prefixedKey)) {\n                // if expired, remove that item and return null\n                this._removeItem(prefixedKey, presentKeyPrio - 1);\n            }\n            else {\n                // if not expired, great, return the value and refresh it\n                ret = CacheObject.getItem(prefixedKey);\n                var item = JSON.parse(ret);\n                this.cacheList[item.priority - 1].refresh(prefixedKey);\n                return item.data;\n            }\n        }\n        if (options && options.callback !== undefined) {\n            var val = options.callback();\n            if (val !== null) {\n                this.setItem(key, val, options);\n            }\n            return val;\n        }\n        return null;\n    };\n    /**\n     * remove item from the cache\n     *\n     * @param key - the key of the item\n     */\n    InMemoryCache.prototype.removeItem = function (key) {\n        var prefixedKey = this.config.keyPrefix + key;\n        // check if the key is in the cache\n        var presentKeyPrio = this.containsKey(key);\n        if (presentKeyPrio !== -1) {\n            this._removeItem(prefixedKey, presentKeyPrio - 1);\n        }\n    };\n    /**\n     * clear the entire cache\n     */\n    InMemoryCache.prototype.clear = function () {\n        for (var i = 0; i < this.maxPriority; i += 1) {\n            for (var _i = 0, _a = this.cacheList[i].getKeys(); _i < _a.length; _i++) {\n                var key = _a[_i];\n                this._removeItem(key, i);\n            }\n        }\n    };\n    /**\n     * Return all the keys in the cache.\n     */\n    InMemoryCache.prototype.getAllKeys = function () {\n        var keys = [];\n        for (var i = 0; i < this.maxPriority; i += 1) {\n            for (var _i = 0, _a = this.cacheList[i].getKeys(); _i < _a.length; _i++) {\n                var key = _a[_i];\n                keys.push(key.substring(this.config.keyPrefix.length));\n            }\n        }\n        return keys;\n    };\n    /**\n     * return the current size of the cache\n     *\n     * @return the current size of the cache\n     */\n    InMemoryCache.prototype.getCacheCurSize = function () {\n        return this.curSizeInBytes;\n    };\n    /**\n     * Return a new instance of cache with customized configuration.\n     * @param config - the customized configuration\n     */\n    InMemoryCache.prototype.createInstance = function (config) {\n        return new InMemoryCache(config);\n    };\n    return InMemoryCache;\n}(StorageCache));\nexport { InMemoryCache };\nvar instance = new InMemoryCache();\nexport default instance;\n//# sourceMappingURL=InMemoryCache.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nvar StorageCache = /** @class */ (function () {\n    /**\n     * Initialize the cache\n     * @param config - the configuration of the cache\n     */\n    function StorageCache(config) {\n        this.config = Object.assign({}, config);\n        this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n        this.checkConfig();\n    }\n    StorageCache.prototype.getModuleName = function () {\n        return 'Cache';\n    };\n    StorageCache.prototype.checkConfig = function () {\n        // check configuration\n        if (!isInteger(this.config.capacityInBytes)) {\n            logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n        if (!isInteger(this.config.itemMaxSize)) {\n            logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (!isInteger(this.config.defaultTTL)) {\n            logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n            this.config.defaultTTL = defaultConfig.defaultTTL;\n        }\n        if (!isInteger(this.config.defaultPriority)) {\n            logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (Number(this.config.warningThreshold) > 1 ||\n            Number(this.config.warningThreshold) < 0) {\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n            this.config.warningThreshold = defaultConfig.warningThreshold;\n        }\n        // set 5MB limit\n        var cacheLimit = 5 * 1024 * 1024;\n        if (this.config.capacityInBytes > cacheLimit) {\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n    };\n    /**\n     * produce a JSON object with meta-data and data value\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @return - the item which has the meta-data and the value\n     */\n    StorageCache.prototype.fillCacheItem = function (key, value, options) {\n        var ret = {\n            key: key,\n            data: value,\n            timestamp: getCurrTime(),\n            visitedTime: getCurrTime(),\n            priority: options.priority,\n            expires: options.expires,\n            type: typeof value,\n            byteSize: 0,\n        };\n        ret.byteSize = getByteLength(JSON.stringify(ret));\n        // for accurate size\n        ret.byteSize = getByteLength(JSON.stringify(ret));\n        return ret;\n    };\n    /**\n     * set cache with customized configuration\n     * @param config - customized configuration\n     *\n     * @return - the current configuration\n     */\n    StorageCache.prototype.configure = function (config) {\n        if (!config) {\n            return this.config;\n        }\n        if (config.keyPrefix) {\n            logger.warn(\"Don't try to configure keyPrefix!\");\n        }\n        this.config = Object.assign({}, this.config, config, config.Cache);\n        this.checkConfig();\n        return this.config;\n    };\n    return StorageCache;\n}());\nexport default StorageCache;\n//# sourceMappingURL=StorageCache.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar DoubleLinkedNode = /** @class */ (function () {\n    function DoubleLinkedNode(keyVal) {\n        this.key = keyVal ? keyVal : '';\n        this.prevNode = null;\n        this.nextNode = null;\n    }\n    return DoubleLinkedNode;\n}());\n/**\n * double linked list plus a hash table inside\n * each key in the cache stored as a node in the list\n * recently visited node will be rotated to the head\n * so the Last Recently Visited node will be at the tail\n *\n * @member head - dummy head of the linked list\n * @member tail - dummy tail of the linked list\n * @member hashtable - the hashtable which maps cache key to list node\n * @member length - length of the list\n */\nvar CacheList = /** @class */ (function () {\n    /**\n     * initialization\n     */\n    function CacheList() {\n        this.head = new DoubleLinkedNode();\n        this.tail = new DoubleLinkedNode();\n        this.hashtable = {};\n        this.length = 0;\n        this.head.nextNode = this.tail;\n        this.tail.prevNode = this.head;\n    }\n    /**\n     * insert node to the head of the list\n     *\n     * @param node\n     */\n    CacheList.prototype.insertNodeToHead = function (node) {\n        var tmp = this.head.nextNode;\n        this.head.nextNode = node;\n        node.nextNode = tmp;\n        node.prevNode = this.head;\n        tmp.prevNode = node;\n        this.length = this.length + 1;\n    };\n    /**\n     * remove node\n     *\n     * @param node\n     */\n    CacheList.prototype.removeNode = function (node) {\n        node.prevNode.nextNode = node.nextNode;\n        node.nextNode.prevNode = node.prevNode;\n        node.prevNode = null;\n        node.nextNode = null;\n        this.length = this.length - 1;\n    };\n    /**\n     * @return true if list is empty\n     */\n    CacheList.prototype.isEmpty = function () {\n        return this.length === 0;\n    };\n    /**\n     * refresh node so it is rotated to the head\n     *\n     * @param key - key of the node\n     */\n    CacheList.prototype.refresh = function (key) {\n        var node = this.hashtable[key];\n        this.removeNode(node);\n        this.insertNodeToHead(node);\n    };\n    /**\n     * insert new node to the head and add it in the hashtable\n     *\n     * @param key - the key of the node\n     */\n    CacheList.prototype.insertItem = function (key) {\n        var node = new DoubleLinkedNode(key);\n        this.hashtable[key] = node;\n        this.insertNodeToHead(node);\n    };\n    /**\n     * @return the LAST Recently Visited key\n     */\n    CacheList.prototype.getLastItem = function () {\n        return this.tail.prevNode.key;\n    };\n    /**\n     * remove the cache key from the list and hashtable\n     * @param key - the key of the node\n     */\n    CacheList.prototype.removeItem = function (key) {\n        var removedItem = this.hashtable[key];\n        this.removeNode(removedItem);\n        delete this.hashtable[key];\n    };\n    /**\n     * @return length of the list\n     */\n    CacheList.prototype.getSize = function () {\n        return this.length;\n    };\n    /**\n     * @return true if the key is in the hashtable\n     * @param key\n     */\n    CacheList.prototype.containsKey = function (key) {\n        return key in this.hashtable;\n    };\n    /**\n     * clean up the list and hashtable\n     */\n    CacheList.prototype.clearList = function () {\n        for (var _i = 0, _a = Object.keys(this.hashtable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (this.hashtable.hasOwnProperty(key)) {\n                delete this.hashtable[key];\n            }\n        }\n        this.head.nextNode = this.tail;\n        this.tail.prevNode = this.head;\n        this.length = 0;\n    };\n    /**\n     * @return all keys in the hashtable\n     */\n    CacheList.prototype.getKeys = function () {\n        return Object.keys(this.hashtable);\n    };\n    /**\n     * mainly for test\n     *\n     * @param key\n     * @return true if key is the head node\n     */\n    CacheList.prototype.isHeadNode = function (key) {\n        var node = this.hashtable[key];\n        return node.prevNode === this.head;\n    };\n    /**\n     * mainly for test\n     *\n     * @param key\n     * @return true if key is the tail node\n     */\n    CacheList.prototype.isTailNode = function (key) {\n        var node = this.hashtable[key];\n        return node.nextNode === this.tail;\n    };\n    return CacheList;\n}());\nexport default CacheList;\n//# sourceMappingURL=CacheList.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { StorageHelper } from '@aws-amplify/core';\n/**\n * Default cache config\n */\nexport var defaultConfig = {\n    keyPrefix: 'aws-amplify-cache',\n    capacityInBytes: 1048576,\n    itemMaxSize: 210000,\n    defaultTTL: 259200000,\n    defaultPriority: 5,\n    warningThreshold: 0.8,\n    // the storage helper will check if localStorage exists,\n    // if not, will use a in-memory object instead\n    storage: new StorageHelper().getStorage(),\n};\n/**\n * return the byte size of the string\n * @param str\n */\nexport function getByteLength(str) {\n    var ret = 0;\n    ret = str.length;\n    for (var i = str.length; i >= 0; i -= 1) {\n        var charCode = str.charCodeAt(i);\n        if (charCode > 0x7f && charCode <= 0x7ff) {\n            ret += 1;\n        }\n        else if (charCode > 0x7ff && charCode <= 0xffff) {\n            ret += 2;\n        }\n        // trail surrogate\n        if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n            i -= 1;\n        }\n    }\n    return ret;\n}\n/**\n * get current time\n */\nexport function getCurrTime() {\n    var currTime = new Date();\n    return currTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nexport function isInteger(value) {\n    if (Number.isInteger) {\n        return Number.isInteger(value);\n    }\n    return _isInteger(value);\n}\nfunction _isInteger(value) {\n    return (typeof value === 'number' && isFinite(value) && Math.floor(value) === value);\n}\n/**\n * provide an object as the in-memory cache\n */\nvar store = {};\nvar CacheObject = /** @class */ (function () {\n    function CacheObject() {\n    }\n    CacheObject.clear = function () {\n        store = {};\n    };\n    CacheObject.getItem = function (key) {\n        return store[key] || null;\n    };\n    CacheObject.setItem = function (key, value) {\n        store[key] = value;\n    };\n    CacheObject.removeItem = function (key) {\n        delete store[key];\n    };\n    return CacheObject;\n}());\nexport { CacheObject };\n//# sourceMappingURL=CacheUtils.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nexport * from './CacheUtils';\nexport { default as CacheList } from './CacheList';\n//# sourceMappingURL=index.js.map","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport Amplify from '@aws-amplify/core';\nimport BrowserStorageCache from './BrowserStorageCache';\nimport InMemoryCache from './InMemoryCache';\nexport { BrowserStorageCache, InMemoryCache };\nexport default BrowserStorageCache;\nAmplify.register(BrowserStorageCache);\n//# sourceMappingURL=index.js.map","module.exports = __WEBPACK_EXTERNAL_MODULE__aws_amplify_core__;"],"sourceRoot":""}
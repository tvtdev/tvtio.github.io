{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/paho-mqtt/paho-mqtt.js","webpack:///./node_modules/uuid/index.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v1.js","webpack:///./node_modules/uuid/v4.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/zen-observable/index.js","webpack:///./node_modules/zen-observable/lib/Observable.js","webpack:///./node_modules/@aws-amplify/core/lib/constants.js","webpack:///./lib-esm/Providers/AWSAppSyncProvider.js","webpack:///./lib-esm/Providers/AWSIotProvider.js","webpack:///./lib-esm/Providers/MqttOverWSProvider.js","webpack:///./lib-esm/Providers/PubSubProvider.js","webpack:///./lib-esm/Providers/index.js","webpack:///./lib-esm/PubSub.js","webpack:///./lib-esm/index.js","webpack:///external \"@aws-amplify/core\""],"names":["Object","value","hasSymbol","Symbol","exports","__extends","extendStatics","__proto__","d","b","__","__awaiter","resolve","P","step","generator","reject","result","adopt","_arguments","__generator","_","label","sent","t","trys","ops","next","verb","g","f","y","op","done","body","__rest","e","s","i","p","__spreadArrays","il","arguments","r","Array","k","a","j","jl","logger","AWSAppSyncProvider","_this","_super","get","enumerable","configurable","topicsForClient","c","_a","clientId","errorCode","args","obs","client","options","targetTopics","_b","mqttConnections","newSubscriptions","newAliases","alias","v","map","connectionInfoForTopic","url","acc","topics","Promise","_c","err_1","observer","message","error","topic","origKey","val","obj","SERVICE_NAME","AWSIoTProvider","endpoint","serviceInfo","service","region","Credentials","access_key","secret_key","session_token","__assign","n","filterArray","filter","length","topicArray","left","right","ClientsQueue","promise","clientFactory","topicSymbol","MqttOverWSProvider","uuid","observerForTopic","Paho","msg","useSSL","mqttVersion","onSuccess","onFailure","JSON","matchedTopicObservers_1","mqttTopicMatch","parsedMessage_1","observersForTopic","observersForClientId","e_1","AbstractPubSubProvider","config","PubSub","opt","pluggable","providerName","provider","providers","observables","observable","subscriptions","start","console","subscription","_instance","Amplify"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,IAAyD;AAC7D;AACA,EAAE,MAAM,EASN;AACF,CAAC;;;AAGD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,kBAAkB,EAAE;AACtD,4BAA4B,kBAAkB,EAAE;AAChD,+BAA+B,kBAAkB,EAAE;AACnD;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+BAA+B;AACvC,qBAAqB,8CAA8C;AACnE,uBAAuB,+CAA+C;AACtE,yBAAyB,iDAAiD;AAC1E,kBAAkB,0CAA0C;AAC5D,oBAAoB,yDAAyD,EAAE,gBAAgB,EAAE,EAAE;AACnG,wBAAwB,kDAAkD,EAAE,EAAE,EAAE,GAAG;AACnF,kBAAkB,uCAAuC,EAAE,GAAG;AAC9D,kBAAkB,yCAAyC;AAC3D,mBAAmB,6CAA6C,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;AAC7E,iBAAiB,2BAA2B,EAAE,oCAAoC;AAClF,mBAAmB,yCAAyC,EAAE,GAAG;AACjE,kBAAkB,wCAAwC,EAAE,MAAM,EAAE,GAAG;AACvE,sBAAsB,4CAA4C,EAAE,MAAM,EAAE,GAAG;AAC/E,2BAA2B,kDAAkD;AAC7E,yBAAyB,6DAA6D,EAAE,QAAQ,EAAE,GAAG;AACrG,+BAA+B,qDAAqD,EAAE,GAAG;AACzF,uBAAuB,oDAAoD,EAAE,EAAE,EAAE,GAAG;AACpF,iBAAiB,wEAAwE,EAAE,GAAG;AAC9F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA,kBAAkB;AAClB,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kCAAkC;AAClC,4BAA4B;AAC5B;AACA,2CAA2C;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2DAA2D;AAC3D,sCAAsC;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;;AAEA;AACA,kDAAkD,4BAA4B,2EAA2E;AACzJ;;AAEA;AACA,iDAAiD,4BAA4B,yGAAyG;AACtL;;AAEA;AACA;AACA,OAAO;AACP;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,8BAA8B,uDAAuD;AAC5H;AACA;AACA;AACA,OAAO;AACP;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mEAAmE,gCAAgC;AACnG,gDAAgD,OAAO;AACvD;AACA;AACA,iEAAiE,gDAAgD;AACjH;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,wDAAwD;AAC7F;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gEAAgE,gDAAgD;AAChH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gDAAgD;AACjH;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D,gDAAgD;AAC9G;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,gDAAgD;AAC9G;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sGAAsG;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN,qCAAqC,qGAAqG;AAC1I;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oCAAoC;AAC7D;;AAEA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mEAAmE,kBAAkB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA,eAAe,SAAS;AACxB;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,OAAO;AACtB;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAsB,aAAa,EAAE;AACrC,sBAAsB,sDAAsD;AAC5E,KAAK;AACL;AACA,sBAAsB,aAAa,EAAE;AACrC,sBAAsB,sDAAsD;AAC5E,KAAK;AACL;AACA,sBAAsB,aAAa,EAAE;AACrC,sBAAsB,sDAAsD;AAC5E,KAAK;AACL;AACA,sBAAsB,YAAY,EAAE;AACpC,sBAAsB,sDAAsD;AAC5E,KAAK;AACL;AACA,sBAAsB,wBAAwB,EAAE;AAChD,sBAAsB,sDAAsD;AAC5E,KAAK;AACL;AACA,sBAAsB,2BAA2B,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,sCAAsC,EAAE;AAC9D;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,sCAAsC,EAAE;AAC9D;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,gCAAgC,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,kCAAkC,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,gCAAgC,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,6BAA6B,EAAE;AACrD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B;AACA,aAAa,OAAO;AACpB;AACA;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA,yCAAyC;AACzC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,iCAAiC;AACjC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA,iDAAiD;AACjD,mCAAmC;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAa;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,wBAAwB,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,YAAY,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,iBAAiB,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,wBAAwB,EAAE;AAChD,8BAA8B;AAC9B,KAAK;AACL;AACA;AACA,sBAAsB,kBAAkB,EAAE;AAC1C,kCAAkC;AAClC;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,2HAA2H;AAC7H;AACA,CAAC;;;;;;;;;;;;;AC11ED,SAAS,mBAAO,CAAC,2CAAM;AACvB,SAAS,mBAAO,CAAC,2CAAM;;AAEvB;AACA;AACA;;AAEA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,6DAAW;AAC7B,kBAAkB,mBAAO,CAAC,qEAAmB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC5GA,UAAU,mBAAO,CAAC,6DAAW;AAC7B,kBAAkB,mBAAO,CAAC,qEAAmB;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC5BA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA,iBAAiB,mBAAO,CAAC,gFAAqB;;;;;;;;;;;;;ACAjC;;AAEb;AACA;AACA,CAAC;;AAED,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,0EAA0E;AAC1E;;AAEA;AACA;;AAEA;AACA,8BAA8B,2BAA2B;AACzD;AACA;;AAEA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA,wEAAwE,aAAa;AACrF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8EAA8E,gEAAgE;AAC9I;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,yEAAyE,eAAe;AACxF;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,C;;;;;;;;;;;;ACjmBa;AACb;;;;;;;;;;;;;AAYAA,MAAM,CAANA,sCAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7CD;AACA;;;;;AAIA,IAAIE,SAAS,GAAG,iCAAiC,OAAOC,MAAM,CAAb,KAAa,CAAb,KAAjD;AACAC,OAAO,CAAPA,uCAA+CF,SAAS,GAClDC,MAAM,CAANA,KAAM,CAANA,CADkD,sCAClDA,CADkD,GAAxDC,yC;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAIC,SAAS,GAAI,SAAI,IAAI,SAAI,CAAb,SAAC,IAA4B,YAAY;AACrD,MAAIC,cAAa,GAAG,6BAAgB;AAChCA,kBAAa,GAAG,MAAM,CAAN,kBACX;AAAEC,eAAS,EAAE;AAAb,0BAAsC,gBAAgB;AAAEC,OAAC,CAADA;AAD7C,SAEZ,gBAAgB;AAAE,WAAK,IAAL;AAAiB,YAAIC,CAAC,CAADA,eAAJ,CAAIA,CAAJ,EAAyBD,CAAC,CAADA,CAAC,CAADA,GAAOC,CAAC,CAARD,CAAQ,CAARA;AAA1C;AAFtBF;;AAGA,WAAOA,cAAa,IAApB,CAAoB,CAApB;AAJJ;;AAMA,SAAO,gBAAgB;AACnBA,kBAAa,IAAbA,CAAa,CAAbA;;AACA,kBAAc;AAAE;AAAuB;;AACvCE,KAAC,CAADA,YAAcC,CAAC,KAADA,OAAaT,MAAM,CAANA,OAAbS,CAAaT,CAAbS,IAAiCC,EAAE,CAAFA,YAAeD,CAAC,CAAhBC,WAA4B,IAA3EF,EAA2E,EAA7DC,CAAdD;AAHJ;AAPJ,CAA6C,EAA7C;;AAaA,IAAIG,SAAS,GAAI,SAAI,IAAI,SAAI,CAAb,SAAC,IAA2B,6CAA6C;AACrF,wBAAsB;AAAE,WAAOV,KAAK,YAALA,YAA6B,MAAM,mBAAmB;AAAEW,aAAO,CAAPA,KAAO,CAAPA;AAA/D,KAAoC,CAApC;AAAoF;;AAC5G,SAAO,KAAKC,CAAC,KAAKA,CAAC,GAAZ,OAAM,CAAN,EAAyB,2BAA2B;AACvD,8BAA0B;AAAE,UAAI;AAAEC,YAAI,CAACC,SAAS,CAATA,KAALD,KAAKC,CAAD,CAAJD;AAAN,QAAqC,UAAU;AAAEE,cAAM,CAANA,CAAM,CAANA;AAAY;AAAE;;AAC3F,6BAAyB;AAAE,UAAI;AAAEF,YAAI,CAACC,SAAS,CAATA,OAAS,CAATA,CAALD,KAAKC,CAAD,CAAJD;AAAN,QAAyC,UAAU;AAAEE,cAAM,CAANA,CAAM,CAANA;AAAY;AAAE;;AAC9F,0BAAsB;AAAEC,YAAM,CAANA,OAAcL,OAAO,CAACK,MAAM,CAA5BA,KAAqB,CAArBA,GAAsCC,KAAK,CAACD,MAAM,CAAZC,KAAK,CAALA,iBAAtCD,QAAsCC,CAAtCD;AAAsF;;AAC9GH,QAAI,CAAC,CAACC,SAAS,GAAGA,SAAS,CAATA,eAAyBI,UAAU,IAAhD,EAAaJ,CAAb,EAALD,IAAK,EAAD,CAAJA;AAJJ,GAAO,CAAP;AAFJ;;AASA,IAAIM,WAAW,GAAI,SAAI,IAAI,SAAI,CAAb,WAAC,IAA6B,yBAAyB;AACrE,MAAIC,CAAC,GAAG;AAAEC,SAAK,EAAP;AAAYC,QAAI,EAAE,gBAAW;AAAE,UAAIC,CAAC,CAADA,CAAC,CAADA,GAAJ,GAAc,MAAMA,CAAC,CAAP,CAAO,CAAP;AAAY,aAAOA,CAAC,CAAR,CAAQ,CAAR;AAAzD;AAAyEC,QAAI,EAA7E;AAAmFC,OAAG,EAAE;AAAxF,GAAR;AAAA;AAAA;AAAA;AAAA;AACA,SAAO,CAAC,GAAG;AAAEC,QAAI,EAAEC,IAAI,CAAZ,CAAY,CAAZ;AAAiB,aAASA,IAAI,CAA9B,CAA8B,CAA9B;AAAmC,cAAUA,IAAI;AAAjD,GAAJ,EAA4D,iCAAiCC,CAAC,CAAC1B,MAAM,CAAR0B,QAAC,CAADA,GAAqB,YAAW;AAAE;AAA/H,GAA4D,CAA5D,EAAP;;AACA,mBAAiB;AAAE,WAAO,aAAa;AAAE,aAAOf,IAAI,CAAC,IAAZ,CAAY,CAAD,CAAX;AAAtB;AAA+C;;AAClE,oBAAkB;AACd,WAAO,MAAM,cAAN,iCAAM,CAAN;;AACP;AAAU,UAAI;AACV,YAAIgB,CAAC,GAADA,GAAOC,CAAC,KAAKP,CAAC,GAAGQ,EAAE,CAAFA,CAAE,CAAFA,OAAYD,CAAC,CAAbC,QAAa,CAAbA,GAA0BA,EAAE,CAAFA,CAAE,CAAFA,GAAQD,CAAC,CAADA,OAAC,CAADA,KAAe,CAACP,CAAC,GAAGO,CAAC,CAAN,QAAM,CAAN,KAAqBP,CAAC,CAADA,KAArB,CAAqBA,CAArB,EAAvBQ,CAAQD,CAARC,GAA4DD,CAAC,CAAjGA,IAAC,CAADA,IAA2G,CAAC,CAACP,CAAC,GAAGA,CAAC,CAADA,QAAUQ,EAAE,CAAjB,CAAiB,CAAZR,CAAL,EAAvH,MAAoJ;AACpJ,YAAIO,CAAC,GAADA,GAAJ,GAAcC,EAAE,GAAG,CAACA,EAAE,CAAFA,CAAE,CAAFA,GAAD,GAAYR,CAAC,CAAlBQ,KAAK,CAALA;;AACd,gBAAQA,EAAE,CAAV,CAAU,CAAV;AACI;AAAQ;AAAQR,aAAC,GAADA;AAAQ;;AACxB;AAAQH,aAAC,CAADA;AAAW,mBAAO;AAAEpB,mBAAK,EAAE+B,EAAE,CAAX,CAAW,CAAX;AAAgBC,kBAAI,EAAE;AAAtB,aAAP;;AACnB;AAAQZ,aAAC,CAADA;AAAWU,aAAC,GAAGC,EAAE,CAAND,CAAM,CAANA;AAAWC,cAAE,GAAG,CAALA,CAAK,CAALA;AAAU;;AACxC;AAAQA,cAAE,GAAGX,CAAC,CAADA,IAALW,GAAKX,EAALW;;AAAkBX,aAAC,CAADA;;AAAc;;AACxC;AACI,gBAAI,EAAEG,CAAC,GAAGH,CAAC,CAALG,MAAYA,CAAC,GAAGA,CAAC,CAADA,cAAgBA,CAAC,CAACA,CAAC,CAADA,SAApC,CAAmC,CAAnC,MAAuDQ,EAAE,CAAFA,CAAE,CAAFA,UAAeA,EAAE,CAAFA,CAAE,CAAFA,KAA1E,CAAI,CAAJ,EAAwF;AAAEX,eAAC,GAADA;AAAO;AAAW;;AAC5G,gBAAIW,EAAE,CAAFA,CAAE,CAAFA,WAAgB,MAAOA,EAAE,CAAFA,CAAE,CAAFA,GAAQR,CAAC,CAATQ,CAAS,CAATA,IAAgBA,EAAE,CAAFA,CAAE,CAAFA,GAAQR,CAAC,CAApD,CAAoD,CAAhDQ,CAAJ,EAA2D;AAAEX,eAAC,CAADA,QAAUW,EAAE,CAAZX,CAAY,CAAZA;AAAiB;AAAQ;;AACtF,gBAAIW,EAAE,CAAFA,CAAE,CAAFA,UAAeX,CAAC,CAADA,QAAUG,CAAC,CAA9B,CAA8B,CAA9B,EAAmC;AAAEH,eAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA;AAAgBG,eAAC,GAADA;AAAQ;AAAQ;;AACrE,gBAAIA,CAAC,IAAIH,CAAC,CAADA,QAAUG,CAAC,CAApB,CAAoB,CAApB,EAAyB;AAAEH,eAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA;;AAAgBA,eAAC,CAADA;;AAAgB;AAAQ;;AACnE,gBAAIG,CAAC,CAAL,CAAK,CAAL,EAAUH,CAAC,CAADA;;AACVA,aAAC,CAADA;;AAAc;AAXtB;;AAaAW,UAAE,GAAGE,IAAI,CAAJA,cAALF,CAAKE,CAALF;AAhBM,QAiBR,UAAU;AAAEA,UAAE,GAAG,IAALA,CAAK,CAALA;AAAaD,SAAC,GAADA;AAjBjB,gBAiBkC;AAAED,SAAC,GAAGN,CAAC,GAALM;AAAY;AAjB1D;;AAkBA,QAAIE,EAAE,CAAFA,CAAE,CAAFA,GAAJ,GAAe,MAAMA,EAAE,CAAR,CAAQ,CAAR;AAAa,WAAO;AAAE/B,WAAK,EAAE+B,EAAE,CAAFA,CAAE,CAAFA,GAAQA,EAAE,CAAVA,CAAU,CAAVA,GAAgB,KAAzB;AAAiCC,UAAI,EAAE;AAAvC,KAAP;AAC/B;AAzBL;;AA2BA,IAAIE,MAAM,GAAI,SAAI,IAAI,SAAI,CAAb,MAAC,IAAwB,gBAAgB;AAClD,MAAIX,CAAC,GAAL;;AACA,OAAK,IAAL;AAAiB,QAAIxB,MAAM,CAANA,uCAA8CoC,CAAC,CAADA,aAAlD,GACbZ,CAAC,CAADA,CAAC,CAADA,GAAOa,CAAC,CAARb,CAAQ,CAARA;AADJ;;AAEA,MAAIa,CAAC,IAADA,QAAa,OAAOrC,MAAM,CAAb,0BAAjB,YACI,KAAK,IAAIsC,CAAC,GAAL,GAAWC,CAAC,GAAGvC,MAAM,CAANA,sBAApB,CAAoBA,CAApB,EAAqDsC,CAAC,GAAGC,CAAC,CAA1D,QAAmED,CAAnE,IAAwE;AACpE,QAAIF,CAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA,SAAuBpC,MAAM,CAANA,uCAA8CuC,CAAC,CAA1E,CAA0E,CAA/CvC,CAA3B,EACIwB,CAAC,CAACe,CAAC,CAAHf,CAAG,CAAF,CAADA,GAAUa,CAAC,CAACE,CAAC,CAAbf,CAAa,CAAF,CAAXA;AACP;AACL;AATJ;;AAWA,IAAIgB,cAAc,GAAI,SAAI,IAAI,SAAI,CAAb,cAAC,IAAgC,YAAY;AAC9D,OAAK,IAAIH,CAAC,GAAL,GAAWC,CAAC,GAAZ,GAAkBG,EAAE,GAAGC,SAAS,CAArC,QAA8CJ,CAAC,GAA/C,IAAsDA,CAAtD;AAA2DD,KAAC,IAAIK,SAAS,CAATA,CAAS,CAATA,CAALL;AAA3D;;AACA,OAAK,IAAIM,CAAC,GAAGC,KAAK,CAAb,CAAa,CAAb,EAAkBC,CAAC,GAAnB,GAAyBP,CAAC,GAA/B,GAAqCA,CAAC,GAAtC,IAA6CA,CAA7C;AACI,SAAK,IAAIQ,CAAC,GAAGJ,SAAS,CAAjB,CAAiB,CAAjB,EAAsBK,CAAC,GAAvB,GAA6BC,EAAE,GAAGF,CAAC,CAAxC,QAAiDC,CAAC,GAAlD,IAAyDA,CAAC,IAAIF,CAA9D;AACIF,OAAC,CAADA,CAAC,CAADA,GAAOG,CAAC,CAARH,CAAQ,CAARA;AADJ;AADJ;;AAGA;AALJ;;AAOA;AACA;AACA;AACA,IAAIM,MAAM,GAAG,oEAAb,oBAAa,CAAb;;AACA,IAAIC,kBAAkB;AAAG;AAAe,kBAAkB;AACtD7C,WAAS,qBAATA,MAAS,CAATA;;AACA,gCAA8B;AAC1B,QAAI8C,KAAK,GAAGC,MAAM,KAANA,QAAmBA,MAAM,CAANA,YAAnBA,SAAmBA,CAAnBA,IAAZ;;AACAD,SAAK,CAALA,eAAqB,IAArBA,GAAqB,EAArBA;AACAA,SAAK,CAALA,cAAoB,IAApBA,GAAoB,EAApBA;AACA;AACH;;AACDnD,QAAM,CAANA,eAAsBkD,kBAAkB,CAAxClD,uBAAgE;AAC5DqD,OAAG,EAAE,eAAY;AACb,YAAM,UAAN,eAAM,CAAN;AAFwD;AAI5DC,cAAU,EAJkD;AAK5DC,gBAAY,EAAE;AAL8C,GAAhEvD;;AAOAkD,oBAAkB,CAAlBA,4BAA+C,YAAY;AACvD;AADJA;;AAGAA,oBAAkB,CAAlBA,oBAAuC,gCAAgC;AACnE,WAAOvC,SAAS,OAAO,KAAP,GAAe,KAAf,GAAuB,YAAY;AAC/C,aAAOS,WAAW,OAAO,cAAc;AACnC,cAAM,UAAN,yBAAM,CAAN;AADJ,OAAkB,CAAlB;AADJ,KAAgB,CAAhB;AADJ8B;;AAOAA,oBAAkB,CAAlBA,qBAAwC,oBAAoB;AACxD,QAAIC,KAAK,GAAT;;AACA,QAAIK,eAAe,GAAG,KAAK,CAAL,KAAW,kBAAX,OAAW,EAAX,SACV,cAAc;AACtB,UAAIC,CAAC,GAAGC,EAAE,CAAV,CAAU,CAAV;AACA,aAAOD,CAAC,CAADA,aAAP;AAHkB,WAKb,cAAc;AACnB,UAAIjC,CAAC,GAAGkC,EAAE,CAAV,CAAU,CAAV;AACA;AAPJ,KAAsB,CAAtB;AASAF,mBAAe,CAAfA,QAAwB,aAAa;AAAE,aAAOL,KAAK,CAALA,iBAAP,CAAOA,CAAP;AAAvCK;AAXJN;;AAaAA,oBAAkB,CAAlBA,6BAAgD,iBAAiB;AAC7D;;AACA;AAFJA;;AAIAA,oBAAkB,CAAlBA,yBAA4C,cAAc;AACtD,QAAIC,KAAK,GAAT;;AACA,QAAIQ,QAAQ,GAAGD,EAAE,CAAjB;AAAA,QAA4BE,SAAS,GAAGF,EAAE,CAA1C;AAAA,QAAsDG,IAAI,GAAG1B,MAAM,KAAK,aAAxE,WAAwE,CAAL,CAAnE;;AACA,QAAIyB,SAAS,KAAb,GAAqB;AACjB,UAAIJ,eAAe,GAAG,KAAK,CAAL,KAAW,kBAAX,OAAW,EAAX,SACV,cAAc;AACtB,YAAIC,CAAC,GAAGC,EAAE,CAAV,CAAU,CAAV;AACA,eAAOD,CAAC,CAADA,aAAP;AAHkB,aAKb,cAAc;AACnB,YAAIjC,CAAC,GAAGkC,EAAE,CAAV,CAAU,CAAV;AACA;AAPJ,OAAsB,CAAtB;AASAF,qBAAe,CAAfA,QAAwB,iBAAiB;AACrC,YAAIL,KAAK,CAALA,oBAAJ,KAAIA,CAAJ,EAAsC;AAClCA,eAAK,CAALA,mCAAyC,eAAe;AACpD,gBAAI,CAACW,GAAG,CAAR,QAAiB;AACbA,iBAAG,CAAHA;AACH;AAHLX;;AAKAA,eAAK,CAALA;AACH;AARLK;;AAUA;AACH;AAxBLN;;AA0BAA,oBAAkB,CAAlBA,uBAA0C,oBAAoB;AAC1D,WAAOvC,SAAS,OAAO,KAAP,GAAe,KAAf,GAAuB,YAAY;AAC/C;AACA,aAAOS,WAAW,OAAO,cAAc;AACnC,gBAAQsC,EAAE,CAAV;AACI;AAAQ,mBAAO,CAAC;AAAE;AAAH,cAAc,gCAAgC,YAAY;AAAE;AAAnE,aAAqB,CAAd,CAAP;;AACR;AACIK,kBAAM,GAAGL,EAAE,CAAXK,IAASL,EAATK;AACA,mBAAO,CAAC;AAAE;AAAH,cAAcX,MAAM,CAANA,gCAArB,QAAqBA,CAAd,CAAP;;AACJ;AACIM,cAAE,CAAFA;;AACA;;AACA,mBAAO,CAAC;AAAE;AAAH,aAAP;AARR;AADJ,OAAkB,CAAlB;AAFJ,KAAgB,CAAhB;AADJR;;AAiBAA,oBAAkB,CAAlBA,sBAAyC,2BAA2B;AAChE,QAAIC,KAAK,GAAT;;AACA,QAAIa,OAAO,KAAK,KAAhB,GAAwB;AAAEA,aAAO,GAAPA;AAAe;;AACzC,QAAI/C,MAAM,GAAG,gDAAe,oBAAoB;AAC5C,UAAIgD,YAAY,GAAG,UAAnB,MAAmB,CAAnB;AACAhB,YAAM,CAANA,iCAAwCgB,YAAY,CAAZA,KAAxChB,GAAwCgB,CAAxChB;;AACA,OAAC,YAAY;AAAE,eAAOtC,SAAS,QAAQ,KAAR,GAAgB,KAAhB,GAAwB,YAAY;AAC/D;;AACA,cAAIwC,KAAK,GAAT;;AACA,iBAAO/B,WAAW,OAAO,cAAc;AACnC,oBAAQ8C,EAAE,CAAV;AACI;AACI;AACAD,4BAAY,CAAZA,QAAqB,aAAa;AAC9B,sBAAI,CAACd,KAAK,CAALA,oBAAL,CAAKA,CAAL,EAAmC;AAC/BA,yBAAK,CAALA,uBAA6B,IAA7BA,GAA6B,EAA7BA;AACH;;AACDA,uBAAK,CAALA;AAJJc;AAMAP,kBAAE,GAAGM,OAAO,CAAZN,iBAA8BS,eAAe,GAAGT,EAAE,KAAK,KAAPA,SAAhDA,IAAyEU,gBAAgB,GAAGJ,OAAO,CAAnGN;AACAW,0BAAU,GAAG,MAAM,CAAN,8BAAqC,cAAc;AAC5D,sBAAIC,KAAK,GAAGZ,EAAE,CAAd,CAAc,CAAd;AAAA,sBAAmBa,CAAC,GAAGb,EAAE,CAAzB,CAAyB,CAAzB;AACA,yBAAO,CAACa,CAAC,CAAF,OAAP,KAAO,CAAP;AAXR,iBASiB,CAAbF,CATJ,CAaI;;AACA,mCAAmB,QAAQ7B,cAAc,CAACI,KAAK,CAALA,KAAW,iBAAZ,OAAY,EAAXA,CAAD,EAAzC,UAAyC,CAAtB,CAAnB;AACA4B,mBAAG,GAAGxE,MAAM,CAANA,QAAe,YAAY,CAAZ,OAAoB,qBAAqB;AAC1D,sBAAIyE,sBAAsB,GAAG,eAAe,CAAf,KAAqB,aAAa;AAAE,2BAAOhB,CAAC,CAADA,uBAAyB,CAAhC;AAAjE,mBAA6B,CAA7B;;AACA,8CAA4B;AACxB,wBAAIE,QAAQ,GAAGc,sBAAsB,CAArC;AAAA,wBAA8CC,GAAG,GAAGD,sBAAsB,CAA1E;;AACA,wBAAI,CAACE,GAAG,CAAR,QAAQ,CAAR,EAAoB;AAChBA,yBAAG,CAAHA,QAAG,CAAHA,GAAgB;AACZD,2BAAG,EADS;AAEZE,8BAAM,EAAE;AAFI,uBAAhBD;AAIH;;AACDA,uBAAG,CAAHA,QAAG,CAAHA;AACH;;AACD;AAZiB,mBAfzB,EAeyB,CAAf3E,CAANwE,CAfJ,CA6BI;;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAcK,OAAO,CAAPA,IAAY,GAAG,CAAH,IAAQ,cAAc;AAC/C,sBAAIlB,QAAQ,GAAGD,EAAE,CAAjB,CAAiB,CAAjB;AAAA,sBAAsBQ,EAAE,GAAGR,EAAE,CAA7B,CAA6B,CAA7B;AAAA,sBAAkCgB,GAAG,GAAGR,EAAE,CAA1C;AAAA,sBAAgDU,MAAM,GAAGV,EAAE,CAA3D;AACA,yBAAOvD,SAAS,QAAQ,KAAR,GAAgB,KAAhB,GAAwB,YAAY;AAChD;;AACA,wBAAIwC,KAAK,GAAT;;AACA,2BAAO/B,WAAW,OAAO,cAAc;AACnC,8BAAQ0D,EAAE,CAAV;AACI;AACIf,gCAAM,GAANA;AACAe,4BAAE,CAAFA;;AACJ;AACIA,4BAAE,CAAFA,UAAa,QAAbA,CAAa,CAAbA;;AACA,iCAAO,CAAC;AAAE;AAAH,4BAAc,uBAAuB;AACpCnB,oCAAQ,EAD4B;AAEpCe,+BAAG,EAAEA;AAF+B,2BAAvB,CAAd,CAAP;;AAIJ;AACIX,gCAAM,GAAGe,EAAE,CAAXf,IAASe,EAATf;AACA,iCAAO,CAAC;AAAE;AAAH,4BAAP,CAAO,CAAP;;AACJ;AACIgB,+BAAK,GAAGD,EAAE,CAAVC,IAAQD,EAARC;AACAC,kCAAQ,CAARA,MAAe;AAAEC,mCAAO,EAAT;AAAgCC,iCAAK,EAAEH;AAAvC,2BAAfC;AACAA,kCAAQ,CAARA;AACA,iCAAO,CAAC;AAAE;AAAH,4BAAP,SAAO,CAAP;;AACJ;AACI;AACA;AACAJ,gCAAM,CAANA,QAAe,iBAAiB;AAC5B,gCAAIb,MAAM,CAAV,WAAIA,EAAJ,EAA0B;AACtBA,oCAAM,CAANA;;AACAZ,mCAAK,CAALA;AACH;AAJLyB;AAMA,iCAAO,CAAC;AAAE;AAAH,4BAAP,MAAO,CAAP;AA3BR;AADJ,qBAAkB,CAAlB;AAHJ,mBAAgB,CAAhB;AAFR,iBAAiC,CAAZC,CAAd,CAAP;;AAsCJ;AACI;AACAX,kBAAE,CAAFA;;AACA,uBAAO,CAAC;AAAE;AAAH,iBAAP;AAxER;AADJ,WAAkB,CAAlB;AAHW,SAAgB,CAAhB;AAAf;;AAgFA,aAAO,YAAY;AACfjB,cAAM,CAANA,qCAA4CgB,YAAY,CAAZA,KAA5ChB,GAA4CgB,CAA5ChB;AACAgB,oBAAY,CAAZA,QAAqB,aAAa;AAC9B,cAAIF,MAAM,GAAGZ,KAAK,CAALA,iBAAb,CAAaA,CAAb;;AACA,cAAIY,MAAM,IAAIA,MAAM,CAApB,WAAcA,EAAd,EAAoC;AAChCA,kBAAM,CAANA;;AACAZ,iBAAK,CAALA;;AACA,gBAAI,CAAC,KAAK,CAAL,KAAWA,KAAK,CAALA,aAAX,MAAWA,EAAX,OAA6C,aAAa;AAAE,qBAAOM,CAAC,KAAR;AAAjE,aAAK,CAAL,EAA0F;AACtFN,mBAAK,CAALA,WAAiBY,MAAM,CAAvBZ;AACH;AACJ;;AACDA,eAAK,CAALA;AATJc;AAFJ;AAnFJ,KAAa,CAAb;AAkGA,WAAO,gEAA4B,iBAAiB;AAChD,UAAIkB,KAAK,GAAGhC,KAAK,CAALA,iBAAZ,KAAYA,CAAZ;;AACA,UAAImB,KAAK,GAAGnB,KAAK,CAALA,gBAAZ,KAAYA,CAAZ;;AACAlD,WAAK,CAALA,OAAa,MAAM,CAAN,QAAeA,KAAK,CAApB,aAAkC,mBAAmB;AAC9D,YAAImF,OAAO,GAAG1B,EAAE,CAAhB,CAAgB,CAAhB;AAAA,YAAqB2B,GAAG,GAAG3B,EAAE,CAA7B,CAA6B,CAA7B;AACA,eAAS4B,GAAG,CAAEhB,KAAK,IAAVgB,OAAG,CAAHA,GAAD,GAACA,EAAT;AAFS,SAAbrF,EAAa,CAAbA;AAIA;AAPJ,KAAO,CAAP;AArGJiD;;AA+GA;AApMoC,EAAxC,sEAAwC,CAAxC;;;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAI7C,SAAS,GAAI,SAAI,IAAI,SAAI,CAAb,SAAC,IAA4B,YAAY;AACrD,MAAIC,cAAa,GAAG,6BAAgB;AAChCA,kBAAa,GAAG,MAAM,CAAN,kBACX;AAAEC,eAAS,EAAE;AAAb,0BAAsC,gBAAgB;AAAEC,OAAC,CAADA;AAD7C,SAEZ,gBAAgB;AAAE,WAAK,IAAL;AAAiB,YAAIC,CAAC,CAADA,eAAJ,CAAIA,CAAJ,EAAyBD,CAAC,CAADA,CAAC,CAADA,GAAOC,CAAC,CAARD,CAAQ,CAARA;AAA1C;AAFtBF;;AAGA,WAAOA,cAAa,IAApB,CAAoB,CAApB;AAJJ;;AAMA,SAAO,gBAAgB;AACnBA,kBAAa,IAAbA,CAAa,CAAbA;;AACA,kBAAc;AAAE;AAAuB;;AACvCE,KAAC,CAADA,YAAcC,CAAC,KAADA,OAAaT,MAAM,CAANA,OAAbS,CAAaT,CAAbS,IAAiCC,EAAE,CAAFA,YAAeD,CAAC,CAAhBC,WAA4B,IAA3EF,EAA2E,EAA7DC,CAAdD;AAHJ;AAPJ,CAA6C,EAA7C;;AAaA,IAAIG,SAAS,GAAI,SAAI,IAAI,SAAI,CAAb,SAAC,IAA2B,6CAA6C;AACrF,wBAAsB;AAAE,WAAOV,KAAK,YAALA,YAA6B,MAAM,mBAAmB;AAAEW,aAAO,CAAPA,KAAO,CAAPA;AAA/D,KAAoC,CAApC;AAAoF;;AAC5G,SAAO,KAAKC,CAAC,KAAKA,CAAC,GAAZ,OAAM,CAAN,EAAyB,2BAA2B;AACvD,8BAA0B;AAAE,UAAI;AAAEC,YAAI,CAACC,SAAS,CAATA,KAALD,KAAKC,CAAD,CAAJD;AAAN,QAAqC,UAAU;AAAEE,cAAM,CAANA,CAAM,CAANA;AAAY;AAAE;;AAC3F,6BAAyB;AAAE,UAAI;AAAEF,YAAI,CAACC,SAAS,CAATA,OAAS,CAATA,CAALD,KAAKC,CAAD,CAAJD;AAAN,QAAyC,UAAU;AAAEE,cAAM,CAANA,CAAM,CAANA;AAAY;AAAE;;AAC9F,0BAAsB;AAAEC,YAAM,CAANA,OAAcL,OAAO,CAACK,MAAM,CAA5BA,KAAqB,CAArBA,GAAsCC,KAAK,CAACD,MAAM,CAAZC,KAAK,CAALA,iBAAtCD,QAAsCC,CAAtCD;AAAsF;;AAC9GH,QAAI,CAAC,CAACC,SAAS,GAAGA,SAAS,CAATA,eAAyBI,UAAU,IAAhD,EAAaJ,CAAb,EAALD,IAAK,EAAD,CAAJA;AAJJ,GAAO,CAAP;AAFJ;;AASA,IAAIM,WAAW,GAAI,SAAI,IAAI,SAAI,CAAb,WAAC,IAA6B,yBAAyB;AACrE,MAAIC,CAAC,GAAG;AAAEC,SAAK,EAAP;AAAYC,QAAI,EAAE,gBAAW;AAAE,UAAIC,CAAC,CAADA,CAAC,CAADA,GAAJ,GAAc,MAAMA,CAAC,CAAP,CAAO,CAAP;AAAY,aAAOA,CAAC,CAAR,CAAQ,CAAR;AAAzD;AAAyEC,QAAI,EAA7E;AAAmFC,OAAG,EAAE;AAAxF,GAAR;AAAA;AAAA;AAAA;AAAA;AACA,SAAO,CAAC,GAAG;AAAEC,QAAI,EAAEC,IAAI,CAAZ,CAAY,CAAZ;AAAiB,aAASA,IAAI,CAA9B,CAA8B,CAA9B;AAAmC,cAAUA,IAAI;AAAjD,GAAJ,EAA4D,iCAAiCC,CAAC,CAAC1B,MAAM,CAAR0B,QAAC,CAADA,GAAqB,YAAW;AAAE;AAA/H,GAA4D,CAA5D,EAAP;;AACA,mBAAiB;AAAE,WAAO,aAAa;AAAE,aAAOf,IAAI,CAAC,IAAZ,CAAY,CAAD,CAAX;AAAtB;AAA+C;;AAClE,oBAAkB;AACd,WAAO,MAAM,cAAN,iCAAM,CAAN;;AACP;AAAU,UAAI;AACV,YAAIgB,CAAC,GAADA,GAAOC,CAAC,KAAKP,CAAC,GAAGQ,EAAE,CAAFA,CAAE,CAAFA,OAAYD,CAAC,CAAbC,QAAa,CAAbA,GAA0BA,EAAE,CAAFA,CAAE,CAAFA,GAAQD,CAAC,CAADA,OAAC,CAADA,KAAe,CAACP,CAAC,GAAGO,CAAC,CAAN,QAAM,CAAN,KAAqBP,CAAC,CAADA,KAArB,CAAqBA,CAArB,EAAvBQ,CAAQD,CAARC,GAA4DD,CAAC,CAAjGA,IAAC,CAADA,IAA2G,CAAC,CAACP,CAAC,GAAGA,CAAC,CAADA,QAAUQ,EAAE,CAAjB,CAAiB,CAAZR,CAAL,EAAvH,MAAoJ;AACpJ,YAAIO,CAAC,GAADA,GAAJ,GAAcC,EAAE,GAAG,CAACA,EAAE,CAAFA,CAAE,CAAFA,GAAD,GAAYR,CAAC,CAAlBQ,KAAK,CAALA;;AACd,gBAAQA,EAAE,CAAV,CAAU,CAAV;AACI;AAAQ;AAAQR,aAAC,GAADA;AAAQ;;AACxB;AAAQH,aAAC,CAADA;AAAW,mBAAO;AAAEpB,mBAAK,EAAE+B,EAAE,CAAX,CAAW,CAAX;AAAgBC,kBAAI,EAAE;AAAtB,aAAP;;AACnB;AAAQZ,aAAC,CAADA;AAAWU,aAAC,GAAGC,EAAE,CAAND,CAAM,CAANA;AAAWC,cAAE,GAAG,CAALA,CAAK,CAALA;AAAU;;AACxC;AAAQA,cAAE,GAAGX,CAAC,CAADA,IAALW,GAAKX,EAALW;;AAAkBX,aAAC,CAADA;;AAAc;;AACxC;AACI,gBAAI,EAAEG,CAAC,GAAGH,CAAC,CAALG,MAAYA,CAAC,GAAGA,CAAC,CAADA,cAAgBA,CAAC,CAACA,CAAC,CAADA,SAApC,CAAmC,CAAnC,MAAuDQ,EAAE,CAAFA,CAAE,CAAFA,UAAeA,EAAE,CAAFA,CAAE,CAAFA,KAA1E,CAAI,CAAJ,EAAwF;AAAEX,eAAC,GAADA;AAAO;AAAW;;AAC5G,gBAAIW,EAAE,CAAFA,CAAE,CAAFA,WAAgB,MAAOA,EAAE,CAAFA,CAAE,CAAFA,GAAQR,CAAC,CAATQ,CAAS,CAATA,IAAgBA,EAAE,CAAFA,CAAE,CAAFA,GAAQR,CAAC,CAApD,CAAoD,CAAhDQ,CAAJ,EAA2D;AAAEX,eAAC,CAADA,QAAUW,EAAE,CAAZX,CAAY,CAAZA;AAAiB;AAAQ;;AACtF,gBAAIW,EAAE,CAAFA,CAAE,CAAFA,UAAeX,CAAC,CAADA,QAAUG,CAAC,CAA9B,CAA8B,CAA9B,EAAmC;AAAEH,eAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA;AAAgBG,eAAC,GAADA;AAAQ;AAAQ;;AACrE,gBAAIA,CAAC,IAAIH,CAAC,CAADA,QAAUG,CAAC,CAApB,CAAoB,CAApB,EAAyB;AAAEH,eAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA;;AAAgBA,eAAC,CAADA;;AAAgB;AAAQ;;AACnE,gBAAIG,CAAC,CAAL,CAAK,CAAL,EAAUH,CAAC,CAADA;;AACVA,aAAC,CAADA;;AAAc;AAXtB;;AAaAW,UAAE,GAAGE,IAAI,CAAJA,cAALF,CAAKE,CAALF;AAhBM,QAiBR,UAAU;AAAEA,UAAE,GAAG,IAALA,CAAK,CAALA;AAAaD,SAAC,GAADA;AAjBjB,gBAiBkC;AAAED,SAAC,GAAGN,CAAC,GAALM;AAAY;AAjB1D;;AAkBA,QAAIE,EAAE,CAAFA,CAAE,CAAFA,GAAJ,GAAe,MAAMA,EAAE,CAAR,CAAQ,CAAR;AAAa,WAAO;AAAE/B,WAAK,EAAE+B,EAAE,CAAFA,CAAE,CAAFA,GAAQA,EAAE,CAAVA,CAAU,CAAVA,GAAgB,KAAzB;AAAiCC,UAAI,EAAE;AAAvC,KAAP;AAC/B;AAzBL;AA2BA;;;;;;;;;;;;;;AAYA;AACA;AACA,IAAIsD,YAAY,GAAhB;;AACA,IAAIC,cAAc;AAAG;AAAe,kBAAkB;AAClDnF,WAAS,iBAATA,MAAS,CAATA;;AACA,4BAA0B;AACtB,WAAO+C,MAAM,KAANA,QAAmBA,MAAM,CAANA,YAAnBA,SAAmBA,CAAnBA,IAAP;AACH;;AACDpD,QAAM,CAANA,eAAsBwF,cAAc,CAApCxF,qBAA0D;AACtDqD,OAAG,EAAE,eAAY;AACb,aAAO,aAAP;AAFkD;AAItDC,cAAU,EAJ4C;AAKtDC,gBAAY,EAAE;AALwC,GAA1DvD;;AAOAwF,gBAAc,CAAdA,4BAA2C,YAAY;AACnD;AADJA;;AAGAxF,QAAM,CAANA,eAAsBwF,cAAc,CAApCxF,uBAA4D;AACxDqD,OAAG,EAAE,eAAY;AACb,UAAIF,KAAK,GAAT;;AACA,aAAQ,YAAY;AAAE,eAAOxC,SAAS,QAAQ,KAAR,GAAgB,KAAhB,GAAwB,YAAY;AACtE;;AACA,iBAAOS,WAAW,OAAO,cAAc;AACnC,oBAAQ8C,EAAE,CAAV;AACI;AACIuB,wBAAQ,GAAG,aAAXA;AACAC,2BAAW,GAAG;AACVC,yBAAO,EADG;AAEVC,wBAAM,EAAE,KAAKA;AAFH,iBAAdF;AAIA,uBAAO,CAAC;AAAE;AAAH,kBAAcG,6DAAW,CAAhC,GAAqBA,EAAd,CAAP;;AACJ;AACInC,kBAAE,GAAGQ,EAAE,CAAPR,IAAKQ,EAALR,EAAgBoC,UAAU,GAAGpC,EAAE,CAA/BA,aAA6CqC,UAAU,GAAGrC,EAAE,CAA5DA,iBAA8EsC,aAAa,GAAGtC,EAAE,CAAhGA;AACAzC,sBAAM,GAAG,wDAAM,CAAN,kBAAyB;AAAE6E,4BAAU,EAAZ;AAA0BC,4BAAU,EAApC;AAAkDC,+BAAa,EAAEA;AAAjE,iBAAzB,EAAT/E,WAAS,CAATA;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAP,MAAO,CAAP;AAXR;AADJ,WAAkB,CAAlB;AAFkB,SAAgB,CAAhB;AAAtB,OAAQ,EAAR;AAHoD;AAsBxDqC,cAAU,EAtB8C;AAuBxDC,gBAAY,EAAE;AAvB0C,GAA5DvD;AAyBA;AAxCgC,EAApC,sEAAoC,CAApC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA,IAAIK,SAAS,GAAI,SAAI,IAAI,SAAI,CAAb,SAAC,IAA4B,YAAY;AACrD,MAAIC,cAAa,GAAG,6BAAgB;AAChCA,kBAAa,GAAG,MAAM,CAAN,kBACX;AAAEC,eAAS,EAAE;AAAb,0BAAsC,gBAAgB;AAAEC,OAAC,CAADA;AAD7C,SAEZ,gBAAgB;AAAE,WAAK,IAAL;AAAiB,YAAIC,CAAC,CAADA,eAAJ,CAAIA,CAAJ,EAAyBD,CAAC,CAADA,CAAC,CAADA,GAAOC,CAAC,CAARD,CAAQ,CAARA;AAA1C;AAFtBF;;AAGA,WAAOA,cAAa,IAApB,CAAoB,CAApB;AAJJ;;AAMA,SAAO,gBAAgB;AACnBA,kBAAa,IAAbA,CAAa,CAAbA;;AACA,kBAAc;AAAE;AAAuB;;AACvCE,KAAC,CAADA,YAAcC,CAAC,KAADA,OAAaT,MAAM,CAANA,OAAbS,CAAaT,CAAbS,IAAiCC,EAAE,CAAFA,YAAeD,CAAC,CAAhBC,WAA4B,IAA3EF,EAA2E,EAA7DC,CAAdD;AAHJ;AAPJ,CAA6C,EAA7C;;AAaA,IAAIyF,QAAQ,GAAI,SAAI,IAAI,SAAI,CAAb,QAAC,IAA0B,YAAY;AAClDA,UAAQ,GAAGjG,MAAM,CAANA,UAAiB,aAAY;AACpC,SAAK,OAAOsC,CAAC,GAAR,GAAc4D,CAAC,GAAGxD,SAAS,CAAhC,QAAyCJ,CAAC,GAA1C,GAAgDA,CAAhD,IAAqD;AACjDD,OAAC,GAAGK,SAAS,CAAbL,CAAa,CAAbA;;AACA,WAAK,IAAL;AAAiB,YAAIrC,MAAM,CAANA,iCAAJ,CAAIA,CAAJ,EACbwB,CAAC,CAADA,CAAC,CAADA,GAAOa,CAAC,CAARb,CAAQ,CAARA;AADJ;AAEH;;AACD;AANJyE;;AAQA,SAAOA,QAAQ,CAARA,YAAP,SAAOA,CAAP;AATJ;;AAWA,IAAItF,SAAS,GAAI,SAAI,IAAI,SAAI,CAAb,SAAC,IAA2B,6CAA6C;AACrF,wBAAsB;AAAE,WAAOV,KAAK,YAALA,YAA6B,MAAM,mBAAmB;AAAEW,aAAO,CAAPA,KAAO,CAAPA;AAA/D,KAAoC,CAApC;AAAoF;;AAC5G,SAAO,KAAKC,CAAC,KAAKA,CAAC,GAAZ,OAAM,CAAN,EAAyB,2BAA2B;AACvD,8BAA0B;AAAE,UAAI;AAAEC,YAAI,CAACC,SAAS,CAATA,KAALD,KAAKC,CAAD,CAAJD;AAAN,QAAqC,UAAU;AAAEE,cAAM,CAANA,CAAM,CAANA;AAAY;AAAE;;AAC3F,6BAAyB;AAAE,UAAI;AAAEF,YAAI,CAACC,SAAS,CAATA,OAAS,CAATA,CAALD,KAAKC,CAAD,CAAJD;AAAN,QAAyC,UAAU;AAAEE,cAAM,CAANA,CAAM,CAANA;AAAY;AAAE;;AAC9F,0BAAsB;AAAEC,YAAM,CAANA,OAAcL,OAAO,CAACK,MAAM,CAA5BA,KAAqB,CAArBA,GAAsCC,KAAK,CAACD,MAAM,CAAZC,KAAK,CAALA,iBAAtCD,QAAsCC,CAAtCD;AAAsF;;AAC9GH,QAAI,CAAC,CAACC,SAAS,GAAGA,SAAS,CAATA,eAAyBI,UAAU,IAAhD,EAAaJ,CAAb,EAALD,IAAK,EAAD,CAAJA;AAJJ,GAAO,CAAP;AAFJ;;AASA,IAAIM,WAAW,GAAI,SAAI,IAAI,SAAI,CAAb,WAAC,IAA6B,yBAAyB;AACrE,MAAIC,CAAC,GAAG;AAAEC,SAAK,EAAP;AAAYC,QAAI,EAAE,gBAAW;AAAE,UAAIC,CAAC,CAADA,CAAC,CAADA,GAAJ,GAAc,MAAMA,CAAC,CAAP,CAAO,CAAP;AAAY,aAAOA,CAAC,CAAR,CAAQ,CAAR;AAAzD;AAAyEC,QAAI,EAA7E;AAAmFC,OAAG,EAAE;AAAxF,GAAR;AAAA;AAAA;AAAA;AAAA;AACA,SAAO,CAAC,GAAG;AAAEC,QAAI,EAAEC,IAAI,CAAZ,CAAY,CAAZ;AAAiB,aAASA,IAAI,CAA9B,CAA8B,CAA9B;AAAmC,cAAUA,IAAI;AAAjD,GAAJ,EAA4D,iCAAiCC,CAAC,CAAC1B,MAAM,CAAR0B,QAAC,CAADA,GAAqB,YAAW;AAAE;AAA/H,GAA4D,CAA5D,EAAP;;AACA,mBAAiB;AAAE,WAAO,aAAa;AAAE,aAAOf,IAAI,CAAC,IAAZ,CAAY,CAAD,CAAX;AAAtB;AAA+C;;AAClE,oBAAkB;AACd,WAAO,MAAM,cAAN,iCAAM,CAAN;;AACP;AAAU,UAAI;AACV,YAAIgB,CAAC,GAADA,GAAOC,CAAC,KAAKP,CAAC,GAAGQ,EAAE,CAAFA,CAAE,CAAFA,OAAYD,CAAC,CAAbC,QAAa,CAAbA,GAA0BA,EAAE,CAAFA,CAAE,CAAFA,GAAQD,CAAC,CAADA,OAAC,CAADA,KAAe,CAACP,CAAC,GAAGO,CAAC,CAAN,QAAM,CAAN,KAAqBP,CAAC,CAADA,KAArB,CAAqBA,CAArB,EAAvBQ,CAAQD,CAARC,GAA4DD,CAAC,CAAjGA,IAAC,CAADA,IAA2G,CAAC,CAACP,CAAC,GAAGA,CAAC,CAADA,QAAUQ,EAAE,CAAjB,CAAiB,CAAZR,CAAL,EAAvH,MAAoJ;AACpJ,YAAIO,CAAC,GAADA,GAAJ,GAAcC,EAAE,GAAG,CAACA,EAAE,CAAFA,CAAE,CAAFA,GAAD,GAAYR,CAAC,CAAlBQ,KAAK,CAALA;;AACd,gBAAQA,EAAE,CAAV,CAAU,CAAV;AACI;AAAQ;AAAQR,aAAC,GAADA;AAAQ;;AACxB;AAAQH,aAAC,CAADA;AAAW,mBAAO;AAAEpB,mBAAK,EAAE+B,EAAE,CAAX,CAAW,CAAX;AAAgBC,kBAAI,EAAE;AAAtB,aAAP;;AACnB;AAAQZ,aAAC,CAADA;AAAWU,aAAC,GAAGC,EAAE,CAAND,CAAM,CAANA;AAAWC,cAAE,GAAG,CAALA,CAAK,CAALA;AAAU;;AACxC;AAAQA,cAAE,GAAGX,CAAC,CAADA,IAALW,GAAKX,EAALW;;AAAkBX,aAAC,CAADA;;AAAc;;AACxC;AACI,gBAAI,EAAEG,CAAC,GAAGH,CAAC,CAALG,MAAYA,CAAC,GAAGA,CAAC,CAADA,cAAgBA,CAAC,CAACA,CAAC,CAADA,SAApC,CAAmC,CAAnC,MAAuDQ,EAAE,CAAFA,CAAE,CAAFA,UAAeA,EAAE,CAAFA,CAAE,CAAFA,KAA1E,CAAI,CAAJ,EAAwF;AAAEX,eAAC,GAADA;AAAO;AAAW;;AAC5G,gBAAIW,EAAE,CAAFA,CAAE,CAAFA,WAAgB,MAAOA,EAAE,CAAFA,CAAE,CAAFA,GAAQR,CAAC,CAATQ,CAAS,CAATA,IAAgBA,EAAE,CAAFA,CAAE,CAAFA,GAAQR,CAAC,CAApD,CAAoD,CAAhDQ,CAAJ,EAA2D;AAAEX,eAAC,CAADA,QAAUW,EAAE,CAAZX,CAAY,CAAZA;AAAiB;AAAQ;;AACtF,gBAAIW,EAAE,CAAFA,CAAE,CAAFA,UAAeX,CAAC,CAADA,QAAUG,CAAC,CAA9B,CAA8B,CAA9B,EAAmC;AAAEH,eAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA;AAAgBG,eAAC,GAADA;AAAQ;AAAQ;;AACrE,gBAAIA,CAAC,IAAIH,CAAC,CAADA,QAAUG,CAAC,CAApB,CAAoB,CAApB,EAAyB;AAAEH,eAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA;;AAAgBA,eAAC,CAADA;;AAAgB;AAAQ;;AACnE,gBAAIG,CAAC,CAAL,CAAK,CAAL,EAAUH,CAAC,CAADA;;AACVA,aAAC,CAADA;;AAAc;AAXtB;;AAaAW,UAAE,GAAGE,IAAI,CAAJA,cAALF,CAAKE,CAALF;AAhBM,QAiBR,UAAU;AAAEA,UAAE,GAAG,IAALA,CAAK,CAALA;AAAaD,SAAC,GAADA;AAjBjB,gBAiBkC;AAAED,SAAC,GAAGN,CAAC,GAALM;AAAY;AAjB1D;;AAkBA,QAAIE,EAAE,CAAFA,CAAE,CAAFA,GAAJ,GAAe,MAAMA,EAAE,CAAR,CAAQ,CAAR;AAAa,WAAO;AAAE/B,WAAK,EAAE+B,EAAE,CAAFA,CAAE,CAAFA,GAAQA,EAAE,CAAVA,CAAU,CAAVA,GAAgB,KAAzB;AAAiCC,UAAI,EAAE;AAAvC,KAAP;AAC/B;AAzBL;;AA2BA,IAAIE,MAAM,GAAI,SAAI,IAAI,SAAI,CAAb,MAAC,IAAwB,gBAAgB;AAClD,MAAIX,CAAC,GAAL;;AACA,OAAK,IAAL;AAAiB,QAAIxB,MAAM,CAANA,uCAA8CoC,CAAC,CAADA,aAAlD,GACbZ,CAAC,CAADA,CAAC,CAADA,GAAOa,CAAC,CAARb,CAAQ,CAARA;AADJ;;AAEA,MAAIa,CAAC,IAADA,QAAa,OAAOrC,MAAM,CAAb,0BAAjB,YACI,KAAK,IAAIsC,CAAC,GAAL,GAAWC,CAAC,GAAGvC,MAAM,CAANA,sBAApB,CAAoBA,CAApB,EAAqDsC,CAAC,GAAGC,CAAC,CAA1D,QAAmED,CAAnE,IAAwE;AACpE,QAAIF,CAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA,SAAuBpC,MAAM,CAANA,uCAA8CuC,CAAC,CAA1E,CAA0E,CAA/CvC,CAA3B,EACIwB,CAAC,CAACe,CAAC,CAAHf,CAAG,CAAF,CAADA,GAAUa,CAAC,CAACE,CAAC,CAAbf,CAAa,CAAF,CAAXA;AACP;AACL;AATJ;AAWA;;;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA,IAAIyB,MAAM,GAAG,oEAAb,oBAAa,CAAb;AACO,uCAAuC;AAC1C,MAAIkD,WAAW,GAAGC,MAAM,CAANA,MAAlB,GAAkBA,CAAlB;AACA,MAAIC,MAAM,GAAGF,WAAW,CAAxB;AACA,MAAIG,UAAU,GAAGnB,KAAK,CAALA,MAAjB,GAAiBA,CAAjB;;AACA,OAAK,IAAI7C,CAAC,GAAV,GAAgBA,CAAC,GAAjB,QAA4B,EAA5B,GAAiC;AAC7B,QAAIiE,IAAI,GAAGJ,WAAW,CAAtB,CAAsB,CAAtB;AACA,QAAIK,KAAK,GAAGF,UAAU,CAAtB,CAAsB,CAAtB;AACA,QAAIC,IAAI,KAAR,KACI,OAAOD,UAAU,CAAVA,UAAP;AACJ,QAAIC,IAAI,KAAJA,OAAgBA,IAAI,KAAxB,OACI;AACP;;AACD,SAAOF,MAAM,KAAKC,UAAU,CAA5B;AACH;;AACD,IAAIG,YAAY;AAAG;AAAe,YAAY;AAC1C,0BAAwB;AACpB,oBAAgB,IAAhB,GAAgB,EAAhB;AACH;;AACDA,cAAY,CAAZA,gBAA6B,mCAAmC;AAC5D,WAAO9F,SAAS,OAAO,KAAP,GAAe,KAAf,GAAuB,YAAY;AAC/C;AACA,aAAOS,WAAW,OAAO,cAAc;AACnCsF,eAAO,GAAG,kBAAVA,QAAU,CAAVA;;AACA,qBAAa;AACT,iBAAO,CAAC;AAAE;AAAH,YAAP,OAAO,CAAP;AACH;;AACDA,eAAO,GAAGC,aAAa,CAAvBD,QAAuB,CAAvBA;AACA;AACA,eAAO,CAAC;AAAE;AAAH,UAAP,OAAO,CAAP;AAPJ,OAAkB,CAAlB;AAFJ,KAAgB,CAAhB;AADJD;;AAcAzG,QAAM,CAANA,eAAsByG,YAAY,CAAlCzG,yBAA4D;AACxDqD,OAAG,EAAE,eAAY;AACb,aAAOT,KAAK,CAALA,KAAW,cAAlB,IAAkB,EAAXA,CAAP;AAFoD;AAIxDU,cAAU,EAJ8C;AAKxDC,gBAAY,EAAE;AAL0C,GAA5DvD;;AAOAyG,cAAY,CAAZA,mBAAgC,oBAAoB;AAChD;AADJA;;AAGA;AA5BJ,CAAkC,EAAlC;;AA8BA,IAAIG,WAAW,GAAG,gCAAgCzG,MAAM,CAAtC,OAAsC,CAAtC,GAAlB;;AACA,IAAI0G,kBAAkB;AAAG;AAAe,kBAAkB;AACtDxG,WAAS,qBAATA,MAAS,CAATA;;AACA,uCAAqC;AACjC,QAAI2D,OAAO,KAAK,KAAhB,GAAwB;AAAEA,aAAO,GAAPA;AAAe;;AACzC,QAAIb,KAAK,GAAG,MAAM,CAAN,WAAkB8C,QAAQ,CAACA,QAAQ,KAAT,OAAS,CAAT,EAAwB;AAAEtC,cAAQ,EAAEK,OAAO,CAAPA,YAAoB8C,+CAAI;AAApC,KAAxB,CAA1B,KAAZ;;AACA3D,SAAK,CAALA,gBAAsB,IAAtBA,YAAsB,EAAtBA;AACAA,SAAK,CAALA,kBAAwB,IAAxBA,GAAwB,EAAxBA;AACAA,SAAK,CAALA,qBAA2B,IAA3BA,GAA2B,EAA3BA;AACA;AACH;;AACDnD,QAAM,CAANA,eAAsB6G,kBAAkB,CAAxC7G,uBAAgE;AAC5DqD,OAAG,EAAE,eAAY;AACb,aAAO,aAAP;AAFwD;AAI5DC,cAAU,EAJkD;AAK5DC,gBAAY,EAAE;AAL8C,GAAhEvD;AAOAA,QAAM,CAANA,eAAsB6G,kBAAkB,CAAxC7G,uBAAgE;AAC5DqD,OAAG,EAAE,eAAY;AACb,aAAO,aAAP;AAFwD;AAI5DC,cAAU,EAJkD;AAK5DC,gBAAY,EAAE;AAL8C,GAAhEvD;AAOAA,QAAM,CAANA,eAAsB6G,kBAAkB,CAAxC7G,2BAAoE;AAChEqD,OAAG,EAAE,eAAY;AACb,aAAO,KAAP;AAF4D;AAIhEC,cAAU,EAJsD;AAKhEC,gBAAY,EAAE;AALkD,GAApEvD;AAOAA,QAAM,CAANA,eAAsB6G,kBAAkB,CAAxC7G,2BAAoE;AAChEqD,OAAG,EAAE,eAAY;AACb,aAAO,CAAC,aAAR;AAF4D;AAKhEC,cAAU,EALsD;AAMhEC,gBAAY,EAAE;AANkD,GAApEvD;;AAQA6G,oBAAkB,CAAlBA,6BAAgD,iBAAiB;AAC7D,WAAO,+BAA6B5G,KAAK,CAAzC,WAAyC,CAAzC;AADJ4G;;AAGAA,oBAAkB,CAAlBA,4BAA+C,YAAY;AACvD;AADJA;;AAGAA,oBAAkB,CAAlBA,yBAA4C,cAAc;AACtD,QAAIlD,QAAQ,GAAGD,EAAE,CAAjB;AAAA,QAA4BE,SAAS,GAAGF,EAAE,CAA1C;AAAA,QAAsDG,IAAI,GAAG1B,MAAM,KAAK,aAAxE,WAAwE,CAAL,CAAnE;;AACA,QAAIyB,SAAS,KAAb,GAAqB;AACjBX,YAAM,CAANA,eAAsB,IAAI,CAAJ,UAAegD,QAAQ,CAAC;AAAErC,iBAAS,EAAEA;AAAb,OAAD,EAAvB,IAAuB,CAAvB,QAAtBX,CAAsB,CAAtBA;;AACA,mCAA6B,4CAA4C;AACrE8D,wBAAgB,CAAhBA,QAAyB,oBAAoB;AACzC/B,kBAAQ,CAARA,MAAe,+BAAfA;AACAA,kBAAQ,CAARA;AAFJ+B;AADJ;AAMH;;AACD,2BAAuB,IAAvB,GAAuB,EAAvB;AAXJF;;AAaAA,oBAAkB,CAAlBA,sBAAyC,cAAc;AACnD,QAAInC,GAAG,GAAGhB,EAAE,CAAZ;AAAA,QAAkBC,QAAQ,GAAGD,EAAE,CAA/B;AACA,WAAO/C,SAAS,OAAO,KAAP,GAAe,KAAf,GAAuB,YAAY;AAC/C;;AACA,UAAIwC,KAAK,GAAT;;AACA,aAAO/B,WAAW,OAAO,cAAc;AACnC,gBAAQ8C,EAAE,CAAV;AACI;AACIjB,kBAAM,CAANA;AACAc,kBAAM,GAAG,IAAIiD,gDAAJ,MAFb,QAEa,CAATjD,CAFJ,CAGI;;AACAA,kBAAM,CAANA,mBAA0B,cAAc;AACpC,kBAAIoB,KAAK,GAAGzB,EAAE,CAAd;AAAA,kBAAgCuD,GAAG,GAAGvD,EAAE,CAAxC;;AACAP,mBAAK,CAALA;AAFJY;;AAIAA,kBAAM,CAANA,mBAA0B,cAAc;AACpC,kBAAIH,SAAS,GAAGF,EAAE,CAAlB;AAAA,kBAA8BG,IAAI,GAAG1B,MAAM,KAAK,CAAhD,WAAgD,CAAL,CAA3C;;AACAgB,mBAAK,CAALA,aAAmB8C,QAAQ,CAAC;AAAEtC,wBAAQ,EAAV;AAAsBC,yBAAS,EAAEA;AAAjC,eAAD,EAA3BT,IAA2B,CAA3BA;AAFJY;;AAIA,mBAAO,CAAC;AAAE;AAAH,cAAc,YAAY,2BAA2B;AACpDA,oBAAM,CAANA,QAAe;AACXmD,sBAAM,EAAE/D,KAAK,CADF;AAEXgE,2BAAW,EAFA;AAGXC,yBAAS,EAAE,qBAAY;AAAE,yBAAOxG,OAAO,CAAd,MAAc,CAAd;AAHd;AAIXyG,yBAAS,EAAErG;AAJA,eAAf+C;AADR,aAAqB,CAAd,CAAP;;AAQJ;AACIG,cAAE,CAAFA;;AACA,mBAAO,CAAC;AAAE;AAAH,cAAP,MAAO,CAAP;AAvBR;AADJ,OAAkB,CAAlB;AAHJ,KAAgB,CAAhB;AAFJ2C;;AAkCAA,oBAAkB,CAAlBA,oBAAuC,6BAA6B;AAChE,QAAI7C,OAAO,KAAK,KAAhB,GAAwB;AAAEA,aAAO,GAAPA;AAAe;;AACzC,WAAOrD,SAAS,OAAO,KAAP,GAAe,KAAf,GAAuB,YAAY;AAC/C,UAAIwC,KAAK,GAAT;;AACA,aAAO/B,WAAW,OAAO,cAAc;AACnC,gBAAQsC,EAAE,CAAV;AACI;AAAQ,mBAAO,CAAC;AAAE;AAAH,cAAc,gCAAgC,oBAAoB;AACzE,qBAAO,KAAK,CAAL,UAAgBuC,QAAQ,CAACA,QAAQ,KAAT,OAAS,CAAT,EAAwB;AAAEtC,wBAAQ,EAAEA;AAAZ,eAAxB,CAAxB,CAAP;AADA,aAAqB,CAAd,CAAP;;AAGR;AAAQ,mBAAO,CAAC;AAAE;AAAH,cAAeD,EAAE,CAAxB,IAAsBA,EAAf,CAAP;AAJZ;AADJ,OAAkB,CAAlB;AAFJ,KAAgB,CAAhB;AAFJmD;;AAcAA,oBAAkB,CAAlBA,uBAA0C,oBAAoB;AAC1D,WAAOlG,SAAS,OAAO,KAAP,GAAe,KAAf,GAAuB,YAAY;AAC/C;AACA,aAAOS,WAAW,OAAO,cAAc;AACnC,gBAAQsC,EAAE,CAAV;AACI;AAAQ,mBAAO,CAAC;AAAE;AAAH,cAAc,gCAAgC,YAAY;AAAE;AAAnE,aAAqB,CAAd,CAAP;;AACR;AACIK,kBAAM,GAAGL,EAAE,CAAXK,IAASL,EAATK;;AACA,gBAAIA,MAAM,IAAIA,MAAM,CAApB,WAAcA,EAAd,EAAoC;AAChCA,oBAAM,CAANA;AACH;;AACD;AACA,mBAAO,CAAC;AAAE;AAAH,aAAP;AARR;AADJ,OAAkB,CAAlB;AAFJ,KAAgB,CAAhB;AADJ8C;;AAiBAA,oBAAkB,CAAlBA,oBAAuC,uBAAuB;AAC1D,WAAOlG,SAAS,OAAO,KAAP,GAAe,KAAf,GAAuB,YAAY;AAC/C;AACA,aAAOS,WAAW,OAAO,cAAc;AACnC,gBAAQsC,EAAE,CAAV;AACI;AACIO,wBAAY,GAAG,UAAfA,MAAe,CAAfA;AACAgB,mBAAO,GAAGqC,IAAI,CAAJA,UAAVrC,GAAUqC,CAAVrC;AACA,mBAAO,CAAC;AAAE;AAAH,cAAc,KAArB,QAAO,CAAP;;AACJ;AACIP,eAAG,GAAGhB,EAAE,CAARgB,IAAMhB,EAANgB;AACA,mBAAO,CAAC;AAAE;AAAH,cAAc,aAAa,KAAb,UAA4B;AAAEA,iBAAG,EAAEA;AAAP,aAA5B,CAAd,CAAP;;AACJ;AACIX,kBAAM,GAAGL,EAAE,CAAXK,IAASL,EAATK;AACAd,kBAAM,CAANA,gCAAuCgB,YAAY,CAAZA,KAAvChB,GAAuCgB,CAAvChB;AACAgB,wBAAY,CAAZA,QAAqB,iBAAiB;AAAE,qBAAOF,MAAM,CAANA,YAAP,OAAOA,CAAP;AAAxCE;AACA,mBAAO,CAAC;AAAE;AAAH,aAAP;AAZR;AADJ,OAAkB,CAAlB;AAFJ,KAAgB,CAAhB;AADJ4C;;AAqBAA,oBAAkB,CAAlBA,uBAA0C,sBAAsB;AAC5D,QAAI;AACA,UAAIU,uBAAuB,GAA3B;;AACA,mCAA6B,2CAA2C;AACpE,YAAIC,cAAc,gBAAlB,KAAkB,CAAlB,EAA0C;AACtCD,iCAAuB,CAAvBA;AACH;AAHL;;AAKA,UAAIE,eAAe,GAAGH,IAAI,CAAJA,MAAtB,GAAsBA,CAAtB;;AACA,UAAI,6BAAJ,UAAyC;AACrCG,uBAAe,CAAfA,WAAe,CAAfA;AACH;;AACDF,6BAAuB,CAAvBA,QAAgC,6BAA6B;AACzDG,yBAAiB,CAAjBA,QAA0B,oBAAoB;AAAE,iBAAO1C,QAAQ,CAARA,KAAP,eAAOA,CAAP;AAAhD0C;AADJH;AAXJ,MAeA,cAAc;AACVtE,YAAM,CAANA;AACH;AAlBL4D;;AAoBAA,oBAAkB,CAAlBA,sBAAyC,2BAA2B;AAChE,QAAI1D,KAAK,GAAT;;AACA,QAAIa,OAAO,KAAK,KAAhB,GAAwB;AAAEA,aAAO,GAAPA;AAAe;;AACzC,QAAIC,YAAY,GAAG,UAAnB,MAAmB,CAAnB;AACAhB,UAAM,CAANA,iCAAwCgB,YAAY,CAAZA,KAAxChB,GAAwCgB,CAAxChB;AACA,WAAO,gDAAe,oBAAoB;AACtCgB,kBAAY,CAAZA,QAAqB,iBAAiB;AAClC,YAAIyD,iBAAiB,GAAGvE,KAAK,CAALA,oBAAxB,KAAwBA,CAAxB;;AACA,YAAI,CAAJ,mBAAwB;AACpBuE,2BAAiB,GAAG,IAApBA,GAAoB,EAApBA;;AACAvE,eAAK,CAALA;AACH;;AACDuE,yBAAiB,CAAjBA;AAPkC,OACtCzD,EADsC,CAStC;;AACA;AACA,UAAIP,EAAE,GAAGM,OAAO,CAAhB;AAAA,UAA2BL,QAAQ,GAAGD,EAAE,KAAK,KAAPA,IAAgBP,KAAK,CAArBO,WAAtC;;AACA,UAAIiE,oBAAoB,GAAGxE,KAAK,CAALA,uBAA3B,QAA2BA,CAA3B;;AACA,UAAI,CAAJ,sBAA2B;AACvBwE,4BAAoB,GAAG,IAAvBA,GAAuB,EAAvBA;AACH;;AACDA,0BAAoB,CAApBA;;AACAxE,WAAK,CAALA;;AACA,OAAC,YAAY;AAAE,eAAOxC,SAAS,QAAQ,KAAR,GAAgB,KAAhB,GAAwB,YAAY;AAC/D;;AACA,iBAAOS,WAAW,OAAO,cAAc;AACnC,oBAAQ0D,EAAE,CAAV;AACI;AACIpB,kBAAE,GAAGM,OAAO,CAAZN;AACA,oBAAI,EAAEA,EAAE,KAAK,KAAb,CAAI,CAAJ,EAAsB,OAAO,CAAC;AAAE;AAAH,kBAAP,CAAO,CAAP;AACtB,uBAAO,CAAC;AAAE;AAAH,kBAAc,KAArB,QAAO,CAAP;;AACJ;AACIQ,kBAAE,GAAGY,EAAE,CAAPZ,IAAKY,EAALZ;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAP,CAAO,CAAP;;AACJ;AACIA,kBAAE,GAAFA;AACAY,kBAAE,CAAFA;;AACJ;AACIJ,mBAAG,GAAHA;AACAI,kBAAE,CAAFA;;AACJ;AACIA,kBAAE,CAAFA,UAAa,QAAbA,CAAa,CAAbA;;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAc,uBAAuB;AAAEJ,qBAAG,EAAEA;AAAP,iBAAvB,CAAd,CAAP;;AACJ;AACIX,sBAAM,GAAGe,EAAE,CAAXf,IAASe,EAATf;AACAE,4BAAY,CAAZA,QAAqB,iBAAiB;AAClCF,wBAAM,CAANA;AADJE;AAGA,uBAAO,CAAC;AAAE;AAAH,kBAAP,CAAO,CAAP;;AACJ;AACI2D,mBAAG,GAAG9C,EAAE,CAAR8C,IAAM9C,EAAN8C;AACA5C,wBAAQ,CAARA;AACA,uBAAO,CAAC;AAAE;AAAH,kBAAP,CAAO,CAAP;;AACJ;AAAQ,uBAAO,CAAC;AAAE;AAAH,iBAAP;AA3BZ;AADJ,WAAkB,CAAlB;AAFW,SAAgB,CAAhB;AAAf;;AAkCA,aAAO,YAAY;AACf/B,cAAM,CAANA,qCAA4CgB,YAAY,CAAZA,KAA5ChB,GAA4CgB,CAA5ChB;;AACA,oBAAY;AACRE,eAAK,CAALA;;AACAc,sBAAY,CAAZA,QAAqB,iBAAiB;AAClC,gBAAIF,MAAM,CAAV,WAAIA,EAAJ,EAA0B;AACtBA,oBAAM,CAANA;AACH;;AACD,gBAAI2D,iBAAiB,GAAGvE,KAAK,CAALA,8BACpB,IADJ,GACI,EADJ;AAEAuE,6BAAiB,CAAjBA,QAA0B,oBAAoB;AAAE,qBAAO1C,QAAQ,CAAf,QAAOA,EAAP;AAAhD0C;AACAA,6BAAiB,CAAjBA;AAPJzD;;AASA,cAAId,KAAK,CAALA,0CAAJ,GAAuD;AACnDA,iBAAK,CAALA;;AACAA,iBAAK,CAALA;AACH;AACJ;;AACD;AAlBJ;AApDJ,KAAO,CAAP;AALJ0D;;AA+EA;AAnPoC,EAAxC,sEAAwC,CAAxC;;;;;;;;;;;;;;ACtIA;AAAA;AAAA;AAAA;AAAA,IAAIZ,QAAQ,GAAI,SAAI,IAAI,SAAI,CAAb,QAAC,IAA0B,YAAY;AAClDA,UAAQ,GAAGjG,MAAM,CAANA,UAAiB,aAAY;AACpC,SAAK,OAAOsC,CAAC,GAAR,GAAc4D,CAAC,GAAGxD,SAAS,CAAhC,QAAyCJ,CAAC,GAA1C,GAAgDA,CAAhD,IAAqD;AACjDD,OAAC,GAAGK,SAAS,CAAbL,CAAa,CAAbA;;AACA,WAAK,IAAL;AAAiB,YAAIrC,MAAM,CAANA,iCAAJ,CAAIA,CAAJ,EACbwB,CAAC,CAADA,CAAC,CAADA,GAAOa,CAAC,CAARb,CAAQ,CAARA;AADJ;AAEH;;AACD;AANJyE;;AAQA,SAAOA,QAAQ,CAARA,YAAP,SAAOA,CAAP;AATJ;;AAWA;AACA,IAAIhD,MAAM,GAAG,oEAAb,wBAAa,CAAb;;AACA,IAAI4E,sBAAsB;AAAG;AAAe,YAAY;AACpD,2CAAyC;AACrC,QAAI7D,OAAO,KAAK,KAAhB,GAAwB;AAAEA,aAAO,GAAPA;AAAe;;AACzC;AACH;;AACD6D,wBAAsB,CAAtBA,sBAA6C,kBAAkB;AAC3D,QAAIC,MAAM,KAAK,KAAf,GAAuB;AAAEA,YAAM,GAANA;AAAc;;AACvC,mBAAe7B,QAAQ,CAACA,QAAQ,KAAT,MAAS,CAAT,EAAuB,KAA9C,OAAuB,CAAvB;AACAhD,UAAM,CAANA,MAAa,eAAe,KAA5BA,eAA4B,EAA5BA,EAAoD,KAApDA;AACA,WAAO,KAAP;AAJJ4E;;AAMAA,wBAAsB,CAAtBA,wBAA+C,YAAY;AACvD;AADJA;;AAGA7H,QAAM,CAANA,eAAsB6H,sBAAsB,CAA5C7H,sBAAmE;AAC/DqD,OAAG,EAAE,eAAY;AACb,aAAO4C,QAAQ,KAAK,KAApB,OAAe,CAAf;AAF2D;AAI/D3C,cAAU,EAJqD;AAK/DC,gBAAY,EAAE;AALiD,GAAnEvD;AAOA;AArBJ,CAA4C,EAA5C;;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAYA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAIW,SAAS,GAAI,SAAI,IAAI,SAAI,CAAb,SAAC,IAA2B,6CAA6C;AACrF,wBAAsB;AAAE,WAAOV,KAAK,YAALA,YAA6B,MAAM,mBAAmB;AAAEW,aAAO,CAAPA,KAAO,CAAPA;AAA/D,KAAoC,CAApC;AAAoF;;AAC5G,SAAO,KAAKC,CAAC,KAAKA,CAAC,GAAZ,OAAM,CAAN,EAAyB,2BAA2B;AACvD,8BAA0B;AAAE,UAAI;AAAEC,YAAI,CAACC,SAAS,CAATA,KAALD,KAAKC,CAAD,CAAJD;AAAN,QAAqC,UAAU;AAAEE,cAAM,CAANA,CAAM,CAANA;AAAY;AAAE;;AAC3F,6BAAyB;AAAE,UAAI;AAAEF,YAAI,CAACC,SAAS,CAATA,OAAS,CAATA,CAALD,KAAKC,CAAD,CAAJD;AAAN,QAAyC,UAAU;AAAEE,cAAM,CAANA,CAAM,CAANA;AAAY;AAAE;;AAC9F,0BAAsB;AAAEC,YAAM,CAANA,OAAcL,OAAO,CAACK,MAAM,CAA5BA,KAAqB,CAArBA,GAAsCC,KAAK,CAACD,MAAM,CAAZC,KAAK,CAALA,iBAAtCD,QAAsCC,CAAtCD;AAAsF;;AAC9GH,QAAI,CAAC,CAACC,SAAS,GAAGA,SAAS,CAATA,eAAyBI,UAAU,IAAhD,EAAaJ,CAAb,EAALD,IAAK,EAAD,CAAJA;AAJJ,GAAO,CAAP;AAFJ;;AASA,IAAIM,WAAW,GAAI,SAAI,IAAI,SAAI,CAAb,WAAC,IAA6B,yBAAyB;AACrE,MAAIC,CAAC,GAAG;AAAEC,SAAK,EAAP;AAAYC,QAAI,EAAE,gBAAW;AAAE,UAAIC,CAAC,CAADA,CAAC,CAADA,GAAJ,GAAc,MAAMA,CAAC,CAAP,CAAO,CAAP;AAAY,aAAOA,CAAC,CAAR,CAAQ,CAAR;AAAzD;AAAyEC,QAAI,EAA7E;AAAmFC,OAAG,EAAE;AAAxF,GAAR;AAAA;AAAA;AAAA;AAAA;AACA,SAAO,CAAC,GAAG;AAAEC,QAAI,EAAEC,IAAI,CAAZ,CAAY,CAAZ;AAAiB,aAASA,IAAI,CAA9B,CAA8B,CAA9B;AAAmC,cAAUA,IAAI;AAAjD,GAAJ,EAA4D,iCAAiCC,CAAC,CAAC1B,MAAM,CAAR0B,QAAC,CAADA,GAAqB,YAAW;AAAE;AAA/H,GAA4D,CAA5D,EAAP;;AACA,mBAAiB;AAAE,WAAO,aAAa;AAAE,aAAOf,IAAI,CAAC,IAAZ,CAAY,CAAD,CAAX;AAAtB;AAA+C;;AAClE,oBAAkB;AACd,WAAO,MAAM,cAAN,iCAAM,CAAN;;AACP;AAAU,UAAI;AACV,YAAIgB,CAAC,GAADA,GAAOC,CAAC,KAAKP,CAAC,GAAGQ,EAAE,CAAFA,CAAE,CAAFA,OAAYD,CAAC,CAAbC,QAAa,CAAbA,GAA0BA,EAAE,CAAFA,CAAE,CAAFA,GAAQD,CAAC,CAADA,OAAC,CAADA,KAAe,CAACP,CAAC,GAAGO,CAAC,CAAN,QAAM,CAAN,KAAqBP,CAAC,CAADA,KAArB,CAAqBA,CAArB,EAAvBQ,CAAQD,CAARC,GAA4DD,CAAC,CAAjGA,IAAC,CAADA,IAA2G,CAAC,CAACP,CAAC,GAAGA,CAAC,CAADA,QAAUQ,EAAE,CAAjB,CAAiB,CAAZR,CAAL,EAAvH,MAAoJ;AACpJ,YAAIO,CAAC,GAADA,GAAJ,GAAcC,EAAE,GAAG,CAACA,EAAE,CAAFA,CAAE,CAAFA,GAAD,GAAYR,CAAC,CAAlBQ,KAAK,CAALA;;AACd,gBAAQA,EAAE,CAAV,CAAU,CAAV;AACI;AAAQ;AAAQR,aAAC,GAADA;AAAQ;;AACxB;AAAQH,aAAC,CAADA;AAAW,mBAAO;AAAEpB,mBAAK,EAAE+B,EAAE,CAAX,CAAW,CAAX;AAAgBC,kBAAI,EAAE;AAAtB,aAAP;;AACnB;AAAQZ,aAAC,CAADA;AAAWU,aAAC,GAAGC,EAAE,CAAND,CAAM,CAANA;AAAWC,cAAE,GAAG,CAALA,CAAK,CAALA;AAAU;;AACxC;AAAQA,cAAE,GAAGX,CAAC,CAADA,IAALW,GAAKX,EAALW;;AAAkBX,aAAC,CAADA;;AAAc;;AACxC;AACI,gBAAI,EAAEG,CAAC,GAAGH,CAAC,CAALG,MAAYA,CAAC,GAAGA,CAAC,CAADA,cAAgBA,CAAC,CAACA,CAAC,CAADA,SAApC,CAAmC,CAAnC,MAAuDQ,EAAE,CAAFA,CAAE,CAAFA,UAAeA,EAAE,CAAFA,CAAE,CAAFA,KAA1E,CAAI,CAAJ,EAAwF;AAAEX,eAAC,GAADA;AAAO;AAAW;;AAC5G,gBAAIW,EAAE,CAAFA,CAAE,CAAFA,WAAgB,MAAOA,EAAE,CAAFA,CAAE,CAAFA,GAAQR,CAAC,CAATQ,CAAS,CAATA,IAAgBA,EAAE,CAAFA,CAAE,CAAFA,GAAQR,CAAC,CAApD,CAAoD,CAAhDQ,CAAJ,EAA2D;AAAEX,eAAC,CAADA,QAAUW,EAAE,CAAZX,CAAY,CAAZA;AAAiB;AAAQ;;AACtF,gBAAIW,EAAE,CAAFA,CAAE,CAAFA,UAAeX,CAAC,CAADA,QAAUG,CAAC,CAA9B,CAA8B,CAA9B,EAAmC;AAAEH,eAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA;AAAgBG,eAAC,GAADA;AAAQ;AAAQ;;AACrE,gBAAIA,CAAC,IAAIH,CAAC,CAADA,QAAUG,CAAC,CAApB,CAAoB,CAApB,EAAyB;AAAEH,eAAC,CAADA,QAAUG,CAAC,CAAXH,CAAW,CAAXA;;AAAgBA,eAAC,CAADA;;AAAgB;AAAQ;;AACnE,gBAAIG,CAAC,CAAL,CAAK,CAAL,EAAUH,CAAC,CAADA;;AACVA,aAAC,CAADA;;AAAc;AAXtB;;AAaAW,UAAE,GAAGE,IAAI,CAAJA,cAALF,CAAKE,CAALF;AAhBM,QAiBR,UAAU;AAAEA,UAAE,GAAG,IAALA,CAAK,CAALA;AAAaD,SAAC,GAADA;AAjBjB,gBAiBkC;AAAED,SAAC,GAAGN,CAAC,GAALM;AAAY;AAjB1D;;AAkBA,QAAIE,EAAE,CAAFA,CAAE,CAAFA,GAAJ,GAAe,MAAMA,EAAE,CAAR,CAAQ,CAAR;AAAa,WAAO;AAAE/B,WAAK,EAAE+B,EAAE,CAAFA,CAAE,CAAFA,GAAQA,EAAE,CAAVA,CAAU,CAAVA,GAAgB,KAAzB;AAAiCC,UAAI,EAAE;AAAvC,KAAP;AAC/B;AAzBL;AA2BA;;;;;;;;;;;;AAYA;;;AACA;AACA;AACA;AACA;AACA,IAAIgB,MAAM,GAAG,oEAAb,QAAa,CAAb;;AACA,IAAI8E,MAAM;AAAG;AAAe,YAAY;AACpC;;;;;AAKA,2BAAyB;AACrB;AACA9E,UAAM,CAANA,wBAA+B,KAA/BA;AACA;AACA,qBAAiB,oBAAjB,IAAiB,CAAjB;AACH;;AACDjD,QAAM,CAANA,eAAsB+H,MAAM,CAA5B/H,iCAA8D;AAC1D;;;AAGAqD,OAAG,EAAE,eAAY;AACb,UAAI,CAAC,KAAL,qBAA+B;AAC3B,mCAA2B,kEAAuB,KAAlD,QAA2B,CAA3B;AACH;;AACD,aAAO,KAAP;AARsD;AAU1DC,cAAU,EAVgD;AAW1DC,gBAAY,EAAE;AAX4C,GAA9DvD;;AAaA+H,QAAM,CAANA,0BAAiC,YAAY;AACzC;AADJA;AAGA;;;;;;;;AAMAA,QAAM,CAANA,sBAA6B,mBAAmB;AAC5C,QAAI5E,KAAK,GAAT;;AACA,QAAI6E,GAAG,GAAGhE,OAAO,GAAGA,OAAO,CAAPA,UAAH,UAAjB;AACAf,UAAM,CAANA,0BAAiC;AAAE+E,SAAG,EAAEA;AAAP,KAAjC/E;AACA,oBAAgBjD,MAAM,CAANA,WAAkB,KAAlBA,UAAhB,GAAgBA,CAAhB;;AACA,yBAAqB,qBAAqB;AAAE,aAAOiI,SAAS,CAATA,UAAoB9E,KAAK,CAAhC,QAAO8E,CAAP;AAA5C;;AACA,WAAO,KAAP;AANJF;AAQA;;;;;;AAIAA,QAAM,CAANA,yBAAgC,qBAAqB;AACjD,WAAOpH,SAAS,OAAO,KAAP,GAAe,KAAf,GAAuB,YAAY;AAC/C;AACA,aAAOS,WAAW,OAAO,cAAc;AACnC,YAAI6G,SAAS,IAAIA,SAAS,CAATA,kBAAjB,UAAuD;AACnD;;AACAH,gBAAM,GAAGG,SAAS,CAATA,UAAoB,KAA7BH,QAASG,CAATH;AACA,iBAAO,CAAC;AAAE;AAAH,YAAP,MAAO,CAAP;AACH;;AACD,eAAO,CAAC;AAAE;AAAH,SAAP;AANJ,OAAkB,CAAlB;AAFJ,KAAgB,CAAhB;AADJC;;AAaAA,QAAM,CAANA,8BAAqC,wBAAwB;AACzD,QAAIG,YAAY,KAAhB,sGAA2D;AACvD,aAAO,KAAP;AACH;;AACD,WAAO,sBAAsB,qBAAqB;AAAE,aAAOD,SAAS,CAATA,sBAAP;AAApD,KAAO,CAAP;AAJJF;;AAMAA,QAAM,CAANA,yBAAgC,mBAAmB;AAC/C,QAAI/D,OAAO,KAAK,KAAhB,GAAwB;AAAEA,aAAO,GAAPA;AAAe;;AACzC,QAAIkE,YAAY,GAAGlE,OAAO,CAA1B;;AACA,QAAI,CAAJ,cAAmB;AACf,aAAO,KAAP;AACH;;AACD,QAAImE,QAAQ,GAAG,uBAAf,YAAe,CAAf;;AACA,QAAI,CAAJ,UAAe;AACX,YAAM,UAAU,mCAAhB,YAAM,CAAN;AACH;;AACD,WAAO,CAAP,QAAO,CAAP;AAVJJ;;AAYAA,QAAM,CAANA,oBAA2B,gCAAgC;AACvD,WAAOpH,SAAS,OAAO,KAAP,GAAe,KAAf,GAAuB,YAAY;AAC/C,aAAOS,WAAW,OAAO,cAAc;AACnC,eAAO,CAAC;AAAE;AAAH,UAAeyD,OAAO,CAAPA,IAAY,+BAA+B,oBAAoB;AAC7E,iBAAOsD,QAAQ,CAARA,qBAAP,OAAOA,CAAP;AADR,SAAkC,CAAZtD,CAAf,CAAP;AADJ,OAAkB,CAAlB;AADJ,KAAgB,CAAhB;AADJkD;;AASAA,QAAM,CAANA,sBAA6B,2BAA2B;AACpD9E,UAAM,CAANA;AACA,QAAImF,SAAS,GAAG,kBAAhB,OAAgB,CAAhB;AACA,WAAO,gDAAe,oBAAoB;AACtC,UAAIC,WAAW,GAAG,SAAS,CAAT,IAAc,oBAAoB;AAAE,eAAQ;AAC1DF,kBAAQ,EADkD;AAE1DG,oBAAU,EAAEH,QAAQ,CAARA;AAF8C,SAAR;AAAtD,OAAkB,CAAlB;AAIA,UAAII,aAAa,GAAG,WAAW,CAAX,IAAgB,cAAc;AAC9C,YAAIJ,QAAQ,GAAGzE,EAAE,CAAjB;AAAA,YAA4B4E,UAAU,GAAG5E,EAAE,CAA3C;AACA,eAAO,UAAU,CAAV,UAAqB;AACxB8E,eAAK,EAAEC,OAAO,CADU;AAExB9G,cAAI,EAAE,qBAAiB;AAAE,mBAAO,QAAQ,CAAR,KAAc;AAAEwG,sBAAQ,EAAV;AAAsBlI,mBAAK,EAAEA;AAA7B,aAAd,CAAP;AAFD;AAGxBiF,eAAK,EAAE,uBAAiB;AAAE,mBAAO,QAAQ,CAAR,MAAe;AAAEiD,sBAAQ,EAAV;AAAsBjD,mBAAK,EAAEA;AAA7B,aAAf,CAAP;AAA8D;AAHhE,SAArB,CAAP;AAFJ,OAAoB,CAApB;AAQA,aAAO,YAAY;AACf,eAAO,aAAa,CAAb,QAAsB,wBAAwB;AAAE,iBAAOwD,YAAY,CAAnB,WAAOA,EAAP;AAAvD,SAAO,CAAP;AADJ;AAbJ,KAAO,CAAP;AAHJX;;AAqBA;AA3GJ,CAA4B,EAA5B;;AA6GA,uE;;;;;;;;;;;;ACnKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AAYA;AACA;AACA,IAAI9E,MAAM,GAAG,oEAAb,QAAa,CAAb;AACA,IAAI0F,SAAS,GAAb;;AACA,IAAI,CAAJ,WAAgB;AACZ1F,QAAM,CAANA;AACA0F,WAAS,GAAG,oDAAZA,IAAY,CAAZA;AACH;;AACD,IAAIZ,MAAM,GAAV;AACAa,wDAAO,CAAPA;AACA;AACA;;;;;;;;;;;;ACvBA,+D","file":"aws-amplify-pubsub.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@aws-amplify/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_pubsub\", [\"@aws-amplify/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_pubsub\"] = factory(require(\"@aws-amplify/core\"));\n\telse\n\t\troot[\"aws_amplify_pubsub\"] = factory(root[\"@aws-amplify/core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__aws_amplify_core__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib-esm/index.js\");\n","/*******************************************************************************\n * Copyright (c) 2013 IBM Corp.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * and Eclipse Distribution License v1.0 which accompany this distribution.\n *\n * The Eclipse Public License is available at\n *    http://www.eclipse.org/legal/epl-v10.html\n * and the Eclipse Distribution License is available at\n *   http://www.eclipse.org/org/documents/edl-v10.php.\n *\n * Contributors:\n *    Andrew Banks - initial API and implementation and initial documentation\n *******************************************************************************/\n\n\n// Only expose a single object name in the global namespace.\n// Everything must go through this module. Global Paho module\n// only has a single public function, client, which returns\n// a Paho client object given connection details.\n\n/**\n * Send and receive messages using web browsers.\n * <p>\n * This programming interface lets a JavaScript client application use the MQTT V3.1 or\n * V3.1.1 protocol to connect to an MQTT-supporting messaging server.\n *\n * The function supported includes:\n * <ol>\n * <li>Connecting to and disconnecting from a server. The server is identified by its host name and port number.\n * <li>Specifying options that relate to the communications link with the server,\n * for example the frequency of keep-alive heartbeats, and whether SSL/TLS is required.\n * <li>Subscribing to and receiving messages from MQTT Topics.\n * <li>Publishing messages to MQTT Topics.\n * </ol>\n * <p>\n * The API consists of two main objects:\n * <dl>\n * <dt><b>{@link Paho.Client}</b></dt>\n * <dd>This contains methods that provide the functionality of the API,\n * including provision of callbacks that notify the application when a message\n * arrives from or is delivered to the messaging server,\n * or when the status of its connection to the messaging server changes.</dd>\n * <dt><b>{@link Paho.Message}</b></dt>\n * <dd>This encapsulates the payload of the message along with various attributes\n * associated with its delivery, in particular the destination to which it has\n * been (or is about to be) sent.</dd>\n * </dl>\n * <p>\n * The programming interface validates parameters passed to it, and will throw\n * an Error containing an error message intended for developer use, if it detects\n * an error with any parameter.\n * <p>\n * Example:\n *\n * <code><pre>\nvar client = new Paho.MQTT.Client(location.hostname, Number(location.port), \"clientId\");\nclient.onConnectionLost = onConnectionLost;\nclient.onMessageArrived = onMessageArrived;\nclient.connect({onSuccess:onConnect});\n\nfunction onConnect() {\n  // Once a connection has been made, make a subscription and send a message.\n  console.log(\"onConnect\");\n  client.subscribe(\"/World\");\n  var message = new Paho.MQTT.Message(\"Hello\");\n  message.destinationName = \"/World\";\n  client.send(message);\n};\nfunction onConnectionLost(responseObject) {\n  if (responseObject.errorCode !== 0)\n\tconsole.log(\"onConnectionLost:\"+responseObject.errorMessage);\n};\nfunction onMessageArrived(message) {\n  console.log(\"onMessageArrived:\"+message.payloadString);\n  client.disconnect();\n};\n * </pre></code>\n * @namespace Paho\n */\n\n/* jshint shadow:true */\n(function ExportLibrary(root, factory) {\n\tif(typeof exports === \"object\" && typeof module === \"object\"){\n\t\tmodule.exports = factory();\n\t} else if (typeof define === \"function\" && define.amd){\n\t\tdefine(factory);\n\t} else if (typeof exports === \"object\"){\n\t\texports = factory();\n\t} else {\n\t\t//if (typeof root.Paho === \"undefined\"){\n\t\t//\troot.Paho = {};\n\t\t//}\n\t\troot.Paho = factory();\n\t}\n})(this, function LibraryFactory(){\n\n\n\tvar PahoMQTT = (function (global) {\n\n\t// Private variables below, these are only visible inside the function closure\n\t// which is used to define the module.\n\tvar version = \"@VERSION@-@BUILDLEVEL@\";\n\n\t/**\n\t * @private\n\t */\n\tvar localStorage = global.localStorage || (function () {\n\t\tvar data = {};\n\n\t\treturn {\n\t\t\tsetItem: function (key, item) { data[key] = item; },\n\t\t\tgetItem: function (key) { return data[key]; },\n\t\t\tremoveItem: function (key) { delete data[key]; },\n\t\t};\n\t})();\n\n\t\t/**\n\t * Unique message type identifiers, with associated\n\t * associated integer values.\n\t * @private\n\t */\n\t\tvar MESSAGE_TYPE = {\n\t\t\tCONNECT: 1,\n\t\t\tCONNACK: 2,\n\t\t\tPUBLISH: 3,\n\t\t\tPUBACK: 4,\n\t\t\tPUBREC: 5,\n\t\t\tPUBREL: 6,\n\t\t\tPUBCOMP: 7,\n\t\t\tSUBSCRIBE: 8,\n\t\t\tSUBACK: 9,\n\t\t\tUNSUBSCRIBE: 10,\n\t\t\tUNSUBACK: 11,\n\t\t\tPINGREQ: 12,\n\t\t\tPINGRESP: 13,\n\t\t\tDISCONNECT: 14\n\t\t};\n\n\t\t// Collection of utility methods used to simplify module code\n\t\t// and promote the DRY pattern.\n\n\t\t/**\n\t * Validate an object's parameter names to ensure they\n\t * match a list of expected variables name for this option\n\t * type. Used to ensure option object passed into the API don't\n\t * contain erroneous parameters.\n\t * @param {Object} obj - User options object\n\t * @param {Object} keys - valid keys and types that may exist in obj.\n\t * @throws {Error} Invalid option parameter found.\n\t * @private\n\t */\n\t\tvar validate = function(obj, keys) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\tif (keys.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (typeof obj[key] !== keys[key])\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof obj[key], key]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar errorStr = \"Unknown property, \" + key + \". Valid properties are:\";\n\t\t\t\t\t\tfor (var validKey in keys)\n\t\t\t\t\t\t\tif (keys.hasOwnProperty(validKey))\n\t\t\t\t\t\t\t\terrorStr = errorStr+\" \"+validKey;\n\t\t\t\t\t\tthrow new Error(errorStr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Return a new function which runs the user function bound\n\t * to a fixed scope.\n\t * @param {function} User function\n\t * @param {object} Function scope\n\t * @return {function} User function bound to another scope\n\t * @private\n\t */\n\t\tvar scope = function (f, scope) {\n\t\t\treturn function () {\n\t\t\t\treturn f.apply(scope, arguments);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t * Unique message type identifiers, with associated\n\t * associated integer values.\n\t * @private\n\t */\n\t\tvar ERROR = {\n\t\t\tOK: {code:0, text:\"AMQJSC0000I OK.\"},\n\t\t\tCONNECT_TIMEOUT: {code:1, text:\"AMQJSC0001E Connect timed out.\"},\n\t\t\tSUBSCRIBE_TIMEOUT: {code:2, text:\"AMQJS0002E Subscribe timed out.\"},\n\t\t\tUNSUBSCRIBE_TIMEOUT: {code:3, text:\"AMQJS0003E Unsubscribe timed out.\"},\n\t\t\tPING_TIMEOUT: {code:4, text:\"AMQJS0004E Ping timed out.\"},\n\t\t\tINTERNAL_ERROR: {code:5, text:\"AMQJS0005E Internal error. Error Message: {0}, Stack trace: {1}\"},\n\t\t\tCONNACK_RETURNCODE: {code:6, text:\"AMQJS0006E Bad Connack return code:{0} {1}.\"},\n\t\t\tSOCKET_ERROR: {code:7, text:\"AMQJS0007E Socket error:{0}.\"},\n\t\t\tSOCKET_CLOSE: {code:8, text:\"AMQJS0008I Socket closed.\"},\n\t\t\tMALFORMED_UTF: {code:9, text:\"AMQJS0009E Malformed UTF data:{0} {1} {2}.\"},\n\t\t\tUNSUPPORTED: {code:10, text:\"AMQJS0010E {0} is not supported by this browser.\"},\n\t\t\tINVALID_STATE: {code:11, text:\"AMQJS0011E Invalid state {0}.\"},\n\t\t\tINVALID_TYPE: {code:12, text:\"AMQJS0012E Invalid type {0} for {1}.\"},\n\t\t\tINVALID_ARGUMENT: {code:13, text:\"AMQJS0013E Invalid argument {0} for {1}.\"},\n\t\t\tUNSUPPORTED_OPERATION: {code:14, text:\"AMQJS0014E Unsupported operation.\"},\n\t\t\tINVALID_STORED_DATA: {code:15, text:\"AMQJS0015E Invalid data in local storage key={0} value={1}.\"},\n\t\t\tINVALID_MQTT_MESSAGE_TYPE: {code:16, text:\"AMQJS0016E Invalid MQTT message type {0}.\"},\n\t\t\tMALFORMED_UNICODE: {code:17, text:\"AMQJS0017E Malformed Unicode string:{0} {1}.\"},\n\t\t\tBUFFER_FULL: {code:18, text:\"AMQJS0018E Message buffer is full, maximum buffer size: {0}.\"},\n\t\t};\n\n\t\t/** CONNACK RC Meaning. */\n\t\tvar CONNACK_RC = {\n\t\t\t0:\"Connection Accepted\",\n\t\t\t1:\"Connection Refused: unacceptable protocol version\",\n\t\t\t2:\"Connection Refused: identifier rejected\",\n\t\t\t3:\"Connection Refused: server unavailable\",\n\t\t\t4:\"Connection Refused: bad user name or password\",\n\t\t\t5:\"Connection Refused: not authorized\"\n\t\t};\n\n\t/**\n\t * Format an error message text.\n\t * @private\n\t * @param {error} ERROR value above.\n\t * @param {substitutions} [array] substituted into the text.\n\t * @return the text with the substitutions made.\n\t */\n\t\tvar format = function(error, substitutions) {\n\t\t\tvar text = error.text;\n\t\t\tif (substitutions) {\n\t\t\t\tvar field,start;\n\t\t\t\tfor (var i=0; i<substitutions.length; i++) {\n\t\t\t\t\tfield = \"{\"+i+\"}\";\n\t\t\t\t\tstart = text.indexOf(field);\n\t\t\t\t\tif(start > 0) {\n\t\t\t\t\t\tvar part1 = text.substring(0,start);\n\t\t\t\t\t\tvar part2 = text.substring(start+field.length);\n\t\t\t\t\t\ttext = part1+substitutions[i]+part2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn text;\n\t\t};\n\n\t\t//MQTT protocol and version          6    M    Q    I    s    d    p    3\n\t\tvar MqttProtoIdentifierv3 = [0x00,0x06,0x4d,0x51,0x49,0x73,0x64,0x70,0x03];\n\t\t//MQTT proto/version for 311         4    M    Q    T    T    4\n\t\tvar MqttProtoIdentifierv4 = [0x00,0x04,0x4d,0x51,0x54,0x54,0x04];\n\n\t\t/**\n\t * Construct an MQTT wire protocol message.\n\t * @param type MQTT packet type.\n\t * @param options optional wire message attributes.\n\t *\n\t * Optional properties\n\t *\n\t * messageIdentifier: message ID in the range [0..65535]\n\t * payloadMessage:\tApplication Message - PUBLISH only\n\t * connectStrings:\tarray of 0 or more Strings to be put into the CONNECT payload\n\t * topics:\t\t\tarray of strings (SUBSCRIBE, UNSUBSCRIBE)\n\t * requestQoS:\t\tarray of QoS values [0..2]\n\t *\n\t * \"Flag\" properties\n\t * cleanSession:\ttrue if present / false if absent (CONNECT)\n\t * willMessage:  \ttrue if present / false if absent (CONNECT)\n\t * isRetained:\t\ttrue if present / false if absent (CONNECT)\n\t * userName:\t\ttrue if present / false if absent (CONNECT)\n\t * password:\t\ttrue if present / false if absent (CONNECT)\n\t * keepAliveInterval:\tinteger [0..65535]  (CONNECT)\n\t *\n\t * @private\n\t * @ignore\n\t */\n\t\tvar WireMessage = function (type, options) {\n\t\t\tthis.type = type;\n\t\t\tfor (var name in options) {\n\t\t\t\tif (options.hasOwnProperty(name)) {\n\t\t\t\t\tthis[name] = options[name];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tWireMessage.prototype.encode = function() {\n\t\t// Compute the first byte of the fixed header\n\t\t\tvar first = ((this.type & 0x0f) << 4);\n\n\t\t\t/*\n\t\t * Now calculate the length of the variable header + payload by adding up the lengths\n\t\t * of all the component parts\n\t\t */\n\n\t\t\tvar remLength = 0;\n\t\t\tvar topicStrLength = [];\n\t\t\tvar destinationNameLength = 0;\n\t\t\tvar willMessagePayloadBytes;\n\n\t\t\t// if the message contains a messageIdentifier then we need two bytes for that\n\t\t\tif (this.messageIdentifier !== undefined)\n\t\t\t\tremLength += 2;\n\n\t\t\tswitch(this.type) {\n\t\t\t// If this a Connect then we need to include 12 bytes for its header\n\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\tswitch(this.mqttVersion) {\n\t\t\t\tcase 3:\n\t\t\t\t\tremLength += MqttProtoIdentifierv3.length + 3;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tremLength += MqttProtoIdentifierv4.length + 3;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tremLength += UTF8Length(this.clientId) + 2;\n\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\tremLength += UTF8Length(this.willMessage.destinationName) + 2;\n\t\t\t\t\t// Will message is always a string, sent as UTF-8 characters with a preceding length.\n\t\t\t\t\twillMessagePayloadBytes = this.willMessage.payloadBytes;\n\t\t\t\t\tif (!(willMessagePayloadBytes instanceof Uint8Array))\n\t\t\t\t\t\twillMessagePayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\t\tremLength += willMessagePayloadBytes.byteLength +2;\n\t\t\t\t}\n\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\tremLength += UTF8Length(this.userName) + 2;\n\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\tremLength += UTF8Length(this.password) + 2;\n\t\t\t\tbreak;\n\n\t\t\t// Subscribe, Unsubscribe can both contain topic strings\n\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\tfor ( var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t}\n\t\t\t\tremLength += this.requestedQos.length; // 1 byte for each topic's Qos\n\t\t\t\t// QoS on Subscribe only\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\tfor ( var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\tif (this.payloadMessage.duplicate) first |= 0x08;\n\t\t\t\tfirst  = first |= (this.payloadMessage.qos << 1);\n\t\t\t\tif (this.payloadMessage.retained) first |= 0x01;\n\t\t\t\tdestinationNameLength = UTF8Length(this.payloadMessage.destinationName);\n\t\t\t\tremLength += destinationNameLength + 2;\n\t\t\t\tvar payloadBytes = this.payloadMessage.payloadBytes;\n\t\t\t\tremLength += payloadBytes.byteLength;\n\t\t\t\tif (payloadBytes instanceof ArrayBuffer)\n\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\telse if (!(payloadBytes instanceof Uint8Array))\n\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes.buffer);\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Now we can allocate a buffer for the message\n\n\t\t\tvar mbi = encodeMBI(remLength);  // Convert the length to MQTT MBI format\n\t\t\tvar pos = mbi.length + 1;        // Offset of start of variable header\n\t\t\tvar buffer = new ArrayBuffer(remLength + pos);\n\t\t\tvar byteStream = new Uint8Array(buffer);    // view it as a sequence of bytes\n\n\t\t\t//Write the fixed header into the buffer\n\t\t\tbyteStream[0] = first;\n\t\t\tbyteStream.set(mbi,1);\n\n\t\t\t// If this is a PUBLISH then the variable header starts with a topic\n\t\t\tif (this.type == MESSAGE_TYPE.PUBLISH)\n\t\t\t\tpos = writeString(this.payloadMessage.destinationName, destinationNameLength, byteStream, pos);\n\t\t\t// If this is a CONNECT then the variable header contains the protocol name/version, flags and keepalive time\n\n\t\t\telse if (this.type == MESSAGE_TYPE.CONNECT) {\n\t\t\t\tswitch (this.mqttVersion) {\n\t\t\t\tcase 3:\n\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv3, pos);\n\t\t\t\t\tpos += MqttProtoIdentifierv3.length;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv4, pos);\n\t\t\t\t\tpos += MqttProtoIdentifierv4.length;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar connectFlags = 0;\n\t\t\t\tif (this.cleanSession)\n\t\t\t\t\tconnectFlags = 0x02;\n\t\t\t\tif (this.willMessage !== undefined ) {\n\t\t\t\t\tconnectFlags |= 0x04;\n\t\t\t\t\tconnectFlags |= (this.willMessage.qos<<3);\n\t\t\t\t\tif (this.willMessage.retained) {\n\t\t\t\t\t\tconnectFlags |= 0x20;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\tconnectFlags |= 0x80;\n\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\tconnectFlags |= 0x40;\n\t\t\t\tbyteStream[pos++] = connectFlags;\n\t\t\t\tpos = writeUint16 (this.keepAliveInterval, byteStream, pos);\n\t\t\t}\n\n\t\t\t// Output the messageIdentifier - if there is one\n\t\t\tif (this.messageIdentifier !== undefined)\n\t\t\t\tpos = writeUint16 (this.messageIdentifier, byteStream, pos);\n\n\t\t\tswitch(this.type) {\n\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\tpos = writeString(this.clientId, UTF8Length(this.clientId), byteStream, pos);\n\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\tpos = writeString(this.willMessage.destinationName, UTF8Length(this.willMessage.destinationName), byteStream, pos);\n\t\t\t\t\tpos = writeUint16(willMessagePayloadBytes.byteLength, byteStream, pos);\n\t\t\t\t\tbyteStream.set(willMessagePayloadBytes, pos);\n\t\t\t\t\tpos += willMessagePayloadBytes.byteLength;\n\n\t\t\t\t}\n\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\tpos = writeString(this.userName, UTF8Length(this.userName), byteStream, pos);\n\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\tpos = writeString(this.password, UTF8Length(this.password), byteStream, pos);\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t// PUBLISH has a text or binary payload, if text do not add a 2 byte length field, just the UTF characters.\n\t\t\t\tbyteStream.set(payloadBytes, pos);\n\n\t\t\t\tbreak;\n\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBREC:\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBREL:\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBCOMP:\n\t\t\t\t//    \t    \tbreak;\n\n\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\t// SUBSCRIBE has a list of topic strings and request QoS\n\t\t\t\tfor (var i=0; i<this.topics.length; i++) {\n\t\t\t\t\tpos = writeString(this.topics[i], topicStrLength[i], byteStream, pos);\n\t\t\t\t\tbyteStream[pos++] = this.requestedQos[i];\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\t// UNSUBSCRIBE has a list of topic strings\n\t\t\t\tfor (var i=0; i<this.topics.length; i++)\n\t\t\t\t\tpos = writeString(this.topics[i], topicStrLength[i], byteStream, pos);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// Do nothing.\n\t\t\t}\n\n\t\t\treturn buffer;\n\t\t};\n\n\t\tfunction decodeMessage(input,pos) {\n\t\t\tvar startingPos = pos;\n\t\t\tvar first = input[pos];\n\t\t\tvar type = first >> 4;\n\t\t\tvar messageInfo = first &= 0x0f;\n\t\t\tpos += 1;\n\n\n\t\t\t// Decode the remaining length (MBI format)\n\n\t\t\tvar digit;\n\t\t\tvar remLength = 0;\n\t\t\tvar multiplier = 1;\n\t\t\tdo {\n\t\t\t\tif (pos == input.length) {\n\t\t\t\t\treturn [null,startingPos];\n\t\t\t\t}\n\t\t\t\tdigit = input[pos++];\n\t\t\t\tremLength += ((digit & 0x7F) * multiplier);\n\t\t\t\tmultiplier *= 128;\n\t\t\t} while ((digit & 0x80) !== 0);\n\n\t\t\tvar endPos = pos+remLength;\n\t\t\tif (endPos > input.length) {\n\t\t\t\treturn [null,startingPos];\n\t\t\t}\n\n\t\t\tvar wireMessage = new WireMessage(type);\n\t\t\tswitch(type) {\n\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\tvar connectAcknowledgeFlags = input[pos++];\n\t\t\t\tif (connectAcknowledgeFlags & 0x01)\n\t\t\t\t\twireMessage.sessionPresent = true;\n\t\t\t\twireMessage.returnCode = input[pos++];\n\t\t\t\tbreak;\n\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\tvar qos = (messageInfo >> 1) & 0x03;\n\n\t\t\t\tvar len = readUint16(input, pos);\n\t\t\t\tpos += 2;\n\t\t\t\tvar topicName = parseUTF8(input, pos, len);\n\t\t\t\tpos += len;\n\t\t\t\t// If QoS 1 or 2 there will be a messageIdentifier\n\t\t\t\tif (qos > 0) {\n\t\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\t\tpos += 2;\n\t\t\t\t}\n\n\t\t\t\tvar message = new Message(input.subarray(pos, endPos));\n\t\t\t\tif ((messageInfo & 0x01) == 0x01)\n\t\t\t\t\tmessage.retained = true;\n\t\t\t\tif ((messageInfo & 0x08) == 0x08)\n\t\t\t\t\tmessage.duplicate =  true;\n\t\t\t\tmessage.qos = qos;\n\t\t\t\tmessage.destinationName = topicName;\n\t\t\t\twireMessage.payloadMessage = message;\n\t\t\t\tbreak;\n\n\t\t\tcase  MESSAGE_TYPE.PUBACK:\n\t\t\tcase  MESSAGE_TYPE.PUBREC:\n\t\t\tcase  MESSAGE_TYPE.PUBREL:\n\t\t\tcase  MESSAGE_TYPE.PUBCOMP:\n\t\t\tcase  MESSAGE_TYPE.UNSUBACK:\n\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\tbreak;\n\n\t\t\tcase  MESSAGE_TYPE.SUBACK:\n\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\tpos += 2;\n\t\t\t\twireMessage.returnCode = input.subarray(pos, endPos);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn [wireMessage,endPos];\n\t\t}\n\n\t\tfunction writeUint16(input, buffer, offset) {\n\t\t\tbuffer[offset++] = input >> 8;      //MSB\n\t\t\tbuffer[offset++] = input % 256;     //LSB\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction writeString(input, utf8Length, buffer, offset) {\n\t\t\toffset = writeUint16(utf8Length, buffer, offset);\n\t\t\tstringToUTF8(input, buffer, offset);\n\t\t\treturn offset + utf8Length;\n\t\t}\n\n\t\tfunction readUint16(buffer, offset) {\n\t\t\treturn 256*buffer[offset] + buffer[offset+1];\n\t\t}\n\n\t\t/**\n\t * Encodes an MQTT Multi-Byte Integer\n\t * @private\n\t */\n\t\tfunction encodeMBI(number) {\n\t\t\tvar output = new Array(1);\n\t\t\tvar numBytes = 0;\n\n\t\t\tdo {\n\t\t\t\tvar digit = number % 128;\n\t\t\t\tnumber = number >> 7;\n\t\t\t\tif (number > 0) {\n\t\t\t\t\tdigit |= 0x80;\n\t\t\t\t}\n\t\t\t\toutput[numBytes++] = digit;\n\t\t\t} while ( (number > 0) && (numBytes<4) );\n\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t * Takes a String and calculates its length in bytes when encoded in UTF8.\n\t * @private\n\t */\n\t\tfunction UTF8Length(input) {\n\t\t\tvar output = 0;\n\t\t\tfor (var i = 0; i<input.length; i++)\n\t\t\t{\n\t\t\t\tvar charCode = input.charCodeAt(i);\n\t\t\t\tif (charCode > 0x7FF)\n\t\t\t\t{\n\t\t\t\t\t// Surrogate pair means its a 4 byte character\n\t\t\t\t\tif (0xD800 <= charCode && charCode <= 0xDBFF)\n\t\t\t\t\t{\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\toutput++;\n\t\t\t\t\t}\n\t\t\t\t\toutput +=3;\n\t\t\t\t}\n\t\t\t\telse if (charCode > 0x7F)\n\t\t\t\t\toutput +=2;\n\t\t\t\telse\n\t\t\t\t\toutput++;\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t * Takes a String and writes it into an array as UTF8 encoded bytes.\n\t * @private\n\t */\n\t\tfunction stringToUTF8(input, output, start) {\n\t\t\tvar pos = start;\n\t\t\tfor (var i = 0; i<input.length; i++) {\n\t\t\t\tvar charCode = input.charCodeAt(i);\n\n\t\t\t\t// Check for a surrogate pair.\n\t\t\t\tif (0xD800 <= charCode && charCode <= 0xDBFF) {\n\t\t\t\t\tvar lowCharCode = input.charCodeAt(++i);\n\t\t\t\t\tif (isNaN(lowCharCode)) {\n\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UNICODE, [charCode, lowCharCode]));\n\t\t\t\t\t}\n\t\t\t\t\tcharCode = ((charCode - 0xD800)<<10) + (lowCharCode - 0xDC00) + 0x10000;\n\n\t\t\t\t}\n\n\t\t\t\tif (charCode <= 0x7F) {\n\t\t\t\t\toutput[pos++] = charCode;\n\t\t\t\t} else if (charCode <= 0x7FF) {\n\t\t\t\t\toutput[pos++] = charCode>>6  & 0x1F | 0xC0;\n\t\t\t\t\toutput[pos++] = charCode     & 0x3F | 0x80;\n\t\t\t\t} else if (charCode <= 0xFFFF) {\n\t\t\t\t\toutput[pos++] = charCode>>12 & 0x0F | 0xE0;\n\t\t\t\t\toutput[pos++] = charCode>>6  & 0x3F | 0x80;\n\t\t\t\t\toutput[pos++] = charCode     & 0x3F | 0x80;\n\t\t\t\t} else {\n\t\t\t\t\toutput[pos++] = charCode>>18 & 0x07 | 0xF0;\n\t\t\t\t\toutput[pos++] = charCode>>12 & 0x3F | 0x80;\n\t\t\t\t\toutput[pos++] = charCode>>6  & 0x3F | 0x80;\n\t\t\t\t\toutput[pos++] = charCode     & 0x3F | 0x80;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\tfunction parseUTF8(input, offset, length) {\n\t\t\tvar output = \"\";\n\t\t\tvar utf16;\n\t\t\tvar pos = offset;\n\n\t\t\twhile (pos < offset+length)\n\t\t\t{\n\t\t\t\tvar byte1 = input[pos++];\n\t\t\t\tif (byte1 < 128)\n\t\t\t\t\tutf16 = byte1;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar byte2 = input[pos++]-128;\n\t\t\t\t\tif (byte2 < 0)\n\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16),\"\"]));\n\t\t\t\t\tif (byte1 < 0xE0)             // 2 byte character\n\t\t\t\t\t\tutf16 = 64*(byte1-0xC0) + byte2;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar byte3 = input[pos++]-128;\n\t\t\t\t\t\tif (byte3 < 0)\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16)]));\n\t\t\t\t\t\tif (byte1 < 0xF0)        // 3 byte character\n\t\t\t\t\t\t\tutf16 = 4096*(byte1-0xE0) + 64*byte2 + byte3;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar byte4 = input[pos++]-128;\n\t\t\t\t\t\t\tif (byte4 < 0)\n\t\t\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16), byte4.toString(16)]));\n\t\t\t\t\t\t\tif (byte1 < 0xF8)        // 4 byte character\n\t\t\t\t\t\t\t\tutf16 = 262144*(byte1-0xF0) + 4096*byte2 + 64*byte3 + byte4;\n\t\t\t\t\t\t\telse                     // longer encodings are not supported\n\t\t\t\t\t\t\t\tthrow new Error(format(ERROR.MALFORMED_UTF, [byte1.toString(16), byte2.toString(16), byte3.toString(16), byte4.toString(16)]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (utf16 > 0xFFFF)   // 4 byte character - express as a surrogate pair\n\t\t\t\t{\n\t\t\t\t\tutf16 -= 0x10000;\n\t\t\t\t\toutput += String.fromCharCode(0xD800 + (utf16 >> 10)); // lead character\n\t\t\t\t\tutf16 = 0xDC00 + (utf16 & 0x3FF);  // trail character\n\t\t\t\t}\n\t\t\t\toutput += String.fromCharCode(utf16);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t * Repeat keepalive requests, monitor responses.\n\t * @ignore\n\t */\n\t\tvar Pinger = function(client, keepAliveInterval) {\n\t\t\tthis._client = client;\n\t\t\tthis._keepAliveInterval = keepAliveInterval*1000;\n\t\t\tthis.isReset = false;\n\n\t\t\tvar pingReq = new WireMessage(MESSAGE_TYPE.PINGREQ).encode();\n\n\t\t\tvar doTimeout = function (pinger) {\n\t\t\t\treturn function () {\n\t\t\t\t\treturn doPing.apply(pinger);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t/** @ignore */\n\t\t\tvar doPing = function() {\n\t\t\t\tif (!this.isReset) {\n\t\t\t\t\tthis._client._trace(\"Pinger.doPing\", \"Timed out\");\n\t\t\t\t\tthis._client._disconnected( ERROR.PING_TIMEOUT.code , format(ERROR.PING_TIMEOUT));\n\t\t\t\t} else {\n\t\t\t\t\tthis.isReset = false;\n\t\t\t\t\tthis._client._trace(\"Pinger.doPing\", \"send PINGREQ\");\n\t\t\t\t\tthis._client.socket.send(pingReq);\n\t\t\t\t\tthis.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.reset = function() {\n\t\t\t\tthis.isReset = true;\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\tif (this._keepAliveInterval > 0)\n\t\t\t\t\tthis.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t\t};\n\n\t\t\tthis.cancel = function() {\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t * Monitor request completion.\n\t * @ignore\n\t */\n\t\tvar Timeout = function(client, timeoutSeconds, action, args) {\n\t\t\tif (!timeoutSeconds)\n\t\t\t\ttimeoutSeconds = 30;\n\n\t\t\tvar doTimeout = function (action, client, args) {\n\t\t\t\treturn function () {\n\t\t\t\t\treturn action.apply(client, args);\n\t\t\t\t};\n\t\t\t};\n\t\t\tthis.timeout = setTimeout(doTimeout(action, client, args), timeoutSeconds * 1000);\n\n\t\t\tthis.cancel = function() {\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t};\n\t\t};\n\n\t/**\n\t * Internal implementation of the Websockets MQTT V3.1 client.\n\t *\n\t * @name Paho.ClientImpl @constructor\n\t * @param {String} host the DNS nameof the webSocket host.\n\t * @param {Number} port the port number for that host.\n\t * @param {String} clientId the MQ client identifier.\n\t */\n\t\tvar ClientImpl = function (uri, host, port, path, clientId) {\n\t\t// Check dependencies are satisfied in this browser.\n\t\t\tif (!(\"WebSocket\" in global && global.WebSocket !== null)) {\n\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, [\"WebSocket\"]));\n\t\t\t}\n\t\t\tif (!(\"ArrayBuffer\" in global && global.ArrayBuffer !== null)) {\n\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, [\"ArrayBuffer\"]));\n\t\t\t}\n\t\t\tthis._trace(\"Paho.Client\", uri, host, port, path, clientId);\n\n\t\t\tthis.host = host;\n\t\t\tthis.port = port;\n\t\t\tthis.path = path;\n\t\t\tthis.uri = uri;\n\t\t\tthis.clientId = clientId;\n\t\t\tthis._wsuri = null;\n\n\t\t\t// Local storagekeys are qualified with the following string.\n\t\t\t// The conditional inclusion of path in the key is for backward\n\t\t\t// compatibility to when the path was not configurable and assumed to\n\t\t\t// be /mqtt\n\t\t\tthis._localKey=host+\":\"+port+(path!=\"/mqtt\"?\":\"+path:\"\")+\":\"+clientId+\":\";\n\n\t\t\t// Create private instance-only message queue\n\t\t\t// Internal queue of messages to be sent, in sending order.\n\t\t\tthis._msg_queue = [];\n\t\t\tthis._buffered_msg_queue = [];\n\n\t\t\t// Messages we have sent and are expecting a response for, indexed by their respective message ids.\n\t\t\tthis._sentMessages = {};\n\n\t\t\t// Messages we have received and acknowleged and are expecting a confirm message for\n\t\t\t// indexed by their respective message ids.\n\t\t\tthis._receivedMessages = {};\n\n\t\t\t// Internal list of callbacks to be executed when messages\n\t\t\t// have been successfully sent over web socket, e.g. disconnect\n\t\t\t// when it doesn't have to wait for ACK, just message is dispatched.\n\t\t\tthis._notify_msg_sent = {};\n\n\t\t\t// Unique identifier for SEND messages, incrementing\n\t\t\t// counter as messages are sent.\n\t\t\tthis._message_identifier = 1;\n\n\t\t\t// Used to determine the transmission sequence of stored sent messages.\n\t\t\tthis._sequence = 0;\n\n\n\t\t\t// Load the local state, if any, from the saved version, only restore state relevant to this client.\n\t\t\tfor (var key in localStorage)\n\t\t\t\tif (   key.indexOf(\"Sent:\"+this._localKey) === 0 || key.indexOf(\"Received:\"+this._localKey) === 0)\n\t\t\t\t\tthis.restore(key);\n\t\t};\n\n\t\t// Messaging Client public instance members.\n\t\tClientImpl.prototype.host = null;\n\t\tClientImpl.prototype.port = null;\n\t\tClientImpl.prototype.path = null;\n\t\tClientImpl.prototype.uri = null;\n\t\tClientImpl.prototype.clientId = null;\n\n\t\t// Messaging Client private instance members.\n\t\tClientImpl.prototype.socket = null;\n\t\t/* true once we have received an acknowledgement to a CONNECT packet. */\n\t\tClientImpl.prototype.connected = false;\n\t\t/* The largest message identifier allowed, may not be larger than 2**16 but\n\t\t * if set smaller reduces the maximum number of outbound messages allowed.\n\t\t */\n\t\tClientImpl.prototype.maxMessageIdentifier = 65536;\n\t\tClientImpl.prototype.connectOptions = null;\n\t\tClientImpl.prototype.hostIndex = null;\n\t\tClientImpl.prototype.onConnected = null;\n\t\tClientImpl.prototype.onConnectionLost = null;\n\t\tClientImpl.prototype.onMessageDelivered = null;\n\t\tClientImpl.prototype.onMessageArrived = null;\n\t\tClientImpl.prototype.traceFunction = null;\n\t\tClientImpl.prototype._msg_queue = null;\n\t\tClientImpl.prototype._buffered_msg_queue = null;\n\t\tClientImpl.prototype._connectTimeout = null;\n\t\t/* The sendPinger monitors how long we allow before we send data to prove to the server that we are alive. */\n\t\tClientImpl.prototype.sendPinger = null;\n\t\t/* The receivePinger monitors how long we allow before we require evidence that the server is alive. */\n\t\tClientImpl.prototype.receivePinger = null;\n\t\tClientImpl.prototype._reconnectInterval = 1; // Reconnect Delay, starts at 1 second\n\t\tClientImpl.prototype._reconnecting = false;\n\t\tClientImpl.prototype._reconnectTimeout = null;\n\t\tClientImpl.prototype.disconnectedPublishing = false;\n\t\tClientImpl.prototype.disconnectedBufferSize = 5000;\n\n\t\tClientImpl.prototype.receiveBuffer = null;\n\n\t\tClientImpl.prototype._traceBuffer = null;\n\t\tClientImpl.prototype._MAX_TRACE_ENTRIES = 100;\n\n\t\tClientImpl.prototype.connect = function (connectOptions) {\n\t\t\tvar connectOptionsMasked = this._traceMask(connectOptions, \"password\");\n\t\t\tthis._trace(\"Client.connect\", connectOptionsMasked, this.socket, this.connected);\n\n\t\t\tif (this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"already connected\"]));\n\t\t\tif (this.socket)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"already connected\"]));\n\n\t\t\tif (this._reconnecting) {\n\t\t\t// connect() function is called while reconnect is in progress.\n\t\t\t// Terminate the auto reconnect process to use new connect options.\n\t\t\t\tthis._reconnectTimeout.cancel();\n\t\t\t\tthis._reconnectTimeout = null;\n\t\t\t\tthis._reconnecting = false;\n\t\t\t}\n\n\t\t\tthis.connectOptions = connectOptions;\n\t\t\tthis._reconnectInterval = 1;\n\t\t\tthis._reconnecting = false;\n\t\t\tif (connectOptions.uris) {\n\t\t\t\tthis.hostIndex = 0;\n\t\t\t\tthis._doConnect(connectOptions.uris[0]);\n\t\t\t} else {\n\t\t\t\tthis._doConnect(this.uri);\n\t\t\t}\n\n\t\t};\n\n\t\tClientImpl.prototype.subscribe = function (filter, subscribeOptions) {\n\t\t\tthis._trace(\"Client.subscribe\", filter, subscribeOptions);\n\n\t\t\tif (!this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connected\"]));\n\n            var wireMessage = new WireMessage(MESSAGE_TYPE.SUBSCRIBE);\n            wireMessage.topics = filter.constructor === Array ? filter : [filter];\n            if (subscribeOptions.qos === undefined)\n                subscribeOptions.qos = 0;\n            wireMessage.requestedQos = [];\n            for (var i = 0; i < wireMessage.topics.length; i++)\n                wireMessage.requestedQos[i] = subscribeOptions.qos;\n\n\t\t\tif (subscribeOptions.onSuccess) {\n\t\t\t\twireMessage.onSuccess = function(grantedQos) {subscribeOptions.onSuccess({invocationContext:subscribeOptions.invocationContext,grantedQos:grantedQos});};\n\t\t\t}\n\n\t\t\tif (subscribeOptions.onFailure) {\n\t\t\t\twireMessage.onFailure = function(errorCode) {subscribeOptions.onFailure({invocationContext:subscribeOptions.invocationContext,errorCode:errorCode, errorMessage:format(errorCode)});};\n\t\t\t}\n\n\t\t\tif (subscribeOptions.timeout) {\n\t\t\t\twireMessage.timeOut = new Timeout(this, subscribeOptions.timeout, subscribeOptions.onFailure,\n\t\t\t\t\t[{invocationContext:subscribeOptions.invocationContext,\n\t\t\t\t\t\terrorCode:ERROR.SUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\terrorMessage:format(ERROR.SUBSCRIBE_TIMEOUT)}]);\n\t\t\t}\n\n\t\t\t// All subscriptions return a SUBACK.\n\t\t\tthis._requires_ack(wireMessage);\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype.unsubscribe = function(filter, unsubscribeOptions) {\n\t\t\tthis._trace(\"Client.unsubscribe\", filter, unsubscribeOptions);\n\n\t\t\tif (!this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connected\"]));\n\n            var wireMessage = new WireMessage(MESSAGE_TYPE.UNSUBSCRIBE);\n            wireMessage.topics = filter.constructor === Array ? filter : [filter];\n\n\t\t\tif (unsubscribeOptions.onSuccess) {\n\t\t\t\twireMessage.callback = function() {unsubscribeOptions.onSuccess({invocationContext:unsubscribeOptions.invocationContext});};\n\t\t\t}\n\t\t\tif (unsubscribeOptions.timeout) {\n\t\t\t\twireMessage.timeOut = new Timeout(this, unsubscribeOptions.timeout, unsubscribeOptions.onFailure,\n\t\t\t\t\t[{invocationContext:unsubscribeOptions.invocationContext,\n\t\t\t\t\t\terrorCode:ERROR.UNSUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\terrorMessage:format(ERROR.UNSUBSCRIBE_TIMEOUT)}]);\n\t\t\t}\n\n\t\t\t// All unsubscribes return a SUBACK.\n\t\t\tthis._requires_ack(wireMessage);\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\tClientImpl.prototype.send = function (message) {\n\t\t\tthis._trace(\"Client.send\", message);\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.PUBLISH);\n\t\t\twireMessage.payloadMessage = message;\n\n\t\t\tif (this.connected) {\n\t\t\t// Mark qos 1 & 2 message as \"ACK required\"\n\t\t\t// For qos 0 message, invoke onMessageDelivered callback if there is one.\n\t\t\t// Then schedule the message.\n\t\t\t\tif (message.qos > 0) {\n\t\t\t\t\tthis._requires_ack(wireMessage);\n\t\t\t\t} else if (this.onMessageDelivered) {\n\t\t\t\t\tthis._notify_msg_sent[wireMessage] = this.onMessageDelivered(wireMessage.payloadMessage);\n\t\t\t\t}\n\t\t\t\tthis._schedule_message(wireMessage);\n\t\t\t} else {\n\t\t\t// Currently disconnected, will not schedule this message\n\t\t\t// Check if reconnecting is in progress and disconnected publish is enabled.\n\t\t\t\tif (this._reconnecting && this.disconnectedPublishing) {\n\t\t\t\t// Check the limit which include the \"required ACK\" messages\n\t\t\t\t\tvar messageCount = Object.keys(this._sentMessages).length + this._buffered_msg_queue.length;\n\t\t\t\t\tif (messageCount > this.disconnectedBufferSize) {\n\t\t\t\t\t\tthrow new Error(format(ERROR.BUFFER_FULL, [this.disconnectedBufferSize]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (message.qos > 0) {\n\t\t\t\t\t\t// Mark this message as \"ACK required\"\n\t\t\t\t\t\t\tthis._requires_ack(wireMessage);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twireMessage.sequence = ++this._sequence;\n\t\t\t\t\t\t\t// Add messages in fifo order to array, by adding to start\n\t\t\t\t\t\t\tthis._buffered_msg_queue.unshift(wireMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connected\"]));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.disconnect = function () {\n\t\t\tthis._trace(\"Client.disconnect\");\n\n\t\t\tif (this._reconnecting) {\n\t\t\t// disconnect() function is called while reconnect is in progress.\n\t\t\t// Terminate the auto reconnect process.\n\t\t\t\tthis._reconnectTimeout.cancel();\n\t\t\t\tthis._reconnectTimeout = null;\n\t\t\t\tthis._reconnecting = false;\n\t\t\t}\n\n\t\t\tif (!this.socket)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, [\"not connecting or connected\"]));\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.DISCONNECT);\n\n\t\t\t// Run the disconnected call back as soon as the message has been sent,\n\t\t\t// in case of a failure later on in the disconnect processing.\n\t\t\t// as a consequence, the _disconected call back may be run several times.\n\t\t\tthis._notify_msg_sent[wireMessage] = scope(this._disconnected, this);\n\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\tClientImpl.prototype.getTraceLog = function () {\n\t\t\tif ( this._traceBuffer !== null ) {\n\t\t\t\tthis._trace(\"Client.getTraceLog\", new Date());\n\t\t\t\tthis._trace(\"Client.getTraceLog in flight messages\", this._sentMessages.length);\n\t\t\t\tfor (var key in this._sentMessages)\n\t\t\t\t\tthis._trace(\"_sentMessages \",key, this._sentMessages[key]);\n\t\t\t\tfor (var key in this._receivedMessages)\n\t\t\t\t\tthis._trace(\"_receivedMessages \",key, this._receivedMessages[key]);\n\n\t\t\t\treturn this._traceBuffer;\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.startTrace = function () {\n\t\t\tif ( this._traceBuffer === null ) {\n\t\t\t\tthis._traceBuffer = [];\n\t\t\t}\n\t\t\tthis._trace(\"Client.startTrace\", new Date(), version);\n\t\t};\n\n\t\tClientImpl.prototype.stopTrace = function () {\n\t\t\tdelete this._traceBuffer;\n\t\t};\n\n\t\tClientImpl.prototype._doConnect = function (wsurl) {\n\t\t// When the socket is open, this client will send the CONNECT WireMessage using the saved parameters.\n\t\t\tif (this.connectOptions.useSSL) {\n\t\t\t\tvar uriParts = wsurl.split(\":\");\n\t\t\t\turiParts[0] = \"wss\";\n\t\t\t\twsurl = uriParts.join(\":\");\n\t\t\t}\n\t\t\tthis._wsuri = wsurl;\n\t\t\tthis.connected = false;\n\n\n\n\t\t\tif (this.connectOptions.mqttVersion < 4) {\n\t\t\t\tthis.socket = new WebSocket(wsurl, [\"mqttv3.1\"]);\n\t\t\t} else {\n\t\t\t\tthis.socket = new WebSocket(wsurl, [\"mqtt\"]);\n\t\t\t}\n\t\t\tthis.socket.binaryType = \"arraybuffer\";\n\t\t\tthis.socket.onopen = scope(this._on_socket_open, this);\n\t\t\tthis.socket.onmessage = scope(this._on_socket_message, this);\n\t\t\tthis.socket.onerror = scope(this._on_socket_error, this);\n\t\t\tthis.socket.onclose = scope(this._on_socket_close, this);\n\n\t\t\tthis.sendPinger = new Pinger(this, this.connectOptions.keepAliveInterval);\n\t\t\tthis.receivePinger = new Pinger(this, this.connectOptions.keepAliveInterval);\n\t\t\tif (this._connectTimeout) {\n\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\tthis._connectTimeout = null;\n\t\t\t}\n\t\t\tthis._connectTimeout = new Timeout(this, this.connectOptions.timeout, this._disconnected,  [ERROR.CONNECT_TIMEOUT.code, format(ERROR.CONNECT_TIMEOUT)]);\n\t\t};\n\n\n\t\t// Schedule a new message to be sent over the WebSockets\n\t\t// connection. CONNECT messages cause WebSocket connection\n\t\t// to be started. All other messages are queued internally\n\t\t// until this has happened. When WS connection starts, process\n\t\t// all outstanding messages.\n\t\tClientImpl.prototype._schedule_message = function (message) {\n\t\t\t// Add messages in fifo order to array, by adding to start\n\t\t\tthis._msg_queue.unshift(message);\n\t\t\t// Process outstanding messages in the queue if we have an  open socket, and have received CONNACK.\n\t\t\tif (this.connected) {\n\t\t\t\tthis._process_queue();\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.store = function(prefix, wireMessage) {\n\t\t\tvar storedMessage = {type:wireMessage.type, messageIdentifier:wireMessage.messageIdentifier, version:1};\n\n\t\t\tswitch(wireMessage.type) {\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\tif(wireMessage.pubRecReceived)\n\t\t\t\t\tstoredMessage.pubRecReceived = true;\n\n\t\t\t\t// Convert the payload to a hex string.\n\t\t\t\tstoredMessage.payloadMessage = {};\n\t\t\t\tvar hex = \"\";\n\t\t\t\tvar messageBytes = wireMessage.payloadMessage.payloadBytes;\n\t\t\t\tfor (var i=0; i<messageBytes.length; i++) {\n\t\t\t\t\tif (messageBytes[i] <= 0xF)\n\t\t\t\t\t\thex = hex+\"0\"+messageBytes[i].toString(16);\n\t\t\t\t\telse\n\t\t\t\t\t\thex = hex+messageBytes[i].toString(16);\n\t\t\t\t}\n\t\t\t\tstoredMessage.payloadMessage.payloadHex = hex;\n\n\t\t\t\tstoredMessage.payloadMessage.qos = wireMessage.payloadMessage.qos;\n\t\t\t\tstoredMessage.payloadMessage.destinationName = wireMessage.payloadMessage.destinationName;\n\t\t\t\tif (wireMessage.payloadMessage.duplicate)\n\t\t\t\t\tstoredMessage.payloadMessage.duplicate = true;\n\t\t\t\tif (wireMessage.payloadMessage.retained)\n\t\t\t\t\tstoredMessage.payloadMessage.retained = true;\n\n\t\t\t\t// Add a sequence number to sent messages.\n\t\t\t\tif ( prefix.indexOf(\"Sent:\") === 0 ) {\n\t\t\t\t\tif ( wireMessage.sequence === undefined )\n\t\t\t\t\t\twireMessage.sequence = ++this._sequence;\n\t\t\t\t\tstoredMessage.sequence = wireMessage.sequence;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow Error(format(ERROR.INVALID_STORED_DATA, [prefix+this._localKey+wireMessage.messageIdentifier, storedMessage]));\n\t\t\t}\n\t\t\tlocalStorage.setItem(prefix+this._localKey+wireMessage.messageIdentifier, JSON.stringify(storedMessage));\n\t\t};\n\n\t\tClientImpl.prototype.restore = function(key) {\n\t\t\tvar value = localStorage.getItem(key);\n\t\t\tvar storedMessage = JSON.parse(value);\n\n\t\t\tvar wireMessage = new WireMessage(storedMessage.type, storedMessage);\n\n\t\t\tswitch(storedMessage.type) {\n\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t// Replace the payload message with a Message object.\n\t\t\t\tvar hex = storedMessage.payloadMessage.payloadHex;\n\t\t\t\tvar buffer = new ArrayBuffer((hex.length)/2);\n\t\t\t\tvar byteStream = new Uint8Array(buffer);\n\t\t\t\tvar i = 0;\n\t\t\t\twhile (hex.length >= 2) {\n\t\t\t\t\tvar x = parseInt(hex.substring(0, 2), 16);\n\t\t\t\t\thex = hex.substring(2, hex.length);\n\t\t\t\t\tbyteStream[i++] = x;\n\t\t\t\t}\n\t\t\t\tvar payloadMessage = new Message(byteStream);\n\n\t\t\t\tpayloadMessage.qos = storedMessage.payloadMessage.qos;\n\t\t\t\tpayloadMessage.destinationName = storedMessage.payloadMessage.destinationName;\n\t\t\t\tif (storedMessage.payloadMessage.duplicate)\n\t\t\t\t\tpayloadMessage.duplicate = true;\n\t\t\t\tif (storedMessage.payloadMessage.retained)\n\t\t\t\t\tpayloadMessage.retained = true;\n\t\t\t\twireMessage.payloadMessage = payloadMessage;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow Error(format(ERROR.INVALID_STORED_DATA, [key, value]));\n\t\t\t}\n\n\t\t\tif (key.indexOf(\"Sent:\"+this._localKey) === 0) {\n\t\t\t\twireMessage.payloadMessage.duplicate = true;\n\t\t\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t} else if (key.indexOf(\"Received:\"+this._localKey) === 0) {\n\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype._process_queue = function () {\n\t\t\tvar message = null;\n\n\t\t\t// Send all queued messages down socket connection\n\t\t\twhile ((message = this._msg_queue.pop())) {\n\t\t\t\tthis._socket_send(message);\n\t\t\t\t// Notify listeners that message was successfully sent\n\t\t\t\tif (this._notify_msg_sent[message]) {\n\t\t\t\t\tthis._notify_msg_sent[message]();\n\t\t\t\t\tdelete this._notify_msg_sent[message];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Expect an ACK response for this message. Add message to the set of in progress\n\t * messages and set an unused identifier in this message.\n\t * @ignore\n\t */\n\t\tClientImpl.prototype._requires_ack = function (wireMessage) {\n\t\t\tvar messageCount = Object.keys(this._sentMessages).length;\n\t\t\tif (messageCount > this.maxMessageIdentifier)\n\t\t\t\tthrow Error (\"Too many messages:\"+messageCount);\n\n\t\t\twhile(this._sentMessages[this._message_identifier] !== undefined) {\n\t\t\t\tthis._message_identifier++;\n\t\t\t}\n\t\t\twireMessage.messageIdentifier = this._message_identifier;\n\t\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\tif (wireMessage.type === MESSAGE_TYPE.PUBLISH) {\n\t\t\t\tthis.store(\"Sent:\", wireMessage);\n\t\t\t}\n\t\t\tif (this._message_identifier === this.maxMessageIdentifier) {\n\t\t\t\tthis._message_identifier = 1;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Called when the underlying websocket has been opened.\n\t * @ignore\n\t */\n\t\tClientImpl.prototype._on_socket_open = function () {\n\t\t// Create the CONNECT message object.\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.CONNECT, this.connectOptions);\n\t\t\twireMessage.clientId = this.clientId;\n\t\t\tthis._socket_send(wireMessage);\n\t\t};\n\n\t\t/**\n\t * Called when the underlying websocket has received a complete packet.\n\t * @ignore\n\t */\n\t\tClientImpl.prototype._on_socket_message = function (event) {\n\t\t\tthis._trace(\"Client._on_socket_message\", event.data);\n\t\t\tvar messages = this._deframeMessages(event.data);\n\t\t\tfor (var i = 0; i < messages.length; i+=1) {\n\t\t\t\tthis._handleMessage(messages[i]);\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype._deframeMessages = function(data) {\n\t\t\tvar byteArray = new Uint8Array(data);\n\t\t\tvar messages = [];\n\t\t\tif (this.receiveBuffer) {\n\t\t\t\tvar newData = new Uint8Array(this.receiveBuffer.length+byteArray.length);\n\t\t\t\tnewData.set(this.receiveBuffer);\n\t\t\t\tnewData.set(byteArray,this.receiveBuffer.length);\n\t\t\t\tbyteArray = newData;\n\t\t\t\tdelete this.receiveBuffer;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvar offset = 0;\n\t\t\t\twhile(offset < byteArray.length) {\n\t\t\t\t\tvar result = decodeMessage(byteArray,offset);\n\t\t\t\t\tvar wireMessage = result[0];\n\t\t\t\t\toffset = result[1];\n\t\t\t\t\tif (wireMessage !== null) {\n\t\t\t\t\t\tmessages.push(wireMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (offset < byteArray.length) {\n\t\t\t\t\tthis.receiveBuffer = byteArray.subarray(offset);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tvar errorStack = ((error.hasOwnProperty(\"stack\") == \"undefined\") ? error.stack.toString() : \"No Error Stack Available\");\n\t\t\t\tthis._disconnected(ERROR.INTERNAL_ERROR.code , format(ERROR.INTERNAL_ERROR, [error.message,errorStack]));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn messages;\n\t\t};\n\n\t\tClientImpl.prototype._handleMessage = function(wireMessage) {\n\n\t\t\tthis._trace(\"Client._handleMessage\", wireMessage);\n\n\t\t\ttry {\n\t\t\t\tswitch(wireMessage.type) {\n\t\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\t\tif (this._reconnectTimeout)\n\t\t\t\t\t\tthis._reconnectTimeout.cancel();\n\n\t\t\t\t\t// If we have started using clean session then clear up the local state.\n\t\t\t\t\tif (this.connectOptions.cleanSession) {\n\t\t\t\t\t\tfor (var key in this._sentMessages) {\n\t\t\t\t\t\t\tvar sentMessage = this._sentMessages[key];\n\t\t\t\t\t\t\tlocalStorage.removeItem(\"Sent:\"+this._localKey+sentMessage.messageIdentifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._sentMessages = {};\n\n\t\t\t\t\t\tfor (var key in this._receivedMessages) {\n\t\t\t\t\t\t\tvar receivedMessage = this._receivedMessages[key];\n\t\t\t\t\t\t\tlocalStorage.removeItem(\"Received:\"+this._localKey+receivedMessage.messageIdentifier);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._receivedMessages = {};\n\t\t\t\t\t}\n\t\t\t\t\t// Client connected and ready for business.\n\t\t\t\t\tif (wireMessage.returnCode === 0) {\n\n\t\t\t\t\t\tthis.connected = true;\n\t\t\t\t\t\t// Jump to the end of the list of uris and stop looking for a good host.\n\n\t\t\t\t\t\tif (this.connectOptions.uris)\n\t\t\t\t\t\t\tthis.hostIndex = this.connectOptions.uris.length;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._disconnected(ERROR.CONNACK_RETURNCODE.code , format(ERROR.CONNACK_RETURNCODE, [wireMessage.returnCode, CONNACK_RC[wireMessage.returnCode]]));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Resend messages.\n\t\t\t\t\tvar sequencedMessages = [];\n\t\t\t\t\tfor (var msgId in this._sentMessages) {\n\t\t\t\t\t\tif (this._sentMessages.hasOwnProperty(msgId))\n\t\t\t\t\t\t\tsequencedMessages.push(this._sentMessages[msgId]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Also schedule qos 0 buffered messages if any\n\t\t\t\t\tif (this._buffered_msg_queue.length > 0) {\n\t\t\t\t\t\tvar msg = null;\n\t\t\t\t\t\twhile ((msg = this._buffered_msg_queue.pop())) {\n\t\t\t\t\t\t\tsequencedMessages.push(msg);\n\t\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\t\tthis._notify_msg_sent[msg] = this.onMessageDelivered(msg.payloadMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Sort sentMessages into the original sent order.\n\t\t\t\t\tvar sequencedMessages = sequencedMessages.sort(function(a,b) {return a.sequence - b.sequence;} );\n\t\t\t\t\tfor (var i=0, len=sequencedMessages.length; i<len; i++) {\n\t\t\t\t\t\tvar sentMessage = sequencedMessages[i];\n\t\t\t\t\t\tif (sentMessage.type == MESSAGE_TYPE.PUBLISH && sentMessage.pubRecReceived) {\n\t\t\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {messageIdentifier:sentMessage.messageIdentifier});\n\t\t\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._schedule_message(sentMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Execute the connectOptions.onSuccess callback if there is one.\n\t\t\t\t\t// Will also now return if this connection was the result of an automatic\n\t\t\t\t\t// reconnect and which URI was successfully connected to.\n\t\t\t\t\tif (this.connectOptions.onSuccess) {\n\t\t\t\t\t\tthis.connectOptions.onSuccess({invocationContext:this.connectOptions.invocationContext});\n\t\t\t\t\t}\n\n\t\t\t\t\tvar reconnected = false;\n\t\t\t\t\tif (this._reconnecting) {\n\t\t\t\t\t\treconnected = true;\n\t\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\t\tthis._reconnecting = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Execute the onConnected callback if there is one.\n\t\t\t\t\tthis._connected(reconnected, this._wsuri);\n\n\t\t\t\t\t// Process all queued messages now that the connection is established.\n\t\t\t\t\tthis._process_queue();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\tthis._receivePublish(wireMessage);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBACK:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t// If this is a re flow of a PUBACK after we have restarted receivedMessage will not exist.\n\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tlocalStorage.removeItem(\"Sent:\"+this._localKey+wireMessage.messageIdentifier);\n\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBREC:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t// If this is a re flow of a PUBREC after we have restarted receivedMessage will not exist.\n\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\tsentMessage.pubRecReceived = true;\n\t\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\t\t\tthis.store(\"Sent:\", sentMessage);\n\t\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\t\tvar receivedMessage = this._receivedMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tlocalStorage.removeItem(\"Received:\"+this._localKey+wireMessage.messageIdentifier);\n\t\t\t\t\t// If this is a re flow of a PUBREL after we have restarted receivedMessage will not exist.\n\t\t\t\t\tif (receivedMessage) {\n\t\t\t\t\t\tthis._receiveMessage(receivedMessage);\n\t\t\t\t\t\tdelete this._receivedMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t}\n\t\t\t\t\t// Always flow PubComp, we may have previously flowed PubComp but the server lost it and restarted.\n\t\t\t\t\tvar pubCompMessage = new WireMessage(MESSAGE_TYPE.PUBCOMP, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\t\tthis._schedule_message(pubCompMessage);\n\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBCOMP:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tlocalStorage.removeItem(\"Sent:\"+this._localKey+wireMessage.messageIdentifier);\n\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.SUBACK:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\tif(sentMessage.timeOut)\n\t\t\t\t\t\t\tsentMessage.timeOut.cancel();\n\t\t\t\t\t\t// This will need to be fixed when we add multiple topic support\n\t\t\t\t\t\tif (wireMessage.returnCode[0] === 0x80) {\n\t\t\t\t\t\t\tif (sentMessage.onFailure) {\n\t\t\t\t\t\t\t\tsentMessage.onFailure(wireMessage.returnCode);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (sentMessage.onSuccess) {\n\t\t\t\t\t\t\tsentMessage.onSuccess(wireMessage.returnCode);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.UNSUBACK:\n\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\tif (sentMessage.timeOut)\n\t\t\t\t\t\t\tsentMessage.timeOut.cancel();\n\t\t\t\t\t\tif (sentMessage.callback) {\n\t\t\t\t\t\t\tsentMessage.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PINGRESP:\n\t\t\t\t/* The sendPinger or receivePinger may have sent a ping, the receivePinger has already been reset. */\n\t\t\t\t\tthis.sendPinger.reset();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\t// Clients do not expect to receive disconnect packets.\n\t\t\t\t\tthis._disconnected(ERROR.INVALID_MQTT_MESSAGE_TYPE.code , format(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]));\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._disconnected(ERROR.INVALID_MQTT_MESSAGE_TYPE.code , format(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]));\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tvar errorStack = ((error.hasOwnProperty(\"stack\") == \"undefined\") ? error.stack.toString() : \"No Error Stack Available\");\n\t\t\t\tthis._disconnected(ERROR.INTERNAL_ERROR.code , format(ERROR.INTERNAL_ERROR, [error.message,errorStack]));\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._on_socket_error = function (error) {\n\t\t\tif (!this._reconnecting) {\n\t\t\t\tthis._disconnected(ERROR.SOCKET_ERROR.code , format(ERROR.SOCKET_ERROR, [error.data]));\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._on_socket_close = function () {\n\t\t\tif (!this._reconnecting) {\n\t\t\t\tthis._disconnected(ERROR.SOCKET_CLOSE.code , format(ERROR.SOCKET_CLOSE));\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._socket_send = function (wireMessage) {\n\n\t\t\tif (wireMessage.type == 1) {\n\t\t\t\tvar wireMessageMasked = this._traceMask(wireMessage, \"password\");\n\t\t\t\tthis._trace(\"Client._socket_send\", wireMessageMasked);\n\t\t\t}\n\t\t\telse this._trace(\"Client._socket_send\", wireMessage);\n\n\t\t\tthis.socket.send(wireMessage.encode());\n\t\t\t/* We have proved to the server we are alive. */\n\t\t\tthis.sendPinger.reset();\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._receivePublish = function (wireMessage) {\n\t\t\tswitch(wireMessage.payloadMessage.qos) {\n\t\t\tcase \"undefined\":\n\t\t\tcase 0:\n\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\tvar pubAckMessage = new WireMessage(MESSAGE_TYPE.PUBACK, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\tthis._schedule_message(pubAckMessage);\n\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t\tthis.store(\"Received:\", wireMessage);\n\t\t\t\tvar pubRecMessage = new WireMessage(MESSAGE_TYPE.PUBREC, {messageIdentifier:wireMessage.messageIdentifier});\n\t\t\t\tthis._schedule_message(pubRecMessage);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow Error(\"Invaild qos=\" + wireMessage.payloadMessage.qos);\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._receiveMessage = function (wireMessage) {\n\t\t\tif (this.onMessageArrived) {\n\t\t\t\tthis.onMessageArrived(wireMessage.payloadMessage);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Client has connected.\n\t * @param {reconnect} [boolean] indicate if this was a result of reconnect operation.\n\t * @param {uri} [string] fully qualified WebSocket URI of the server.\n\t */\n\t\tClientImpl.prototype._connected = function (reconnect, uri) {\n\t\t// Execute the onConnected callback if there is one.\n\t\t\tif (this.onConnected)\n\t\t\t\tthis.onConnected(reconnect, uri);\n\t\t};\n\n\t\t/**\n\t * Attempts to reconnect the client to the server.\n   * For each reconnect attempt, will double the reconnect interval\n   * up to 128 seconds.\n\t */\n\t\tClientImpl.prototype._reconnect = function () {\n\t\t\tthis._trace(\"Client._reconnect\");\n\t\t\tif (!this.connected) {\n\t\t\t\tthis._reconnecting = true;\n\t\t\t\tthis.sendPinger.cancel();\n\t\t\t\tthis.receivePinger.cancel();\n\t\t\t\tif (this._reconnectInterval < 128)\n\t\t\t\t\tthis._reconnectInterval = this._reconnectInterval * 2;\n\t\t\t\tif (this.connectOptions.uris) {\n\t\t\t\t\tthis.hostIndex = 0;\n\t\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis._doConnect(this.uri);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t * Client has disconnected either at its own request or because the server\n\t * or network disconnected it. Remove all non-durable state.\n\t * @param {errorCode} [number] the error number.\n\t * @param {errorText} [string] the error text.\n\t * @ignore\n\t */\n\t\tClientImpl.prototype._disconnected = function (errorCode, errorText) {\n\t\t\tthis._trace(\"Client._disconnected\", errorCode, errorText);\n\n\t\t\tif (errorCode !== undefined && this._reconnecting) {\n\t\t\t\t//Continue automatic reconnect process\n\t\t\t\tthis._reconnectTimeout = new Timeout(this, this._reconnectInterval, this._reconnect);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.sendPinger.cancel();\n\t\t\tthis.receivePinger.cancel();\n\t\t\tif (this._connectTimeout) {\n\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\tthis._connectTimeout = null;\n\t\t\t}\n\n\t\t\t// Clear message buffers.\n\t\t\tthis._msg_queue = [];\n\t\t\tthis._buffered_msg_queue = [];\n\t\t\tthis._notify_msg_sent = {};\n\n\t\t\tif (this.socket) {\n\t\t\t// Cancel all socket callbacks so that they cannot be driven again by this socket.\n\t\t\t\tthis.socket.onopen = null;\n\t\t\t\tthis.socket.onmessage = null;\n\t\t\t\tthis.socket.onerror = null;\n\t\t\t\tthis.socket.onclose = null;\n\t\t\t\tif (this.socket.readyState === 1)\n\t\t\t\t\tthis.socket.close();\n\t\t\t\tdelete this.socket;\n\t\t\t}\n\n\t\t\tif (this.connectOptions.uris && this.hostIndex < this.connectOptions.uris.length-1) {\n\t\t\t// Try the next host.\n\t\t\t\tthis.hostIndex++;\n\t\t\t\tthis._doConnect(this.connectOptions.uris[this.hostIndex]);\n\t\t\t} else {\n\n\t\t\t\tif (errorCode === undefined) {\n\t\t\t\t\terrorCode = ERROR.OK.code;\n\t\t\t\t\terrorText = format(ERROR.OK);\n\t\t\t\t}\n\n\t\t\t\t// Run any application callbacks last as they may attempt to reconnect and hence create a new socket.\n\t\t\t\tif (this.connected) {\n\t\t\t\t\tthis.connected = false;\n\t\t\t\t\t// Execute the connectionLostCallback if there is one, and we were connected.\n\t\t\t\t\tif (this.onConnectionLost) {\n\t\t\t\t\t\tthis.onConnectionLost({errorCode:errorCode, errorMessage:errorText, reconnect:this.connectOptions.reconnect, uri:this._wsuri});\n\t\t\t\t\t}\n\t\t\t\t\tif (errorCode !== ERROR.OK.code && this.connectOptions.reconnect) {\n\t\t\t\t\t// Start automatic reconnect process for the very first time since last successful connect.\n\t\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\t\tthis._reconnect();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t// Otherwise we never had a connection, so indicate that the connect has failed.\n\t\t\t\t\tif (this.connectOptions.mqttVersion === 4 && this.connectOptions.mqttVersionExplicit === false) {\n\t\t\t\t\t\tthis._trace(\"Failed to connect V4, dropping back to V3\");\n\t\t\t\t\t\tthis.connectOptions.mqttVersion = 3;\n\t\t\t\t\t\tif (this.connectOptions.uris) {\n\t\t\t\t\t\t\tthis.hostIndex = 0;\n\t\t\t\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._doConnect(this.uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(this.connectOptions.onFailure) {\n\t\t\t\t\t\tthis.connectOptions.onFailure({invocationContext:this.connectOptions.invocationContext, errorCode:errorCode, errorMessage:errorText});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._trace = function () {\n\t\t// Pass trace message back to client's callback function\n\t\t\tif (this.traceFunction) {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tfor (var i in args)\n\t\t\t\t{\n\t\t\t\t\tif (typeof args[i] !== \"undefined\")\n\t\t\t\t\t\targs.splice(i, 1, JSON.stringify(args[i]));\n\t\t\t\t}\n\t\t\t\tvar record = args.join(\"\");\n\t\t\t\tthis.traceFunction ({severity: \"Debug\", message: record\t});\n\t\t\t}\n\n\t\t\t//buffer style trace\n\t\t\tif ( this._traceBuffer !== null ) {\n\t\t\t\tfor (var i = 0, max = arguments.length; i < max; i++) {\n\t\t\t\t\tif ( this._traceBuffer.length == this._MAX_TRACE_ENTRIES ) {\n\t\t\t\t\t\tthis._traceBuffer.shift();\n\t\t\t\t\t}\n\t\t\t\t\tif (i === 0) this._traceBuffer.push(arguments[i]);\n\t\t\t\t\telse if (typeof arguments[i] === \"undefined\" ) this._traceBuffer.push(arguments[i]);\n\t\t\t\t\telse this._traceBuffer.push(\"  \"+JSON.stringify(arguments[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._traceMask = function (traceObject, masked) {\n\t\t\tvar traceObjectMasked = {};\n\t\t\tfor (var attr in traceObject) {\n\t\t\t\tif (traceObject.hasOwnProperty(attr)) {\n\t\t\t\t\tif (attr == masked)\n\t\t\t\t\t\ttraceObjectMasked[attr] = \"******\";\n\t\t\t\t\telse\n\t\t\t\t\t\ttraceObjectMasked[attr] = traceObject[attr];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn traceObjectMasked;\n\t\t};\n\n\t\t// ------------------------------------------------------------------------\n\t\t// Public Programming interface.\n\t\t// ------------------------------------------------------------------------\n\n\t\t/**\n\t * The JavaScript application communicates to the server using a {@link Paho.Client} object.\n\t * <p>\n\t * Most applications will create just one Client object and then call its connect() method,\n\t * however applications can create more than one Client object if they wish.\n\t * In this case the combination of host, port and clientId attributes must be different for each Client object.\n\t * <p>\n\t * The send, subscribe and unsubscribe methods are implemented as asynchronous JavaScript methods\n\t * (even though the underlying protocol exchange might be synchronous in nature).\n\t * This means they signal their completion by calling back to the application,\n\t * via Success or Failure callback functions provided by the application on the method in question.\n\t * Such callbacks are called at most once per method invocation and do not persist beyond the lifetime\n\t * of the script that made the invocation.\n\t * <p>\n\t * In contrast there are some callback functions, most notably <i>onMessageArrived</i>,\n\t * that are defined on the {@link Paho.Client} object.\n\t * These may get called multiple times, and aren't directly related to specific method invocations made by the client.\n\t *\n\t * @name Paho.Client\n\t *\n\t * @constructor\n\t *\n\t * @param {string} host - the address of the messaging server, as a fully qualified WebSocket URI, as a DNS name or dotted decimal IP address.\n\t * @param {number} port - the port number to connect to - only required if host is not a URI\n\t * @param {string} path - the path on the host to connect to - only used if host is not a URI. Default: '/mqtt'.\n\t * @param {string} clientId - the Messaging client identifier, between 1 and 23 characters in length.\n\t *\n\t * @property {string} host - <i>read only</i> the server's DNS hostname or dotted decimal IP address.\n\t * @property {number} port - <i>read only</i> the server's port.\n\t * @property {string} path - <i>read only</i> the server's path.\n\t * @property {string} clientId - <i>read only</i> used when connecting to the server.\n\t * @property {function} onConnectionLost - called when a connection has been lost.\n\t *                            after a connect() method has succeeded.\n\t *                            Establish the call back used when a connection has been lost. The connection may be\n\t *                            lost because the client initiates a disconnect or because the server or network\n\t *                            cause the client to be disconnected. The disconnect call back may be called without\n\t *                            the connectionComplete call back being invoked if, for example the client fails to\n\t *                            connect.\n\t *                            A single response object parameter is passed to the onConnectionLost callback containing the following fields:\n\t *                            <ol>\n\t *                            <li>errorCode\n\t *                            <li>errorMessage\n\t *                            </ol>\n\t * @property {function} onMessageDelivered - called when a message has been delivered.\n\t *                            All processing that this Client will ever do has been completed. So, for example,\n\t *                            in the case of a Qos=2 message sent by this client, the PubComp flow has been received from the server\n\t *                            and the message has been removed from persistent storage before this callback is invoked.\n\t *                            Parameters passed to the onMessageDelivered callback are:\n\t *                            <ol>\n\t *                            <li>{@link Paho.Message} that was delivered.\n\t *                            </ol>\n\t * @property {function} onMessageArrived - called when a message has arrived in this Paho.client.\n\t *                            Parameters passed to the onMessageArrived callback are:\n\t *                            <ol>\n\t *                            <li>{@link Paho.Message} that has arrived.\n\t *                            </ol>\n\t * @property {function} onConnected - called when a connection is successfully made to the server.\n\t *                                  after a connect() method.\n\t *                                  Parameters passed to the onConnected callback are:\n\t *                                  <ol>\n\t *                                  <li>reconnect (boolean) - If true, the connection was the result of a reconnect.</li>\n\t *                                  <li>URI (string) - The URI used to connect to the server.</li>\n\t *                                  </ol>\n\t * @property {boolean} disconnectedPublishing - if set, will enable disconnected publishing in\n\t *                                            in the event that the connection to the server is lost.\n\t * @property {number} disconnectedBufferSize - Used to set the maximum number of messages that the disconnected\n\t *                                             buffer will hold before rejecting new messages. Default size: 5000 messages\n\t * @property {function} trace - called whenever trace is called. TODO\n\t */\n\t\tvar Client = function (host, port, path, clientId) {\n\n\t\t\tvar uri;\n\n\t\t\tif (typeof host !== \"string\")\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof host, \"host\"]));\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t// host: must be full ws:// uri\n\t\t\t// port: clientId\n\t\t\t\tclientId = port;\n\t\t\t\turi = host;\n\t\t\t\tvar match = uri.match(/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/);\n\t\t\t\tif (match) {\n\t\t\t\t\thost = match[4]||match[2];\n\t\t\t\t\tport = parseInt(match[7]);\n\t\t\t\t\tpath = match[8];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT,[host,\"host\"]));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (arguments.length == 3) {\n\t\t\t\t\tclientId = path;\n\t\t\t\t\tpath = \"/mqtt\";\n\t\t\t\t}\n\t\t\t\tif (typeof port !== \"number\" || port < 0)\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof port, \"port\"]));\n\t\t\t\tif (typeof path !== \"string\")\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof path, \"path\"]));\n\n\t\t\t\tvar ipv6AddSBracket = (host.indexOf(\":\") !== -1 && host.slice(0,1) !== \"[\" && host.slice(-1) !== \"]\");\n\t\t\t\turi = \"ws://\"+(ipv6AddSBracket?\"[\"+host+\"]\":host)+\":\"+port+path;\n\t\t\t}\n\n\t\t\tvar clientIdLength = 0;\n\t\t\tfor (var i = 0; i<clientId.length; i++) {\n\t\t\t\tvar charCode = clientId.charCodeAt(i);\n\t\t\t\tif (0xD800 <= charCode && charCode <= 0xDBFF)  {\n\t\t\t\t\ti++; // Surrogate pair.\n\t\t\t\t}\n\t\t\t\tclientIdLength++;\n\t\t\t}\n\t\t\tif (typeof clientId !== \"string\" || clientIdLength > 65535)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [clientId, \"clientId\"]));\n\n\t\t\tvar client = new ClientImpl(uri, host, port, path, clientId);\n\n\t\t\t//Public Properties\n\t\t\tObject.defineProperties(this,{\n\t\t\t\t\"host\":{\n\t\t\t\t\tget: function() { return host; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"port\":{\n\t\t\t\t\tget: function() { return port; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"path\":{\n\t\t\t\t\tget: function() { return path; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"uri\":{\n\t\t\t\t\tget: function() { return uri; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"clientId\":{\n\t\t\t\t\tget: function() { return client.clientId; },\n\t\t\t\t\tset: function() { throw new Error(format(ERROR.UNSUPPORTED_OPERATION)); }\n\t\t\t\t},\n\t\t\t\t\"onConnected\":{\n\t\t\t\t\tget: function() { return client.onConnected; },\n\t\t\t\t\tset: function(newOnConnected) {\n\t\t\t\t\t\tif (typeof newOnConnected === \"function\")\n\t\t\t\t\t\t\tclient.onConnected = newOnConnected;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnConnected, \"onConnected\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"disconnectedPublishing\":{\n\t\t\t\t\tget: function() { return client.disconnectedPublishing; },\n\t\t\t\t\tset: function(newDisconnectedPublishing) {\n\t\t\t\t\t\tclient.disconnectedPublishing = newDisconnectedPublishing;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"disconnectedBufferSize\":{\n\t\t\t\t\tget: function() { return client.disconnectedBufferSize; },\n\t\t\t\t\tset: function(newDisconnectedBufferSize) {\n\t\t\t\t\t\tclient.disconnectedBufferSize = newDisconnectedBufferSize;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"onConnectionLost\":{\n\t\t\t\t\tget: function() { return client.onConnectionLost; },\n\t\t\t\t\tset: function(newOnConnectionLost) {\n\t\t\t\t\t\tif (typeof newOnConnectionLost === \"function\")\n\t\t\t\t\t\t\tclient.onConnectionLost = newOnConnectionLost;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnConnectionLost, \"onConnectionLost\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"onMessageDelivered\":{\n\t\t\t\t\tget: function() { return client.onMessageDelivered; },\n\t\t\t\t\tset: function(newOnMessageDelivered) {\n\t\t\t\t\t\tif (typeof newOnMessageDelivered === \"function\")\n\t\t\t\t\t\t\tclient.onMessageDelivered = newOnMessageDelivered;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnMessageDelivered, \"onMessageDelivered\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"onMessageArrived\":{\n\t\t\t\t\tget: function() { return client.onMessageArrived; },\n\t\t\t\t\tset: function(newOnMessageArrived) {\n\t\t\t\t\t\tif (typeof newOnMessageArrived === \"function\")\n\t\t\t\t\t\t\tclient.onMessageArrived = newOnMessageArrived;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof newOnMessageArrived, \"onMessageArrived\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"trace\":{\n\t\t\t\t\tget: function() { return client.traceFunction; },\n\t\t\t\t\tset: function(trace) {\n\t\t\t\t\t\tif(typeof trace === \"function\"){\n\t\t\t\t\t\t\tclient.traceFunction = trace;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof trace, \"onTrace\"]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t/**\n\t\t * Connect this Messaging client to its server.\n\t\t *\n\t\t * @name Paho.Client#connect\n\t\t * @function\n\t\t * @param {object} connectOptions - Attributes used with the connection.\n\t\t * @param {number} connectOptions.timeout - If the connect has not succeeded within this\n\t\t *                    number of seconds, it is deemed to have failed.\n\t\t *                    The default is 30 seconds.\n\t\t * @param {string} connectOptions.userName - Authentication username for this connection.\n\t\t * @param {string} connectOptions.password - Authentication password for this connection.\n\t\t * @param {Paho.Message} connectOptions.willMessage - sent by the server when the client\n\t\t *                    disconnects abnormally.\n\t\t * @param {number} connectOptions.keepAliveInterval - the server disconnects this client if\n\t\t *                    there is no activity for this number of seconds.\n\t\t *                    The default value of 60 seconds is assumed if not set.\n\t\t * @param {boolean} connectOptions.cleanSession - if true(default) the client and server\n\t\t *                    persistent state is deleted on successful connect.\n\t\t * @param {boolean} connectOptions.useSSL - if present and true, use an SSL Websocket connection.\n\t\t * @param {object} connectOptions.invocationContext - passed to the onSuccess callback or onFailure callback.\n\t\t * @param {function} connectOptions.onSuccess - called when the connect acknowledgement\n\t\t *                    has been received from the server.\n\t\t * A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t * <ol>\n\t\t * <li>invocationContext as passed in to the onSuccess method in the connectOptions.\n\t\t * </ol>\n\t * @param {function} connectOptions.onFailure - called when the connect request has failed or timed out.\n\t\t * A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t * <ol>\n\t\t * <li>invocationContext as passed in to the onFailure method in the connectOptions.\n\t\t * <li>errorCode a number indicating the nature of the error.\n\t\t * <li>errorMessage text describing the error.\n\t\t * </ol>\n\t * @param {array} connectOptions.hosts - If present this contains either a set of hostnames or fully qualified\n\t\t * WebSocket URIs (ws://iot.eclipse.org:80/ws), that are tried in order in place\n\t\t * of the host and port paramater on the construtor. The hosts are tried one at at time in order until\n\t\t * one of then succeeds.\n\t * @param {array} connectOptions.ports - If present the set of ports matching the hosts. If hosts contains URIs, this property\n\t\t * is not used.\n\t * @param {boolean} connectOptions.reconnect - Sets whether the client will automatically attempt to reconnect\n\t * to the server if the connection is lost.\n\t *<ul>\n\t *<li>If set to false, the client will not attempt to automatically reconnect to the server in the event that the\n\t * connection is lost.</li>\n\t *<li>If set to true, in the event that the connection is lost, the client will attempt to reconnect to the server.\n\t * It will initially wait 1 second before it attempts to reconnect, for every failed reconnect attempt, the delay\n\t * will double until it is at 2 minutes at which point the delay will stay at 2 minutes.</li>\n\t *</ul>\n\t * @param {number} connectOptions.mqttVersion - The version of MQTT to use to connect to the MQTT Broker.\n\t *<ul>\n\t *<li>3 - MQTT V3.1</li>\n\t *<li>4 - MQTT V3.1.1</li>\n\t *</ul>\n\t * @param {boolean} connectOptions.mqttVersionExplicit - If set to true, will force the connection to use the\n\t * selected MQTT Version or will fail to connect.\n\t * @param {array} connectOptions.uris - If present, should contain a list of fully qualified WebSocket uris\n\t * (e.g. ws://iot.eclipse.org:80/ws), that are tried in order in place of the host and port parameter of the construtor.\n\t * The uris are tried one at a time in order until one of them succeeds. Do not use this in conjunction with hosts as\n\t * the hosts array will be converted to uris and will overwrite this property.\n\t\t * @throws {InvalidState} If the client is not in disconnected state. The client must have received connectionLost\n\t\t * or disconnected before calling connect for a second or subsequent time.\n\t\t */\n\t\t\tthis.connect = function (connectOptions) {\n\t\t\t\tconnectOptions = connectOptions || {} ;\n\t\t\t\tvalidate(connectOptions,  {timeout:\"number\",\n\t\t\t\t\tuserName:\"string\",\n\t\t\t\t\tpassword:\"string\",\n\t\t\t\t\twillMessage:\"object\",\n\t\t\t\t\tkeepAliveInterval:\"number\",\n\t\t\t\t\tcleanSession:\"boolean\",\n\t\t\t\t\tuseSSL:\"boolean\",\n\t\t\t\t\tinvocationContext:\"object\",\n\t\t\t\t\tonSuccess:\"function\",\n\t\t\t\t\tonFailure:\"function\",\n\t\t\t\t\thosts:\"object\",\n\t\t\t\t\tports:\"object\",\n\t\t\t\t\treconnect:\"boolean\",\n\t\t\t\t\tmqttVersion:\"number\",\n\t\t\t\t\tmqttVersionExplicit:\"boolean\",\n\t\t\t\t\turis: \"object\"});\n\n\t\t\t\t// If no keep alive interval is set, assume 60 seconds.\n\t\t\t\tif (connectOptions.keepAliveInterval === undefined)\n\t\t\t\t\tconnectOptions.keepAliveInterval = 60;\n\n\t\t\t\tif (connectOptions.mqttVersion > 4 || connectOptions.mqttVersion < 3) {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.mqttVersion, \"connectOptions.mqttVersion\"]));\n\t\t\t\t}\n\n\t\t\t\tif (connectOptions.mqttVersion === undefined) {\n\t\t\t\t\tconnectOptions.mqttVersionExplicit = false;\n\t\t\t\t\tconnectOptions.mqttVersion = 4;\n\t\t\t\t} else {\n\t\t\t\t\tconnectOptions.mqttVersionExplicit = true;\n\t\t\t\t}\n\n\t\t\t\t//Check that if password is set, so is username\n\t\t\t\tif (connectOptions.password !== undefined && connectOptions.userName === undefined)\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.password, \"connectOptions.password\"]));\n\n\t\t\t\tif (connectOptions.willMessage) {\n\t\t\t\t\tif (!(connectOptions.willMessage instanceof Message))\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [connectOptions.willMessage, \"connectOptions.willMessage\"]));\n\t\t\t\t\t// The will message must have a payload that can be represented as a string.\n\t\t\t\t\t// Cause the willMessage to throw an exception if this is not the case.\n\t\t\t\t\tconnectOptions.willMessage.stringPayload = null;\n\n\t\t\t\t\tif (typeof connectOptions.willMessage.destinationName === \"undefined\")\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.willMessage.destinationName, \"connectOptions.willMessage.destinationName\"]));\n\t\t\t\t}\n\t\t\t\tif (typeof connectOptions.cleanSession === \"undefined\")\n\t\t\t\t\tconnectOptions.cleanSession = true;\n\t\t\t\tif (connectOptions.hosts) {\n\n\t\t\t\t\tif (!(connectOptions.hosts instanceof Array) )\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts, \"connectOptions.hosts\"]));\n\t\t\t\t\tif (connectOptions.hosts.length <1 )\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts, \"connectOptions.hosts\"]));\n\n\t\t\t\t\tvar usingURIs = false;\n\t\t\t\t\tfor (var i = 0; i<connectOptions.hosts.length; i++) {\n\t\t\t\t\t\tif (typeof connectOptions.hosts[i] !== \"string\")\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.hosts[i], \"connectOptions.hosts[\"+i+\"]\"]));\n\t\t\t\t\t\tif (/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/.test(connectOptions.hosts[i])) {\n\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\tusingURIs = true;\n\t\t\t\t\t\t\t} else if (!usingURIs) {\n\t\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts[i], \"connectOptions.hosts[\"+i+\"]\"]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (usingURIs) {\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.hosts[i], \"connectOptions.hosts[\"+i+\"]\"]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!usingURIs) {\n\t\t\t\t\t\tif (!connectOptions.ports)\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, \"connectOptions.ports\"]));\n\t\t\t\t\t\tif (!(connectOptions.ports instanceof Array) )\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, \"connectOptions.ports\"]));\n\t\t\t\t\t\tif (connectOptions.hosts.length !== connectOptions.ports.length)\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [connectOptions.ports, \"connectOptions.ports\"]));\n\n\t\t\t\t\t\tconnectOptions.uris = [];\n\n\t\t\t\t\t\tfor (var i = 0; i<connectOptions.hosts.length; i++) {\n\t\t\t\t\t\t\tif (typeof connectOptions.ports[i] !== \"number\" || connectOptions.ports[i] < 0)\n\t\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof connectOptions.ports[i], \"connectOptions.ports[\"+i+\"]\"]));\n\t\t\t\t\t\t\tvar host = connectOptions.hosts[i];\n\t\t\t\t\t\t\tvar port = connectOptions.ports[i];\n\n\t\t\t\t\t\t\tvar ipv6 = (host.indexOf(\":\") !== -1);\n\t\t\t\t\t\t\turi = \"ws://\"+(ipv6?\"[\"+host+\"]\":host)+\":\"+port+path;\n\t\t\t\t\t\t\tconnectOptions.uris.push(uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconnectOptions.uris = connectOptions.hosts;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclient.connect(connectOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t * Subscribe for messages, request receipt of a copy of messages sent to the destinations described by the filter.\n\t\t *\n\t\t * @name Paho.Client#subscribe\n\t\t * @function\n\t\t * @param {string} filter describing the destinations to receive messages from.\n\t\t * <br>\n\t\t * @param {object} subscribeOptions - used to control the subscription\n\t\t *\n\t\t * @param {number} subscribeOptions.qos - the maximum qos of any publications sent\n\t\t *                                  as a result of making this subscription.\n\t\t * @param {object} subscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t *                                  or onFailure callback.\n\t\t * @param {function} subscribeOptions.onSuccess - called when the subscribe acknowledgement\n\t\t *                                  has been received from the server.\n\t\t *                                  A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t *                                  <ol>\n\t\t *                                  <li>invocationContext if set in the subscribeOptions.\n\t\t *                                  </ol>\n\t\t * @param {function} subscribeOptions.onFailure - called when the subscribe request has failed or timed out.\n\t\t *                                  A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t *                                  <ol>\n\t\t *                                  <li>invocationContext - if set in the subscribeOptions.\n\t\t *                                  <li>errorCode - a number indicating the nature of the error.\n\t\t *                                  <li>errorMessage - text describing the error.\n\t\t *                                  </ol>\n\t\t * @param {number} subscribeOptions.timeout - which, if present, determines the number of\n\t\t *                                  seconds after which the onFailure calback is called.\n\t\t *                                  The presence of a timeout does not prevent the onSuccess\n\t\t *                                  callback from being called when the subscribe completes.\n\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t */\n\t\t\tthis.subscribe = function (filter, subscribeOptions) {\n\t\t\t\tif (typeof filter !== \"string\" && filter.constructor !== Array)\n\t\t\t\t\tthrow new Error(\"Invalid argument:\"+filter);\n\t\t\t\tsubscribeOptions = subscribeOptions || {} ;\n\t\t\t\tvalidate(subscribeOptions,  {qos:\"number\",\n\t\t\t\t\tinvocationContext:\"object\",\n\t\t\t\t\tonSuccess:\"function\",\n\t\t\t\t\tonFailure:\"function\",\n\t\t\t\t\ttimeout:\"number\"\n\t\t\t\t});\n\t\t\t\tif (subscribeOptions.timeout && !subscribeOptions.onFailure)\n\t\t\t\t\tthrow new Error(\"subscribeOptions.timeout specified with no onFailure callback.\");\n\t\t\t\tif (typeof subscribeOptions.qos !== \"undefined\" && !(subscribeOptions.qos === 0 || subscribeOptions.qos === 1 || subscribeOptions.qos === 2 ))\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [subscribeOptions.qos, \"subscribeOptions.qos\"]));\n\t\t\t\tclient.subscribe(filter, subscribeOptions);\n\t\t\t};\n\n\t\t/**\n\t\t * Unsubscribe for messages, stop receiving messages sent to destinations described by the filter.\n\t\t *\n\t\t * @name Paho.Client#unsubscribe\n\t\t * @function\n\t\t * @param {string} filter - describing the destinations to receive messages from.\n\t\t * @param {object} unsubscribeOptions - used to control the subscription\n\t\t * @param {object} unsubscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t\t\t\t\t\t\t\t\t\t  or onFailure callback.\n\t\t * @param {function} unsubscribeOptions.onSuccess - called when the unsubscribe acknowledgement has been received from the server.\n\t\t *                                    A single response object parameter is passed to the\n\t\t *                                    onSuccess callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    </ol>\n\t\t * @param {function} unsubscribeOptions.onFailure called when the unsubscribe request has failed or timed out.\n\t\t *                                    A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    <li>errorCode - a number indicating the nature of the error.\n\t\t *                                    <li>errorMessage - text describing the error.\n\t\t *                                    </ol>\n\t\t * @param {number} unsubscribeOptions.timeout - which, if present, determines the number of seconds\n\t\t *                                    after which the onFailure callback is called. The presence of\n\t\t *                                    a timeout does not prevent the onSuccess callback from being\n\t\t *                                    called when the unsubscribe completes\n\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t */\n\t\t\tthis.unsubscribe = function (filter, unsubscribeOptions) {\n\t\t\t\tif (typeof filter !== \"string\" && filter.constructor !== Array)\n\t\t\t\t\tthrow new Error(\"Invalid argument:\"+filter);\n\t\t\t\tunsubscribeOptions = unsubscribeOptions || {} ;\n\t\t\t\tvalidate(unsubscribeOptions,  {invocationContext:\"object\",\n\t\t\t\t\tonSuccess:\"function\",\n\t\t\t\t\tonFailure:\"function\",\n\t\t\t\t\ttimeout:\"number\"\n\t\t\t\t});\n\t\t\t\tif (unsubscribeOptions.timeout && !unsubscribeOptions.onFailure)\n\t\t\t\t\tthrow new Error(\"unsubscribeOptions.timeout specified with no onFailure callback.\");\n\t\t\t\tclient.unsubscribe(filter, unsubscribeOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t * Send a message to the consumers of the destination in the Message.\n\t\t *\n\t\t * @name Paho.Client#send\n\t\t * @function\n\t\t * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the destination to which the message is to be sent.\n\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.Message object.\n\t\t * @param {String|ArrayBuffer} payload - The message data to be sent.\n\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t * \t\t<dl>\n\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t *     \t\t\t<dt>1 At least once.\n\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t * \t\t</dl>\n\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t *                     to both current and future subscriptions.\n\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t *                     with the retained boolean set to true\n\t\t *                     and the subscrption was made after the message has been published.\n\t\t * @throws {InvalidState} if the client is not connected.\n\t\t */\n\t\t\tthis.send = function (topic,payload,qos,retained) {\n\t\t\t\tvar message ;\n\n\t\t\t\tif(arguments.length === 0){\n\t\t\t\t\tthrow new Error(\"Invalid argument.\"+\"length\");\n\n\t\t\t\t}else if(arguments.length == 1) {\n\n\t\t\t\t\tif (!(topic instanceof Message) && (typeof topic !== \"string\"))\n\t\t\t\t\t\tthrow new Error(\"Invalid argument:\"+ typeof topic);\n\n\t\t\t\t\tmessage = topic;\n\t\t\t\t\tif (typeof message.destinationName === \"undefined\")\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT,[message.destinationName,\"Message.destinationName\"]));\n\t\t\t\t\tclient.send(message);\n\n\t\t\t\t}else {\n\t\t\t\t//parameter checking in Message object\n\t\t\t\t\tmessage = new Message(payload);\n\t\t\t\t\tmessage.destinationName = topic;\n\t\t\t\t\tif(arguments.length >= 3)\n\t\t\t\t\t\tmessage.qos = qos;\n\t\t\t\t\tif(arguments.length >= 4)\n\t\t\t\t\t\tmessage.retained = retained;\n\t\t\t\t\tclient.send(message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t * Publish a message to the consumers of the destination in the Message.\n\t\t * Synonym for Paho.Mqtt.Client#send\n\t\t *\n\t\t * @name Paho.Client#publish\n\t\t * @function\n\t\t * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the topic to which the message is to be published.\n\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.Message object.\n\t\t * @param {String|ArrayBuffer} payload - The message data to be published.\n\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t * \t\t<dl>\n\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t *     \t\t\t<dt>1 At least once.\n\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t * \t\t</dl>\n\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t *                     to both current and future subscriptions.\n\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t *                     with the retained boolean set to true\n\t\t *                     and the subscrption was made after the message has been published.\n\t\t * @throws {InvalidState} if the client is not connected.\n\t\t */\n\t\t\tthis.publish = function(topic,payload,qos,retained) {\n\t\t\t\tvar message ;\n\n\t\t\t\tif(arguments.length === 0){\n\t\t\t\t\tthrow new Error(\"Invalid argument.\"+\"length\");\n\n\t\t\t\t}else if(arguments.length == 1) {\n\n\t\t\t\t\tif (!(topic instanceof Message) && (typeof topic !== \"string\"))\n\t\t\t\t\t\tthrow new Error(\"Invalid argument:\"+ typeof topic);\n\n\t\t\t\t\tmessage = topic;\n\t\t\t\t\tif (typeof message.destinationName === \"undefined\")\n\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT,[message.destinationName,\"Message.destinationName\"]));\n\t\t\t\t\tclient.send(message);\n\n\t\t\t\t}else {\n\t\t\t\t\t//parameter checking in Message object\n\t\t\t\t\tmessage = new Message(payload);\n\t\t\t\t\tmessage.destinationName = topic;\n\t\t\t\t\tif(arguments.length >= 3)\n\t\t\t\t\t\tmessage.qos = qos;\n\t\t\t\t\tif(arguments.length >= 4)\n\t\t\t\t\t\tmessage.retained = retained;\n\t\t\t\t\tclient.send(message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t * Normal disconnect of this Messaging client from its server.\n\t\t *\n\t\t * @name Paho.Client#disconnect\n\t\t * @function\n\t\t * @throws {InvalidState} if the client is already disconnected.\n\t\t */\n\t\t\tthis.disconnect = function () {\n\t\t\t\tclient.disconnect();\n\t\t\t};\n\n\t\t\t/**\n\t\t * Get the contents of the trace log.\n\t\t *\n\t\t * @name Paho.Client#getTraceLog\n\t\t * @function\n\t\t * @return {Object[]} tracebuffer containing the time ordered trace records.\n\t\t */\n\t\t\tthis.getTraceLog = function () {\n\t\t\t\treturn client.getTraceLog();\n\t\t\t};\n\n\t\t\t/**\n\t\t * Start tracing.\n\t\t *\n\t\t * @name Paho.Client#startTrace\n\t\t * @function\n\t\t */\n\t\t\tthis.startTrace = function () {\n\t\t\t\tclient.startTrace();\n\t\t\t};\n\n\t\t\t/**\n\t\t * Stop tracing.\n\t\t *\n\t\t * @name Paho.Client#stopTrace\n\t\t * @function\n\t\t */\n\t\t\tthis.stopTrace = function () {\n\t\t\t\tclient.stopTrace();\n\t\t\t};\n\n\t\t\tthis.isConnected = function() {\n\t\t\t\treturn client.connected;\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t * An application message, sent or received.\n\t * <p>\n\t * All attributes may be null, which implies the default values.\n\t *\n\t * @name Paho.Message\n\t * @constructor\n\t * @param {String|ArrayBuffer} payload The message data to be sent.\n\t * <p>\n\t * @property {string} payloadString <i>read only</i> The payload as a string if the payload consists of valid UTF-8 characters.\n\t * @property {ArrayBuffer} payloadBytes <i>read only</i> The payload as an ArrayBuffer.\n\t * <p>\n\t * @property {string} destinationName <b>mandatory</b> The name of the destination to which the message is to be sent\n\t *                    (for messages about to be sent) or the name of the destination from which the message has been received.\n\t *                    (for messages received by the onMessage function).\n\t * <p>\n\t * @property {number} qos The Quality of Service used to deliver the message.\n\t * <dl>\n\t *     <dt>0 Best effort (default).\n\t *     <dt>1 At least once.\n\t *     <dt>2 Exactly once.\n\t * </dl>\n\t * <p>\n\t * @property {Boolean} retained If true, the message is to be retained by the server and delivered\n\t *                     to both current and future subscriptions.\n\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t *                     A received message has the retained boolean set to true if the message was published\n\t *                     with the retained boolean set to true\n\t *                     and the subscrption was made after the message has been published.\n\t * <p>\n\t * @property {Boolean} duplicate <i>read only</i> If true, this message might be a duplicate of one which has already been received.\n\t *                     This is only set on messages received from the server.\n\t *\n\t */\n\t\tvar Message = function (newPayload) {\n\t\t\tvar payload;\n\t\t\tif (   typeof newPayload === \"string\" ||\n\t\tnewPayload instanceof ArrayBuffer ||\n\t\t(ArrayBuffer.isView(newPayload) && !(newPayload instanceof DataView))\n\t\t\t) {\n\t\t\t\tpayload = newPayload;\n\t\t\t} else {\n\t\t\t\tthrow (format(ERROR.INVALID_ARGUMENT, [newPayload, \"newPayload\"]));\n\t\t\t}\n\n\t\t\tvar destinationName;\n\t\t\tvar qos = 0;\n\t\t\tvar retained = false;\n\t\t\tvar duplicate = false;\n\n\t\t\tObject.defineProperties(this,{\n\t\t\t\t\"payloadString\":{\n\t\t\t\t\tenumerable : true,\n\t\t\t\t\tget : function () {\n\t\t\t\t\t\tif (typeof payload === \"string\")\n\t\t\t\t\t\t\treturn payload;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn parseUTF8(payload, 0, payload.length);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"payloadBytes\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\tif (typeof payload === \"string\") {\n\t\t\t\t\t\t\tvar buffer = new ArrayBuffer(UTF8Length(payload));\n\t\t\t\t\t\t\tvar byteStream = new Uint8Array(buffer);\n\t\t\t\t\t\t\tstringToUTF8(payload, byteStream, 0);\n\n\t\t\t\t\t\t\treturn byteStream;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn payload;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"destinationName\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return destinationName; },\n\t\t\t\t\tset: function(newDestinationName) {\n\t\t\t\t\t\tif (typeof newDestinationName === \"string\")\n\t\t\t\t\t\t\tdestinationName = newDestinationName;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [newDestinationName, \"newDestinationName\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"qos\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return qos; },\n\t\t\t\t\tset: function(newQos) {\n\t\t\t\t\t\tif (newQos === 0 || newQos === 1 || newQos === 2 )\n\t\t\t\t\t\t\tqos = newQos;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\"Invalid argument:\"+newQos);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"retained\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return retained; },\n\t\t\t\t\tset: function(newRetained) {\n\t\t\t\t\t\tif (typeof newRetained === \"boolean\")\n\t\t\t\t\t\t\tretained = newRetained;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [newRetained, \"newRetained\"]));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"topic\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return destinationName; },\n\t\t\t\t\tset: function(newTopic) {destinationName=newTopic;}\n\t\t\t\t},\n\t\t\t\t\"duplicate\":{\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function() { return duplicate; },\n\t\t\t\t\tset: function(newDuplicate) {duplicate=newDuplicate;}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Module contents.\n\t\treturn {\n\t\t\tClient: Client,\n\t\t\tMessage: Message\n\t\t};\n\t// eslint-disable-next-line no-nested-ternary\n\t})(typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {});\n\treturn PahoMQTT;\n});\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = require('./lib/Observable.js').Observable;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species');\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, SymbolObservable);\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","\"use strict\";\n/*\n * Copyright 2018-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This Symbol is used to reference an internal-only PubSub provider that\n * is used for AppSync/GraphQL subscriptions in the API category.\n */\nvar hasSymbol = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function';\nexports.INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER = hasSymbol\n    ? Symbol.for('INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER')\n    : '@@INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER';\n//# sourceMappingURL=constants.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as Observable from 'zen-observable';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { MqttOverWSProvider } from './MqttOverWSProvider';\nvar logger = new Logger('AWSAppSyncProvider');\nvar AWSAppSyncProvider = /** @class */ (function (_super) {\n    __extends(AWSAppSyncProvider, _super);\n    function AWSAppSyncProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._topicClient = new Map();\n        _this._topicAlias = new Map();\n        return _this;\n    }\n    Object.defineProperty(AWSAppSyncProvider.prototype, \"endpoint\", {\n        get: function () {\n            throw new Error('Not supported');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AWSAppSyncProvider.prototype.getProviderName = function () {\n        return 'AWSAppSyncProvider';\n    };\n    AWSAppSyncProvider.prototype.publish = function (topics, msg, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error('Operation not supported');\n            });\n        });\n    };\n    AWSAppSyncProvider.prototype._cleanUp = function (clientId) {\n        var _this = this;\n        var topicsForClient = Array.from(this._topicClient.entries())\n            .filter(function (_a) {\n            var c = _a[1];\n            return c.clientId === clientId;\n        })\n            .map(function (_a) {\n            var t = _a[0];\n            return t;\n        });\n        topicsForClient.forEach(function (t) { return _this._cleanUpForTopic(t); });\n    };\n    AWSAppSyncProvider.prototype._cleanUpForTopic = function (topic) {\n        this._topicClient.delete(topic);\n        this._topicAlias.delete(topic);\n    };\n    AWSAppSyncProvider.prototype.onDisconnect = function (_a) {\n        var _this = this;\n        var clientId = _a.clientId, errorCode = _a.errorCode, args = __rest(_a, [\"clientId\", \"errorCode\"]);\n        if (errorCode !== 0) {\n            var topicsForClient = Array.from(this._topicClient.entries())\n                .filter(function (_a) {\n                var c = _a[1];\n                return c.clientId === clientId;\n            })\n                .map(function (_a) {\n                var t = _a[0];\n                return t;\n            });\n            topicsForClient.forEach(function (topic) {\n                if (_this._topicObservers.has(topic)) {\n                    _this._topicObservers.get(topic).forEach(function (obs) {\n                        if (!obs.closed) {\n                            obs.error(args);\n                        }\n                    });\n                    _this._topicObservers.delete(topic);\n                }\n            });\n            this._cleanUp(clientId);\n        }\n    };\n    AWSAppSyncProvider.prototype.disconnect = function (clientId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var client;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.clientsQueue.get(clientId, function () { return null; })];\n                    case 1:\n                        client = _a.sent();\n                        return [4 /*yield*/, _super.prototype.disconnect.call(this, clientId)];\n                    case 2:\n                        _a.sent();\n                        this._cleanUp(clientId);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSAppSyncProvider.prototype.subscribe = function (topics, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var result = new Observable(function (observer) {\n            var targetTopics = [].concat(topics);\n            logger.debug('Subscribing to topic(s)', targetTopics.join(','));\n            (function () { return __awaiter(_this, void 0, void 0, function () {\n                var _a, mqttConnections, newSubscriptions, newAliases, map;\n                var _this = this;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // Add these topics to map\n                            targetTopics.forEach(function (t) {\n                                if (!_this._topicObservers.has(t)) {\n                                    _this._topicObservers.set(t, new Set());\n                                }\n                                _this._topicObservers.get(t).add(observer);\n                            });\n                            _a = options.mqttConnections, mqttConnections = _a === void 0 ? [] : _a, newSubscriptions = options.newSubscriptions;\n                            newAliases = Object.entries(newSubscriptions).map(function (_a) {\n                                var alias = _a[0], v = _a[1];\n                                return [v.topic, alias];\n                            });\n                            // Merge new aliases with old ones\n                            this._topicAlias = new Map(__spreadArrays(Array.from(this._topicAlias.entries()), newAliases));\n                            map = Object.entries(targetTopics.reduce(function (acc, elem) {\n                                var connectionInfoForTopic = mqttConnections.find(function (c) { return c.topics.indexOf(elem) > -1; });\n                                if (connectionInfoForTopic) {\n                                    var clientId = connectionInfoForTopic.client, url = connectionInfoForTopic.url;\n                                    if (!acc[clientId]) {\n                                        acc[clientId] = {\n                                            url: url,\n                                            topics: new Set(),\n                                        };\n                                    }\n                                    acc[clientId].topics.add(elem);\n                                }\n                                return acc;\n                            }, {}));\n                            // reconnect everything we have in the map\n                            return [4 /*yield*/, Promise.all(map.map(function (_a) {\n                                    var clientId = _a[0], _b = _a[1], url = _b.url, topics = _b.topics;\n                                    return __awaiter(_this, void 0, void 0, function () {\n                                        var client, err_1;\n                                        var _this = this;\n                                        return __generator(this, function (_c) {\n                                            switch (_c.label) {\n                                                case 0:\n                                                    client = null;\n                                                    _c.label = 1;\n                                                case 1:\n                                                    _c.trys.push([1, 3, , 4]);\n                                                    return [4 /*yield*/, this.connect(clientId, {\n                                                            clientId: clientId,\n                                                            url: url,\n                                                        })];\n                                                case 2:\n                                                    client = _c.sent();\n                                                    return [3 /*break*/, 4];\n                                                case 3:\n                                                    err_1 = _c.sent();\n                                                    observer.error({ message: 'Failed to connect', error: err_1 });\n                                                    observer.complete();\n                                                    return [2 /*return*/, undefined];\n                                                case 4:\n                                                    // subscribe to all topics for this client\n                                                    // store topic-client mapping\n                                                    topics.forEach(function (topic) {\n                                                        if (client.isConnected()) {\n                                                            client.subscribe(topic);\n                                                            _this._topicClient.set(topic, client);\n                                                        }\n                                                    });\n                                                    return [2 /*return*/, client];\n                                            }\n                                        });\n                                    });\n                                }))];\n                        case 1:\n                            // reconnect everything we have in the map\n                            _b.sent();\n                            return [2 /*return*/];\n                    }\n                });\n            }); })();\n            return function () {\n                logger.debug('Unsubscribing from topic(s)', targetTopics.join(','));\n                targetTopics.forEach(function (t) {\n                    var client = _this._topicClient.get(t);\n                    if (client && client.isConnected()) {\n                        client.unsubscribe(t);\n                        _this._topicClient.delete(t);\n                        if (!Array.from(_this._topicClient.values()).some(function (c) { return c === client; })) {\n                            _this.disconnect(client.clientId);\n                        }\n                    }\n                    _this._topicObservers.delete(t);\n                });\n            };\n        });\n        return Observable.from(result).map(function (value) {\n            var topic = _this.getTopicForValue(value);\n            var alias = _this._topicAlias.get(topic);\n            value.data = Object.entries(value.data).reduce(function (obj, _a) {\n                var origKey = _a[0], val = _a[1];\n                return ((obj[(alias || origKey)] = val), obj);\n            }, {});\n            return value;\n        });\n    };\n    return AWSAppSyncProvider;\n}(MqttOverWSProvider));\nexport { AWSAppSyncProvider };\n//# sourceMappingURL=AWSAppSyncProvider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { MqttOverWSProvider } from './MqttOverWSProvider';\nimport { Signer, Credentials } from '@aws-amplify/core';\nvar SERVICE_NAME = 'iotdevicegateway';\nvar AWSIoTProvider = /** @class */ (function (_super) {\n    __extends(AWSIoTProvider, _super);\n    function AWSIoTProvider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AWSIoTProvider.prototype, \"region\", {\n        get: function () {\n            return this.options.aws_pubsub_region;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AWSIoTProvider.prototype.getProviderName = function () {\n        return 'AWSIoTProvider';\n    };\n    Object.defineProperty(AWSIoTProvider.prototype, \"endpoint\", {\n        get: function () {\n            var _this = this;\n            return (function () { return __awaiter(_this, void 0, void 0, function () {\n                var endpoint, serviceInfo, _a, access_key, secret_key, session_token, result;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            endpoint = this.options.aws_pubsub_endpoint;\n                            serviceInfo = {\n                                service: SERVICE_NAME,\n                                region: this.region,\n                            };\n                            return [4 /*yield*/, Credentials.get()];\n                        case 1:\n                            _a = _b.sent(), access_key = _a.accessKeyId, secret_key = _a.secretAccessKey, session_token = _a.sessionToken;\n                            result = Signer.signUrl(endpoint, { access_key: access_key, secret_key: secret_key, session_token: session_token }, serviceInfo);\n                            return [2 /*return*/, result];\n                    }\n                });\n            }); })();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AWSIoTProvider;\n}(MqttOverWSProvider));\nexport { AWSIoTProvider };\n//# sourceMappingURL=AWSIotProvider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport * as Paho from 'paho-mqtt';\nimport { v4 as uuid } from 'uuid';\nimport * as Observable from 'zen-observable';\nimport { AbstractPubSubProvider } from './PubSubProvider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('MqttOverWSProvider');\nexport function mqttTopicMatch(filter, topic) {\n    var filterArray = filter.split('/');\n    var length = filterArray.length;\n    var topicArray = topic.split('/');\n    for (var i = 0; i < length; ++i) {\n        var left = filterArray[i];\n        var right = topicArray[i];\n        if (left === '#')\n            return topicArray.length >= length;\n        if (left !== '+' && left !== right)\n            return false;\n    }\n    return length === topicArray.length;\n}\nvar ClientsQueue = /** @class */ (function () {\n    function ClientsQueue() {\n        this.promises = new Map();\n    }\n    ClientsQueue.prototype.get = function (clientId, clientFactory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promise;\n            return __generator(this, function (_a) {\n                promise = this.promises.get(clientId);\n                if (promise) {\n                    return [2 /*return*/, promise];\n                }\n                promise = clientFactory(clientId);\n                this.promises.set(clientId, promise);\n                return [2 /*return*/, promise];\n            });\n        });\n    };\n    Object.defineProperty(ClientsQueue.prototype, \"allClients\", {\n        get: function () {\n            return Array.from(this.promises.keys());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ClientsQueue.prototype.remove = function (clientId) {\n        this.promises.delete(clientId);\n    };\n    return ClientsQueue;\n}());\nvar topicSymbol = typeof Symbol !== 'undefined' ? Symbol('topic') : '@@topic';\nvar MqttOverWSProvider = /** @class */ (function (_super) {\n    __extends(MqttOverWSProvider, _super);\n    function MqttOverWSProvider(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, __assign(__assign({}, options), { clientId: options.clientId || uuid() })) || this;\n        _this._clientsQueue = new ClientsQueue();\n        _this._topicObservers = new Map();\n        _this._clientIdObservers = new Map();\n        return _this;\n    }\n    Object.defineProperty(MqttOverWSProvider.prototype, \"clientId\", {\n        get: function () {\n            return this.options.clientId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MqttOverWSProvider.prototype, \"endpoint\", {\n        get: function () {\n            return this.options.aws_pubsub_endpoint;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MqttOverWSProvider.prototype, \"clientsQueue\", {\n        get: function () {\n            return this._clientsQueue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MqttOverWSProvider.prototype, \"isSSLEnabled\", {\n        get: function () {\n            return !this.options\n                .aws_appsync_dangerously_connect_to_http_endpoint_for_testing;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MqttOverWSProvider.prototype.getTopicForValue = function (value) {\n        return typeof value === 'object' && value[topicSymbol];\n    };\n    MqttOverWSProvider.prototype.getProviderName = function () {\n        return 'MqttOverWSProvider';\n    };\n    MqttOverWSProvider.prototype.onDisconnect = function (_a) {\n        var clientId = _a.clientId, errorCode = _a.errorCode, args = __rest(_a, [\"clientId\", \"errorCode\"]);\n        if (errorCode !== 0) {\n            logger.warn(clientId, JSON.stringify(__assign({ errorCode: errorCode }, args), null, 2));\n            this._topicObservers.forEach(function (observerForTopic, _observerTopic) {\n                observerForTopic.forEach(function (observer) {\n                    observer.error('Disconnected, error code: ' + errorCode);\n                    observer.complete();\n                });\n            });\n        }\n        this._topicObservers = new Map();\n    };\n    MqttOverWSProvider.prototype.newClient = function (_a) {\n        var url = _a.url, clientId = _a.clientId;\n        return __awaiter(this, void 0, void 0, function () {\n            var client;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        logger.debug('Creating new MQTT client', clientId);\n                        client = new Paho.Client(url, clientId);\n                        // client.trace = (args) => logger.debug(clientId, JSON.stringify(args, null, 2));\n                        client.onMessageArrived = function (_a) {\n                            var topic = _a.destinationName, msg = _a.payloadString;\n                            _this._onMessage(topic, msg);\n                        };\n                        client.onConnectionLost = function (_a) {\n                            var errorCode = _a.errorCode, args = __rest(_a, [\"errorCode\"]);\n                            _this.onDisconnect(__assign({ clientId: clientId, errorCode: errorCode }, args));\n                        };\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                client.connect({\n                                    useSSL: _this.isSSLEnabled,\n                                    mqttVersion: 3,\n                                    onSuccess: function () { return resolve(client); },\n                                    onFailure: reject,\n                                });\n                            })];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/, client];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype.connect = function (clientId, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.clientsQueue.get(clientId, function (clientId) {\n                            return _this.newClient(__assign(__assign({}, options), { clientId: clientId }));\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype.disconnect = function (clientId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var client;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.clientsQueue.get(clientId, function () { return null; })];\n                    case 1:\n                        client = _a.sent();\n                        if (client && client.isConnected()) {\n                            client.disconnect();\n                        }\n                        this.clientsQueue.remove(clientId);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype.publish = function (topics, msg) {\n        return __awaiter(this, void 0, void 0, function () {\n            var targetTopics, message, url, client;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        targetTopics = [].concat(topics);\n                        message = JSON.stringify(msg);\n                        return [4 /*yield*/, this.endpoint];\n                    case 1:\n                        url = _a.sent();\n                        return [4 /*yield*/, this.connect(this.clientId, { url: url })];\n                    case 2:\n                        client = _a.sent();\n                        logger.debug('Publishing to topic(s)', targetTopics.join(','), message);\n                        targetTopics.forEach(function (topic) { return client.send(topic, message); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype._onMessage = function (topic, msg) {\n        try {\n            var matchedTopicObservers_1 = [];\n            this._topicObservers.forEach(function (observerForTopic, observerTopic) {\n                if (mqttTopicMatch(observerTopic, topic)) {\n                    matchedTopicObservers_1.push(observerForTopic);\n                }\n            });\n            var parsedMessage_1 = JSON.parse(msg);\n            if (typeof parsedMessage_1 === 'object') {\n                parsedMessage_1[topicSymbol] = topic;\n            }\n            matchedTopicObservers_1.forEach(function (observersForTopic) {\n                observersForTopic.forEach(function (observer) { return observer.next(parsedMessage_1); });\n            });\n        }\n        catch (error) {\n            logger.warn('Error handling message', error, msg);\n        }\n    };\n    MqttOverWSProvider.prototype.subscribe = function (topics, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var targetTopics = [].concat(topics);\n        logger.debug('Subscribing to topic(s)', targetTopics.join(','));\n        return new Observable(function (observer) {\n            targetTopics.forEach(function (topic) {\n                var observersForTopic = _this._topicObservers.get(topic);\n                if (!observersForTopic) {\n                    observersForTopic = new Set();\n                    _this._topicObservers.set(topic, observersForTopic);\n                }\n                observersForTopic.add(observer);\n            });\n            // @ts-ignore\n            var client;\n            var _a = options.clientId, clientId = _a === void 0 ? _this.clientId : _a;\n            var observersForClientId = _this._clientIdObservers.get(clientId);\n            if (!observersForClientId) {\n                observersForClientId = new Set();\n            }\n            observersForClientId.add(observer);\n            _this._clientIdObservers.set(clientId, observersForClientId);\n            (function () { return __awaiter(_this, void 0, void 0, function () {\n                var _a, url, _b, e_1;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            _a = options.url;\n                            if (!(_a === void 0)) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.endpoint];\n                        case 1:\n                            _b = _c.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            _b = _a;\n                            _c.label = 3;\n                        case 3:\n                            url = _b;\n                            _c.label = 4;\n                        case 4:\n                            _c.trys.push([4, 6, , 7]);\n                            return [4 /*yield*/, this.connect(clientId, { url: url })];\n                        case 5:\n                            client = _c.sent();\n                            targetTopics.forEach(function (topic) {\n                                client.subscribe(topic);\n                            });\n                            return [3 /*break*/, 7];\n                        case 6:\n                            e_1 = _c.sent();\n                            observer.error(e_1);\n                            return [3 /*break*/, 7];\n                        case 7: return [2 /*return*/];\n                    }\n                });\n            }); })();\n            return function () {\n                logger.debug('Unsubscribing from topic(s)', targetTopics.join(','));\n                if (client) {\n                    _this._clientIdObservers.get(clientId).delete(observer);\n                    targetTopics.forEach(function (topic) {\n                        if (client.isConnected()) {\n                            client.unsubscribe(topic);\n                        }\n                        var observersForTopic = _this._topicObservers.get(topic) ||\n                            new Set();\n                        observersForTopic.forEach(function (observer) { return observer.complete(); });\n                        observersForTopic.clear();\n                    });\n                    if (_this._clientIdObservers.get(clientId).size === 0) {\n                        _this.disconnect(clientId);\n                        _this._clientIdObservers.delete(clientId);\n                    }\n                }\n                return null;\n            };\n        });\n    };\n    return MqttOverWSProvider;\n}(AbstractPubSubProvider));\nexport { MqttOverWSProvider };\n//# sourceMappingURL=MqttOverWSProvider.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractPubSubProvider');\nvar AbstractPubSubProvider = /** @class */ (function () {\n    function AbstractPubSubProvider(options) {\n        if (options === void 0) { options = {}; }\n        this._config = options;\n    }\n    AbstractPubSubProvider.prototype.configure = function (config) {\n        if (config === void 0) { config = {}; }\n        this._config = __assign(__assign({}, config), this._config);\n        logger.debug(\"configure \" + this.getProviderName(), this._config);\n        return this.options;\n    };\n    AbstractPubSubProvider.prototype.getCategory = function () {\n        return 'PubSub';\n    };\n    Object.defineProperty(AbstractPubSubProvider.prototype, \"options\", {\n        get: function () {\n            return __assign({}, this._config);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractPubSubProvider;\n}());\nexport { AbstractPubSubProvider };\n//# sourceMappingURL=PubSubProvider.js.map","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nexport * from './PubSubProvider';\nexport * from './AWSAppSyncProvider';\nexport * from './AWSIotProvider';\nexport * from './MqttOverWSProvider';\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// import '../Common/Polyfills';\nimport * as Observable from 'zen-observable';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER } from '@aws-amplify/core/lib/constants';\nimport { AWSAppSyncProvider } from './Providers';\nvar logger = new Logger('PubSub');\nvar PubSub = /** @class */ (function () {\n    /**\n     * Initialize PubSub with AWS configurations\n     *\n     * @param {PubSubOptions} options - Configuration object for PubSub\n     */\n    function PubSub(options) {\n        this._options = options;\n        logger.debug('PubSub Options', this._options);\n        this._pluggables = [];\n        this.subscribe = this.subscribe.bind(this);\n    }\n    Object.defineProperty(PubSub.prototype, \"awsAppSyncProvider\", {\n        /**\n         * Lazy instantiate awsAppSyncProvider when it is required by the API category\n         */\n        get: function () {\n            if (!this._awsAppSyncProvider) {\n                this._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\n            }\n            return this._awsAppSyncProvider;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PubSub.prototype.getModuleName = function () {\n        return 'PubSub';\n    };\n    /**\n     * Configure PubSub part with configurations\n     *\n     * @param {PubSubOptions} config - Configuration for PubSub\n     * @return {Object} - The current configuration\n     */\n    PubSub.prototype.configure = function (options) {\n        var _this = this;\n        var opt = options ? options.PubSub || options : {};\n        logger.debug('configure PubSub', { opt: opt });\n        this._options = Object.assign({}, this._options, opt);\n        this._pluggables.map(function (pluggable) { return pluggable.configure(_this._options); });\n        return this._options;\n    };\n    /**\n     * add plugin into Analytics category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    PubSub.prototype.addPluggable = function (pluggable) {\n        return __awaiter(this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                if (pluggable && pluggable.getCategory() === 'PubSub') {\n                    this._pluggables.push(pluggable);\n                    config = pluggable.configure(this._options);\n                    return [2 /*return*/, config];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    PubSub.prototype.getProviderByName = function (providerName) {\n        if (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n            return this.awsAppSyncProvider;\n        }\n        return this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n    };\n    PubSub.prototype.getProviders = function (options) {\n        if (options === void 0) { options = {}; }\n        var providerName = options.provider;\n        if (!providerName) {\n            return this._pluggables;\n        }\n        var provider = this.getProviderByName(providerName);\n        if (!provider) {\n            throw new Error(\"Could not find provider named \" + providerName);\n        }\n        return [provider];\n    };\n    PubSub.prototype.publish = function (topics, msg, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.all(this.getProviders(options).map(function (provider) {\n                        return provider.publish(topics, msg, options);\n                    }))];\n            });\n        });\n    };\n    PubSub.prototype.subscribe = function (topics, options) {\n        logger.debug('subscribe options', options);\n        var providers = this.getProviders(options);\n        return new Observable(function (observer) {\n            var observables = providers.map(function (provider) { return ({\n                provider: provider,\n                observable: provider.subscribe(topics, options),\n            }); });\n            var subscriptions = observables.map(function (_a) {\n                var provider = _a.provider, observable = _a.observable;\n                return observable.subscribe({\n                    start: console.error,\n                    next: function (value) { return observer.next({ provider: provider, value: value }); },\n                    error: function (error) { return observer.error({ provider: provider, error: error }); },\n                });\n            });\n            return function () {\n                return subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); });\n            };\n        });\n    };\n    return PubSub;\n}());\nexport default PubSub;\n//# sourceMappingURL=PubSub.js.map","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport PubSubClass from './PubSub';\nimport Amplify, { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('PubSub');\nvar _instance = null;\nif (!_instance) {\n    logger.debug('Create PubSub Instance');\n    _instance = new PubSubClass(null);\n}\nvar PubSub = _instance;\nAmplify.register(PubSub);\nexport default PubSub;\nexport * from './Providers/AWSIotProvider';\nexport { PubSubClass };\n//# sourceMappingURL=index.js.map","module.exports = __WEBPACK_EXTERNAL_MODULE__aws_amplify_core__;"],"sourceRoot":""}
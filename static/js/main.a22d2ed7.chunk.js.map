{"version":3,"sources":["../../../reactTester/src/Credentials.js","../../../reactTester/src/serviceWorker.js","../../../reactTester/src/history.js","../../../reactTester/src/Components/Home.js","../../../reactTester/src/Components/Loader.js","../../../reactTester/src/Components/RestAPIJson.js","../../../reactTester/src/Components/Login.js","../../../reactTester/src/Components/Table.js","../../../reactTester/src/App.js","../../../reactTester/src/index.js"],"names":["Credentials","cognito","REGION","process","REACT_APP_REGION","USER_POOL_ID","REACT_APP_USER_POOL_ID","APP_CLIENT_ID","REACT_APP_APP_CLIENT_ID","Boolean","window","location","hostname","match","createBrowserHistory","JSONPrettyMon","require","Home","state","json_response","is_user_valid","_this2","this","axios","get","headers","Access-Control-Allow-Origin","Access-Control-Allow-Credentials","then","res","console","log","JSON","stringify","data","setState","i","Items","length","S","split","username","res_username","substring","text","res_text","ReactDOM","render","React","createElement","innerHTML","catch","err","react_default","a","className","JSONPretty_default","theme","style","textAlign","Component","DotLoader","props","width","dimensions","height","TableHeader","Table","basic","columns","size","selectable","celled","Header","Row","HeaderCell","Body","Table_TableContent","dataList","selectedRow","TableContent","email","Comment","_this3","map","info","index","Fragment","key","Cell","zip","Button","primary","onClick","App","homeBorder","tableBorder","apiBorder","loginBorder","home","history","push","_this","table","api","login","pathname","react_router","exact","strict","path","component","default","Amplify","configure","Auth","mandatorySignIn","region","AWSCredentials","userPoolId","userPoolWebClientId","Analytics","disabled","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a22d2ed7.chunk.js","sourcesContent":["export default {\n    cognito: {\n        REGION: process.env.REACT_APP_REGION,\n        USER_POOL_ID: process.env.REACT_APP_USER_POOL_ID,\n        APP_CLIENT_ID: process.env.REACT_APP_APP_CLIENT_ID\n    }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React, { Component } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies';\r\nimport JSONPretty from 'react-json-pretty';\r\nimport '../App.css';\r\nimport 'react-json-pretty/themes/monikai.css';\r\n\r\n\r\nvar JSONPrettyMon = require('react-json-pretty/dist/monikai');\r\n\r\n\r\n\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    state = {\r\n        json_response: null,\r\n        is_user_valid: true\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        const url = \"https://jz9ap7x9if.execute-api.us-east-1.amazonaws.com/dev/getmessage\";\r\n\r\n        axios.get(url,{\r\n            headers: { 'Access-Control-Allow-Origin': '*',\"Access-Control-Allow-Credentials\": true}\r\n        }).then(res => {\r\n            console.log(JSON.stringify(res.data));\r\n            this.setState({                json_response: JSON.stringify(res.data)            });\r\n\r\n            var obj = res.data;              \r\n            for(var i = 0;i<res.data.Items.length;i++)\r\n            {\r\n                var Item = res.data.Items[i];\r\n                var Item_message = Item[\"message\"].S;\r\n\r\n                const data = Item_message.split(\"**\")\r\n                const username = data[0];\r\n                var res_username = username.substring(1, username.length);\r\n\r\n                const text = data[1];\r\n                var res_text = text.substring(1, text.length - 1);\r\n\r\n                console.log(res_username);\r\n                console.log(res_text);\r\n\r\n\r\n          \r\n\r\n                ReactDOM.render()\r\n                {\r\n                    var article = React.createElement('article');\r\n                    article.innerHTML = `\r\n    <div class=\"media-content\">\r\n        <div class=\"content\">\r\n            <p>\r\n     dfgdsgfffffffffffffffffffffffffffffffffff dfgdsgfffffffffffffffffffffffffffffffffffdfgdsgfffffffffffffffffffffffffffffffffffdfgdsgfffffffffffffffffffffffffffffffffff\r\n            </p>\r\n        </div>\r\n    </div>\r\n    `;\r\n\r\n\r\n                };\r\n\r\n            }\r\n  \r\n\r\n\r\n\r\n        }).catch(err => {\r\n            this.setState({\r\n                json_response: null\r\n            })\r\n        });\r\n   \r\n    }\r\n\r\n    render() {\r\n    {\r\n            //   return (\r\n            //       <div className=\"centerAlignment\">\r\n            //           <JSONPretty data={this.state.json_response} theme={JSONPrettyMon}\r\n            //                       style={{textAlign: 'left'}}/>\r\n            //       </div>\r\n            //   );\r\n        return (\r\n\r\n                <div className=\"centerAlignment\">fhz\r\n                    <JSONPretty data={this.state.json_response} theme={JSONPrettyMon}\r\n            style={{textAlign: 'left'}}/>\r\n</div>\r\n            );            \r\n    }\r\n}\r\n}","import React from 'react';\nimport '../Loader.css'\n\nconst DotLoader = (props) => {\n    return (\n        <div className=\"dotLoaderContainer\">\n            <div className=\"spinner\">\n                <div style={{ width: props.dimensions || '15px', height: props.dimensions || '15px' }} className=\"bounce1\"></div>\n                <div style={{ width: props.dimensions || '15px', height: props.dimensions || '15px' }} className=\"bounce2\"></div>\n                <div style={{ width: props.dimensions || '15px', height: props.dimensions || '15px' }} className=\"bounce3\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default DotLoader;","import React from 'react';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport JSONPretty from 'react-json-pretty';\nimport '../App.css';\nimport 'react-json-pretty/themes/monikai.css';\nimport Loader from './Loader';\n\nvar JSONPrettyMon = require('react-json-pretty/dist/monikai');\n\n\nexport default class RestAPIJson extends React.Component {\n\n    state = {\n        json_response: null,\n        is_user_valid: true\n    };\n\n    componentDidMount() {\n     //   const url = \"https://9rhoxjvmxl.execute-api.us-east-2.amazonaws.com/beta/test\";\n        const url = \"https://ji67dvwyn9.execute-api.us-east-1.amazonaws.com/Prod/restapi2?_u_id_=1\";\n        const u_id = cookie.load('_u_id_');\n        if (u_id === null || u_id === undefined) {\n            this.setState({\n                is_user_valid: false\n            })\n        }\n        console.log(u_id);\n        axios.get(url, {\n            params: {\n                u_id: u_id\n            },\n            headers: {\n               \"Content-Type\": \"application/json\",\n            //    \"Access-Control-Allow-Origin\": \"*\",\n                \"Authorization\": cookie.load(\"_ref_i_token_\")\n            }\n\n        }).then(res => {\n            console.log(JSON.stringify(res.data));\n            this.setState({\n             //   json_response: JSON.stringify(res.data.Items[0])\n                json_response: JSON.stringify(res.data)\n            })\n        }).catch(err => {\n            this.setState({\n                json_response: null\n            })\n        });\n   \n    }\n\n    render() {\n        if (this.state.is_user_valid === false) {\n            return (\n                <div className=\"centerAlignment\">\n                    <p> Oops!!! You are not authorized to make an API Call. </p>\n                </div>\n            )\n        } else if (this.state.json_response === null) {\n            return (\n                <div className=\"centerAlignment\">\n                    <Loader dimensions={'20px'}/>\n                </div>\n            )\n        } else {\n         //   return (\n         //       <div className=\"centerAlignment\">\n         //           <JSONPretty data={this.state.json_response} theme={JSONPrettyMon}\n         //                       style={{textAlign: 'left'}}/>\n         //       </div>\n         //   );\n            return (\n                <div className=\"centerAlignment\">\n                    <JSONPretty data={this.state.json_response} theme={JSONPrettyMon}\n                                style={{textAlign: 'left'}}/>\n                </div>\n            );            \n        }\n    }\n}","import React from 'react';\nimport {Icon, Input, Message} from 'semantic-ui-react'\nimport cookie from 'react-cookies';\nimport {Auth} from 'aws-amplify';\nimport '../App.css';\n\nclass Login extends React.Component {\n\n    state = {\n        user_name: \"\",\n        pwd: \"\",\n        login_error: null,\n        status: false\n    };\n\n    componentWillMount() {\n        if(cookie.load('_u_id_') !== null && cookie.load('_u_id_')!== undefined) {\n            this.setState({\n                status: true\n            })\n        }\n    }\n\n    emailId = (e) => {\n        this.setState({\n            user_name: e.target.value\n        })\n    };\n\n    password = (e) => {\n        this.setState({\n            pwd: e.target.value\n        })\n    };\n\n    againLogin = () => {\n        this.setState({\n            status: false\n        })\n    };\n\n    submit = () => {\n        Auth.signIn(this.state.user_name, this.state.pwd)\n            .then(user => {\n                let cog_data = user.signInUserSession.idToken;\n                let u_id = cog_data.payload.sub,\n                    jwt_token = cog_data.jwtToken;\n\n                localStorage.setItem('_cog_u_in_', JSON.stringify(cog_data.payload));\n                cookie.save(\"_ref_i_token_\", jwt_token, {path: '/'});\n                cookie.save(\"_u_id_\", u_id, {path: '/'});\n                this.setState({\n                    status: true\n                })\n            }).catch(err => {\n            this.setState({\n                login_error: \"Invalid credentials\"\n            });\n        })\n    };\n\n    render() {\n        if (this.state.status === true) {\n            return (\n                <div className=\"centerAlignment\">\n                    <Message positive>\n                        <Message.Header>Now You are an authorized user.</Message.Header>\n                        <span> Token Expired? </span>\n                        <button className=\"reLoginLink\" onClick={this.againLogin}> Login </button>\n                    </Message>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"centerAlignment\">\n                    <div>\n                        <p> Welcome Back! </p>\n                    </div>\n                    <div style={{marginTop: \"40px\"}}>\n                        <Input iconPosition='left' placeholder='User name' size=\"big\">\n                            <Icon name='user'/>\n                            <input onChange={this.emailId}/>\n                        </Input>\n                    </div>\n                    <div style={{marginTop: \"20px\"}}>\n                        <Input iconPosition='left' placeholder='Password' size=\"big\">\n                            <Icon name='lock'/>\n                            <input type=\"password\" onChange={this.password}/>\n                        </Input>\n                    </div>\n                    <div style={{marginTop: \"20px\", textAlign: \"center\"}}>\n                        <button className=\"button\" onClick={this.submit}>\n                            Login\n                        </button>\n                    </div>\n                    <div style={{marginTop: \"20px\", textAlign: \"center\"}}>\n                        {this.state.login_error === null ? null :\n                            <span style={{color: \"red\", textAlign: \"center\"}}> {this.state.login_error} </span>}\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Login;","import React from 'react';\nimport axios from 'axios';\nimport {\n    Table,\n    Button\n} from 'semantic-ui-react';\nimport Loader from \"./Loader\";\nimport cookie from 'react-cookies';\n\nexport default class TableComponent extends React.Component {\n\n    state = {\n        dataList: [],\n        isError: false\n    };\n\n    componentDidMount() {\n        var self = this;\n      //  const url = \"https://0fadggmpo7.execute-api.us-east-2.amazonaws.com/beta/sample-api\";\n        const url = \"https://ji67dvwyn9.execute-api.us-east-1.amazonaws.com/Prod/restapi2\"; \n        axios.get(url, {\n           params: {\n               status: 'active'\n           },\n           headers: {\n            \"Content-Type\": \"application/json\",\n         //    \"Access-Control-Allow-Origin\": \"*\",\n             \"Authorization\": cookie.load(\"_ref_i_token_\")\n         }\n        }).then(res => {\n            self.setState({\n               // dataList : res.data.Items\n                dataList : res.data\n            })\n        }).catch(err => {\n            self.setState({\n                isError: true\n            })\n        });\n    }\n\n    retry = () => {\n        window.location.reload();\n    };\n\n    render() {\n        const {\n            isError,\n            dataList\n        } = this.state;\n\n        if(isError) {\n            return (\n                <div className=\"centerAlignment\">\n                    <div>\n                        <h1> Oops... Please check your network (: </h1>\n                    </div>\n                    <div style={{ marginTop: '20px' }}>\n                        <Loader dimensions={'20px'}/>\n                    </div>\n                    <div className=\"centerAlignment\" style={{ marginTop: '100px' }}>\n                        <Button primary onClick={this.retry}> Retry </Button>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"centerAlignment\">\n                    <TableHeader dataList={dataList}/>\n                </div>\n            );\n        }\n    }\n}\n\nconst TableHeader = (props) => {\n    return (\n        <div>\n            <Table basic='very'\n                   columns={4}\n                   size='large'\n                   selectable={true}\n                   className=\"space_between_two_component\"\n                   celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell textAlign='center'>Email</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='center'>Zip</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='center'>Comment</Table.HeaderCell>\n                        <Table.HeaderCell textAlign='center'>Action</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    <TableContent dataList={props.dataList} selectedRow={props.selectedRow}/>\n                </Table.Body>\n            </Table>\n        </div>\n    );\n};\n\nclass TableContent extends React.Component {\n\n    selectedRow = (data) => {\n        console.log('Row data ', data);\n        console.log('Row data ', data.email);\n        console.log('Row data ', data.Comment);\n     //   setInterval(() => {\n     //       window.location.reload();\n     //   }, 3000);\n    };\n\n    render() {\n        if (this.props.dataList.length <= 0)\n            return null;\n        else {\n            return (\n                this.props.dataList && this.props.dataList.length > 0 && this.props.dataList.map((info, index) => {\n                    return (\n                        <React.Fragment key={index}>\n                            <Table.Row key={index}>\n                                <Table.Cell textAlign='center' width={4}>{info.email}</Table.Cell>\n                                <Table.Cell textAlign='center' width={1}>{info.zip}</Table.Cell>\n                                <Table.Cell textAlign='center' width={4}>{info.Comment}</Table.Cell>\n                                <Table.Cell width={1}>\n                                    <Button primary onClick={() => this.selectedRow(info)}> Submit</Button>\n                                </Table.Cell>\n                            </Table.Row>\n                        </React.Fragment>\n                    );\n                })\n            );\n        }\n    }\n}","import React from \"react\";\nimport history from './history';\nimport {Router, Route, Switch} from \"react-router-dom\";\nimport Home from './Components/Home.js';\nimport API from './Components/RestAPIJson.js';\nimport Login from './Components/Login.js'\nimport TableComponent from './Components/Table';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends React.Component {\n    state = {\n        homeBorder: '0px',\n        tableBorder: '0px',\n        apiBorder: '0px',\n        loginBorder: '0px'\n    }\n\n    home = () => {\n        history.push('/home');\n        this.setState({\n            homeBorder: '3px',\n            tableBorder: '0px',\n            apiBorder: '0px',\n            loginBorder: '0px'\n        })\n    }\n\n    table = () => {\n        history.push('/table');\n        this.setState({\n            homeBorder: '0px',\n            tableBorder: '3px',\n            apiBorder: '0px',\n            loginBorder: '0px'\n        })\n    }\n\n    api = () => {\n        history.push('/restapi');\n        this.setState({\n            homeBorder: '0px',\n            tableBorder: '0px',\n            apiBorder: '3px',\n            loginBorder: '0px'\n        })\n    }\n    login = () => {\n        history.push('/login');\n        this.setState({\n            homeBorder: '0px',\n            tableBorder: '0px',\n            apiBorder: '0px',\n            loginBorder: '3px'\n        })\n    }\n\n    componentWillMount() {\n\n        if (window.location.pathname === '/login')\n            this.setState({\n                homeBorder: '0px',\n                tableBorder: '0px',\n                apiBorder: '0px',\n                loginBorder: '3px'\n            });\n        else if (window.location.pathname === '/table')\n            this.setState({\n                homeBorder: '0px',\n                tableBorder: '3px',\n                apiBorder: '0px',\n                loginBorder: '0px'\n            });\n        else if (window.location.pathname === '/restapi')\n            this.setState({\n                homeBorder: '0px',\n                tableBorder: '0px',\n                apiBorder: '3px',\n                loginBorder: '0px'\n            })\n        else\n            this.setState({\n                homeBorder: '3px',\n                tableBorder: '0px',\n                apiBorder: '0px',\n                loginBorder: '0px'\n            })\n    }\n\n    render() {\n        return (\n            <div>\n\n                <div>\n                    <Router history={history}>\n                        <Switch>\n                            <Route\n                                exact\n                                strict\n                                path=\"/\"\n                                component={Home}\n                            />\n                        \n                            <Route\n                                default\n                                path=\"/\"\n                                component={Home}\n                            />\n                   \n                            />\n                        </Switch>\n                    </Router>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport AWSCredentials from './Credentials';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\nAmplify.configure({\n    Auth: {\n        mandatorySignIn: true,\n        region: AWSCredentials.cognito.REGION,\n        userPoolId: AWSCredentials.cognito.USER_POOL_ID,\n        userPoolWebClientId: AWSCredentials.cognito.APP_CLIENT_ID\n    },\n    Analytics: {\n        disabled: true\n    }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}